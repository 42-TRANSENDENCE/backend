var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.564,1,2.691]],["body/controllers/AppController.html",[0,2.489,1,4.283,2,1.979,3,0.266,4,0.266,5,0.241,6,4.167,7,0.46,8,1.655,9,2.16,10,6.076,11,4.83,12,1.642,13,0.017,14,4.83,15,2.161,16,0.964,17,4.83,18,1.316,19,1.205,20,1.205,21,3.955,22,1.316,23,1.718,24,0.499,25,2.579,26,3.405,27,0.799,28,4.167,29,2.435,30,4.028,31,4.167,32,2.927,33,4.83,34,3.731,35,0.266,36,0.241,37,2.579,38,1.799,39,4.83,40,3.731,41,4.83,42,4.83,43,1.375,44,4.167,45,0.013,46,0.013]],["title/modules/AppModule.html",[47,1.358,48,2.691]],["body/modules/AppModule.html",[1,3.822,2,1.9,3,0.178,4,0.178,5,0.161,9,1.052,13,0.017,24,0.532,27,0.535,30,3.954,31,2.792,35,0.178,36,0.161,45,0.01,46,0.01,47,1.65,48,5.319,49,1.465,50,2.213,51,2.792,52,2.792,53,2.792,54,4.246,55,4.246,56,4.246,57,4.246,58,4.246,59,3.954,60,2.477,61,1.728,62,1.544,63,3.236,64,2.633,65,3.286,66,4.639,67,4.002,68,3.361,69,1.728,70,4.639,71,2.792,72,4.002,73,3.236,74,3.236,75,3.236,76,3.236,77,3.236,78,1.837,79,3.236,80,1.961,81,3.236,82,3.236,83,3.236,84,2.792,85,1.961,86,3.236,87,3.236,88,1.151,89,3.236,90,3.236,91,3.236,92,7.381,93,3.236,94,3.236,95,3.236,96,3.236,97,3.236,98,2.792,99,2.792,100,2.792,101,2.792,102,2.499,103,2.792,104,2.499,105,3.236,106,3.236,107,3.236,108,3.236,109,3.236,110,3.236,111,3.236,112,3.236,113,3.236,114,3.236,115,3.236,116,2.792,117,3.236,118,2.792,119,3.236,120,2.792,121,3.236,122,2.792,123,3.236,124,3.236]],["title/injectables/AppService.html",[30,2.314,125,0.663]],["body/injectables/AppService.html",[3,0.32,4,0.32,5,0.29,13,0.016,24,0.416,27,0.96,30,4.118,35,0.32,36,0.29,45,0.015,46,0.015,125,1.179,126,2.163,127,5.01]],["title/controllers/AuthController.html",[0,1.564,128,2.691]],["body/controllers/AuthController.html",[0,0.791,2,0.791,3,0.106,4,0.106,5,0.096,7,0.184,8,0.851,9,1.956,12,1.537,13,0.017,15,2.331,16,0.903,18,1.232,19,1.129,20,1.129,21,4.025,22,1.232,23,1.112,24,0.487,26,1.361,27,0.319,29,0.973,32,1.17,34,2.414,35,0.106,36,0.096,38,1.466,40,1.491,43,1.513,45,0.007,46,0.007,62,0.921,68,2.234,69,1.031,88,0.687,128,2.203,129,1.666,130,1.257,131,1.931,132,3.125,133,3.125,134,3.011,135,4.286,136,1.931,137,2.567,138,1.931,139,3.125,140,3.919,141,3.125,142,2.034,143,3.125,144,1.931,145,1.931,146,0.425,147,1.931,148,2.004,149,1.931,150,4.776,151,3.125,152,1.931,153,1.931,154,1.931,155,2.696,156,3.125,157,1.931,158,1.17,159,1.931,160,3.234,161,3.188,162,3.919,163,3.837,164,3.188,165,1.931,166,2.203,167,2.414,168,1.931,169,1.931,170,1.931,171,1.931,172,1.931,173,2.034,174,1.491,175,1.666,176,1.782,177,1.257,178,3.936,179,1.491,180,2.696,181,2.414,182,1.931,183,2.696,184,3.125,185,3.396,186,2.774,187,1.491,188,1.931,189,1.612,190,1.096,191,1.984,192,1.257,193,1.257,194,1.931,195,1.666,196,2.696,197,1.361,198,1.361,199,1.931,200,1.931,201,1.931,202,1.257,203,1.031,204,1.361,205,0.874,206,1.361,207,1.666,208,1.931,209,1.931,210,1.931,211,1.931,212,1.931,213,1.491,214,1.47,215,0.656,216,1.931,217,0.754,218,1.931,219,1.931,220,2.203,221,1.931,222,2.095,223,3.125,224,2.035,225,1.931,226,4.587,227,2.696,228,1.931,229,2.203,230,4.587,231,1.931,232,1.931,233,1.931,234,1.931,235,1.491,236,1.931,237,3.125,238,4.501,239,3.396,240,1.666,241,3.936,242,3.125,243,2.234,244,1.931,245,1.17,246,1.931,247,1.931,248,1.491,249,1.491,250,1.685,251,2.696,252,2.696,253,1.931,254,2.414,255,1.931,256,1.931,257,1.931,258,1.666,259,1.931,260,1.931,261,1.931,262,1.931,263,1.931,264,1.931,265,1.931,266,1.931,267,2.696,268,1.931,269,1.931,270,1.931,271,1.931,272,1.931,273,1.931,274,3.125,275,1.931,276,1.666,277,1.931,278,1.931,279,1.931]],["title/modules/AuthModule.html",[47,1.358,54,2.485]],["body/modules/AuthModule.html",[2,2.045,3,0.198,4,0.198,5,0.179,13,0.017,19,0.896,24,0.54,27,0.594,35,0.198,36,0.179,45,0.011,46,0.011,47,1.776,49,1.626,50,2.382,54,4.934,59,4.089,60,2.666,61,1.917,62,1.713,64,2.833,65,3.025,84,3.098,85,2.176,88,1.277,128,4.045,142,2.337,148,1.116,191,3.401,192,3.25,205,2.598,280,3.098,281,3.591,282,3.098,283,4.392,284,4.392,285,4.392,286,3.83,287,3.591,288,4.045,289,4.992,290,3.591,291,2.774,292,2.337,293,1.81,294,2.038,295,4.307,296,2.337,297,3.591,298,3.519,299,3.591,300,3.759,301,3.025,302,3.591,303,4.992,304,3.591,305,3.591,306,3.591,307,3.591,308,3.591,309,3.098,310,3.591,311,3.098,312,3.591,313,3.098,314,3.591,315,2.774]],["title/injectables/AuthService.html",[125,0.663,191,1.924]],["body/injectables/AuthService.html",[3,0.126,4,0.126,5,0.114,7,0.217,8,0.972,9,2.066,13,0.017,15,2.2,16,1.234,18,1.558,19,1.427,20,1.427,22,1.558,23,1.563,24,0.474,27,0.377,35,0.126,36,0.114,38,1.851,43,1.627,45,0.008,46,0.008,68,3.392,69,1.218,85,1.382,98,1.968,99,1.968,100,1.968,102,1.761,104,1.761,125,0.619,126,0.85,134,1.382,137,2.821,146,0.645,167,2.755,176,2.589,191,1.798,202,1.484,204,1.607,205,1.032,206,1.607,214,1.942,215,1.833,217,1.393,222,2.066,224,2.036,229,3.097,230,3.791,235,1.761,248,1.761,249,1.761,250,2.009,291,1.761,296,1.484,309,4.288,316,1.968,317,0.59,318,4.97,319,4.394,320,3.568,321,3.568,322,3.568,323,3.568,324,2.281,325,3.838,326,5.976,327,5.156,328,3.568,329,3.078,330,2.281,331,2.281,332,1.558,333,4.288,334,2.281,335,1.461,336,1.393,337,2.322,338,1.413,339,3.568,340,2.281,341,3.568,342,2.281,343,2.514,344,3.568,345,2.281,346,3.568,347,2.281,348,3.568,349,2.514,350,1.968,351,3.791,352,1.761,353,3.791,354,1.761,355,1.761,356,1.761,357,2.281,358,2.494,359,1.607,360,1.968,361,1.607,362,1.968,363,2.322,364,3.568,365,2.514,366,2.281,367,3.568,368,2.281,369,2.281,370,4.97,371,4.97,372,3.568,373,2.281,374,2.281,375,2.281,376,1.761,377,3.568,378,1.761,379,2.281,380,1.968,381,2.281,382,4.394,383,2.514,384,2.494,385,2.281,386,2.821,387,2.281,388,2.281,389,2.281,390,1.968,391,1.968,392,3.078,393,3.078,394,1.968,395,2.514,396,3.078,397,2.281,398,2.281,399,2.281,400,2.281,401,2.281,402,2.281,403,2.281,404,2.281,405,1.968]],["title/guards/AuthSessionGuard.html",[198,2.691,406,2.949]],["body/guards/AuthSessionGuard.html",[3,0.262,4,0.262,5,0.237,7,0.453,8,1.64,13,0.017,16,0.95,18,1.296,19,1.188,20,1.188,22,1.296,24,0.341,25,2.542,27,0.787,35,0.262,36,0.237,43,1.355,45,0.013,46,0.013,88,1.693,125,1.045,146,0.513,176,3.141,198,4.243,214,1.956,215,2.046,222,1.956,254,3.677,317,0.787,384,2.702,407,3.677,408,5.194,409,4.107,410,5.986,411,5.194,412,5.359,413,4.76,414,4.107,415,3.648,416,6.02,417,3.677,418,4.76,419,4.107,420,4.76,421,6.02,422,4.107]],["title/interfaces/Ball.html",[423,1.135,424,2.038]],["body/interfaces/Ball.html",[3,0.248,4,0.248,5,0.224,7,0.428,13,0.017,24,0.322,35,0.375,45,0.013,46,0.013,146,0.626,317,0.96,332,1.751,338,1.326,423,2.092,424,3.628,425,2.147,426,2.553,427,4.118,428,4.118,429,4.16,430,3.296,431,2.037,432,2.726,433,2.726,434,2.726,435,3.649,436,2.726,437,2.726,438,2.402,439,2.726,440,3.433,441,2.726,442,2.726,443,2.928,444,3.649,445,2.726,446,3.1,447,2.553,448,2.553,449,2.553,450,2.402,451,2.928]],["title/entities/ChannelMember.html",[452,1.924,453,2.314]],["body/entities/ChannelMember.html",[3,0.214,4,0.214,5,0.194,7,0.37,12,2.35,13,0.017,16,1.38,24,0.378,35,0.214,36,0.194,45,0.011,46,0.011,88,2.282,146,0.746,250,1.964,317,0.872,332,1.826,452,2.658,453,4.285,454,2.357,455,3.356,456,5.179,457,4.621,458,4.621,459,5.162,460,5.274,461,3.89,462,3.89,463,3.89,464,2.993,465,5.274,466,5.274,467,5.274,468,4.955,469,4.621,470,3.89,471,4.621,472,3.89,473,4.621,474,3.89,475,3.89,476,4.217,477,5.984,478,3.89,479,3.89,480,2.077,481,3.196,482,3.89,483,3.004,484,5.274,485,3.89]],["title/entities/Channels.html",[452,1.924,481,2.314]],["body/entities/Channels.html",[3,0.199,4,0.199,5,0.18,7,0.343,12,2.355,13,0.017,16,1.383,24,0.258,35,0.199,36,0.18,45,0.011,46,0.011,88,2.046,146,0.748,214,1.869,250,2.143,317,0.828,332,1.693,335,2.894,338,1.419,415,3.035,452,2.524,453,3.486,454,2.186,457,4.443,458,4.443,464,2.842,468,4.8,469,4.443,471,4.443,473,4.443,476,2.542,480,1.926,481,3.035,486,3.112,487,4.443,488,4.054,489,4.054,490,3.607,491,3.607,492,2.786,493,4.8,494,3.607,495,6.215,496,4.8,497,5.008,498,3.607,499,3.529,500,5.008,501,3.868,502,5.008,503,3.607,504,3.868,505,3.607,506,3.607,507,5.008,508,3.607,509,3.607,510,6.529,511,3.607,512,3.607,513,3.607,514,3.607,515,3.607]],["title/controllers/ChannelsController.html",[0,1.564,516,2.691]],["body/controllers/ChannelsController.html",[0,1.377,2,1.377,3,0.185,4,0.185,5,0.168,7,0.32,8,1.298,9,2.295,12,1.882,13,0.018,16,1.105,18,1.298,19,1.189,20,1.189,22,1.508,23,1.97,24,0.473,27,0.556,29,1.695,35,0.185,36,0.168,37,1.795,43,1.576,45,0.01,46,0.01,130,2.189,146,0.514,148,2.195,173,3.922,177,2.189,186,3.904,220,3.904,238,2.597,243,2.706,294,1.908,338,1.265,464,3.143,489,3.36,516,3.36,517,2.901,518,3.362,519,4.778,520,4.778,521,5.199,522,3.362,523,4.247,524,5.538,525,4.767,526,3.362,527,2.901,528,4.767,529,3.362,530,3.362,531,4.113,532,3.362,533,3.356,534,2.901,535,3.922,536,2.901,537,3.362,538,3.362,539,3.362,540,3.362,541,4.113,542,3.362,543,2.901,544,3.362,545,3.362,546,3.362,547,3.362]],["title/classes/ChannelsGateway.html",[36,0.19,78,2.167]],["body/classes/ChannelsGateway.html",[3,0.282,4,0.282,5,0.255,7,0.487,8,1.715,12,1.739,13,0.017,16,1.257,22,1.394,24,0.451,35,0.282,36,0.255,45,0.014,46,0.014,78,3.575,146,0.552,158,3.101,317,1.042,395,5.246,431,2.317,548,2.732,549,4.415,550,6.142,551,5.887,552,5.117,553,5.117,554,4.415,555,5.434,556,3.607,557,5.117,558,4.415]],["title/modules/ChannelsModule.html",[47,1.358,55,2.485]],["body/modules/ChannelsModule.html",[2,2.413,3,0.254,4,0.254,5,0.229,13,0.017,24,0.534,27,0.761,35,0.254,36,0.229,45,0.013,46,0.013,47,2.095,49,2.082,50,2.811,55,4.856,60,3.145,61,2.456,62,2.195,64,3.343,65,3.57,80,4.391,148,1.831,292,2.994,293,2.318,294,2.611,453,3.57,481,2.787,516,4.58,533,4.391,534,3.968,559,3.968,560,3.968,561,3.968,562,4.6,563,4.6,564,3.968,565,3.968,566,4.6,567,4.6]],["title/injectables/ChannelsService.html",[125,0.663,533,2.314]],["body/injectables/ChannelsService.html",[3,0.165,4,0.165,5,0.15,7,0.286,8,1.196,9,2.325,13,0.017,16,1.214,18,1.557,19,1.426,20,1.426,22,1.557,23,1.847,24,0.47,27,0.496,35,0.165,36,0.15,38,1.635,43,1.478,45,0.01,46,0.01,78,3.726,125,0.762,126,1.117,146,0.617,148,0.932,214,1.977,215,1.019,217,1.714,222,1.857,224,1.798,250,1.635,293,1.512,294,1.702,332,1.657,338,1.537,453,2.66,456,2.316,459,2.587,480,1.601,481,3.147,487,2.316,488,4.287,489,4.627,519,3.788,520,3.788,521,4.931,527,3.788,533,2.66,558,2.587,564,2.587,565,2.587,568,2.587,569,4.39,570,2.999,571,5.391,572,4.48,573,5.193,574,2.999,575,4.39,576,4.39,577,5.483,578,2.999,579,2.999,580,2.999,581,2.999,582,2.999,583,2.316,584,2.999,585,2.999,586,2.316,587,2.999,588,3.788,589,2.999,590,2.999,591,2.999,592,2.999,593,4.39,594,2.999,595,2.999,596,4.39,597,2.999,598,2.999,599,2.587,600,5.193,601,2.999,602,2.999,603,2.587,604,2.999,605,2.999,606,2.999,607,2.999,608,2.999,609,2.999,610,2.999,611,2.587,612,2.999,613,2.999,614,2.999,615,2.587]],["title/classes/ChatGateway.html",[36,0.19,616,2.949]],["body/classes/ChatGateway.html",[3,0.271,4,0.271,5,0.245,7,0.468,8,1.674,12,2.088,13,0.017,16,1.226,18,1.339,19,1.227,20,1.227,22,1.339,24,0.44,35,0.271,36,0.245,45,0.013,46,0.013,146,0.663,158,2.98,317,1.016,338,1.403,386,2.791,395,4.948,431,2.226,548,2.626,551,5.782,554,4.243,555,5.301,556,3.466,616,4.746,617,4.243,618,6.145,619,4.918,620,4.918,621,6.145,622,4.918,623,4.918,624,4.918,625,4.918,626,4.918,627,4.918]],["title/entities/Chats.html",[452,1.924,628,2.485]],["body/entities/Chats.html",[3,0.222,4,0.222,5,0.201,7,0.384,12,2.426,13,0.017,16,1.424,24,0.289,35,0.222,36,0.201,45,0.012,46,0.012,88,2.486,146,0.77,250,2.27,317,0.894,332,1.976,338,1.234,452,2.724,454,2.444,456,4.707,457,4.707,458,4.707,468,5.029,469,4.707,471,4.707,473,4.707,476,4.925,480,2.153,492,4.707,499,4.925,501,4.707,628,3.518,629,3.48,630,4.296,631,6.095,632,5.258,633,4.033,634,4.033,635,4.033,636,4.033,637,4.033,638,4.033,639,4.033]],["title/controllers/ChatsController.html",[0,1.564,640,2.691]],["body/controllers/ChatsController.html",[0,1.636,2,1.636,3,0.22,4,0.22,5,0.199,7,0.38,8,1.462,9,2.264,12,1.825,13,0.017,16,1.071,18,1.462,19,1.339,20,1.339,22,1.462,23,1.91,24,0.464,27,0.661,35,0.22,36,0.199,37,2.132,43,1.528,45,0.012,46,0.012,130,2.6,146,0.579,148,2.303,173,2.6,177,2.6,186,4.275,220,4.275,243,3.681,250,2,294,2.267,332,1.462,464,2.267,483,3.085,531,3.446,535,3.948,536,3.446,541,3.446,630,4.275,640,3.784,641,3.446,642,3.446,643,5.232,644,4.632,645,3.446,646,5.369,647,3.994,648,3.446,649,5.369,650,3.994,651,3.675,652,3.446,653,3.994,654,3.994,655,3.994,656,5.369,657,3.994,658,3.994,659,3.994,660,3.994,661,3.994]],["title/modules/ChatsModule.html",[47,1.358,56,2.485]],["body/modules/ChatsModule.html",[2,2.494,3,0.267,4,0.267,5,0.242,13,0.017,24,0.526,27,0.801,35,0.267,36,0.242,45,0.013,46,0.013,47,2.165,49,2.193,50,2.905,56,4.78,60,3.25,61,2.587,62,2.312,64,3.455,65,2.936,148,1.892,292,3.153,293,2.442,294,2.75,628,3.153,640,4.692,651,4.45,652,4.18,662,4.18,663,4.18,664,4.845,665,4.845,666,4.845,667,4.845,668,4.845]],["title/injectables/ChatsService.html",[125,0.663,651,2.314]],["body/injectables/ChatsService.html",[3,0.18,4,0.18,5,0.163,7,0.311,8,1.272,9,2.127,13,0.017,16,1.088,18,1.485,19,1.36,20,1.36,22,1.272,23,1.163,24,0.45,27,0.541,35,0.18,36,0.163,38,1.218,43,1.33,45,0.01,46,0.01,125,0.811,126,1.218,146,0.588,148,1.016,214,1.772,215,1.111,217,1.824,222,2.045,224,1.914,243,3.377,250,2.344,293,1.647,294,1.855,332,1.877,336,1.824,338,1.574,480,1.745,483,2.524,571,5.205,572,4.704,577,6.14,583,2.524,586,2.524,588,2.82,611,2.82,615,2.82,628,3.041,630,4.614,632,2.82,643,4.704,644,4.031,645,2.82,648,4.031,651,2.831,669,2.524,670,3.269,671,3.269,672,4.672,673,3.269,674,3.269,675,3.269,676,2.82,677,2.82,678,3.269,679,3.269,680,3.269,681,3.269,682,3.269,683,3.269,684,3.269,685,3.269,686,3.269,687,3.269,688,4.672,689,3.269,690,3.269,691,4.672,692,3.269,693,3.269,694,3.269,695,3.269,696,3.269,697,3.269,698,3.269,699,3.269,700,3.269,701,3.269,702,3.269,703,3.269,704,2.524,705,3.269,706,3.269,707,3.269,708,3.269]],["title/classes/CreateChannelDto.html",[36,0.19,523,2.691]],["body/classes/CreateChannelDto.html",[3,0.239,4,0.239,5,0.216,7,0.412,12,2.146,13,0.017,16,1.26,24,0.406,29,2.184,35,0.239,36,0.283,45,0.012,46,0.012,140,4.641,146,0.681,317,0.937,332,1.543,338,1.53,487,4.877,488,4.45,489,4.45,523,3.994,548,2.313,709,5.778,710,3.737,711,7.451,712,4.332,713,5.666,714,4.332,715,4.332,716,5.666,717,4.332,718,4.332,719,4.332,720,5.173,721,6.697,722,4.332,723,6.697,724,3.053,725,6.314]],["title/classes/CreateUserDto.html",[36,0.19,162,2.485]],["body/classes/CreateUserDto.html",[3,0.284,4,0.284,5,0.257,7,0.49,12,1.75,13,0.017,16,1.028,24,0.453,29,2.596,35,0.284,36,0.315,45,0.014,46,0.014,146,0.555,162,4.115,317,1.046,338,1.444,464,2.923,496,3.977,548,2.749,720,4.883,724,3.629,726,4.443,727,5.284,728,5.149,729,6.323,730,6.323,731,6.323,732,6.323,733,5.149,734,5.149,735,5.149,736,5.149]],["title/modules/DatabaseModule.html",[47,1.358,57,2.485]],["body/modules/DatabaseModule.html",[3,0.276,4,0.276,5,0.25,13,0.017,24,0.484,27,0.828,35,0.276,36,0.25,45,0.014,46,0.014,47,2.21,49,2.267,57,4.045,65,3.766,67,5.362,68,4.01,69,2.674,88,1.781,116,4.32,118,4.32,120,4.32,122,4.32,146,0.54,292,3.259,293,2.524,442,3.035,454,3.035,488,3.529,737,5.008,738,5.008,739,5.008,740,5.008,741,5.008,742,5.008,743,5.008,744,5.008,745,5.008,746,5.008,747,5.008,748,5.008]],["title/modules/EventsModule.html",[47,1.358,80,2.314]],["body/modules/EventsModule.html",[3,0.291,4,0.291,5,0.263,13,0.017,24,0.46,27,0.874,35,0.291,36,0.263,45,0.014,46,0.014,47,2.284,49,2.391,50,3.064,60,3.429,61,2.82,62,2.52,64,2.998,78,4.348,80,4.47,315,4.96,749,4.557,750,4.557,751,5.282,752,5.282]],["title/guards/FourtyTwoGuard.html",[193,2.485,406,2.949]],["body/guards/FourtyTwoGuard.html",[3,0.196,4,0.196,5,0.177,7,0.338,8,1.349,9,2.185,13,0.017,15,1.762,16,1.139,18,1.554,19,1.423,20,1.423,22,1.349,24,0.481,25,3.591,27,0.588,35,0.196,36,0.177,38,1.323,43,1.41,45,0.011,46,0.011,85,2.153,88,1.263,125,0.86,137,2.016,146,0.615,176,2.795,191,3.39,192,2.312,193,3.225,203,1.897,204,2.504,205,1.608,206,2.504,214,2.006,215,1.939,217,1.934,222,2.006,224,2.337,235,2.743,248,2.743,249,2.743,317,0.588,325,4.768,329,4.923,343,4.576,349,2.504,360,3.065,361,2.504,362,3.065,378,2.743,380,3.065,384,2.812,395,2.504,396,3.065,405,3.065,407,2.743,410,5.326,411,4.275,412,4.768,414,3.065,417,2.743,419,3.065,753,4.768,754,3.065,755,4.955,756,3.065,757,3.552,758,3.552,759,4.768,760,4.955,761,3.552,762,3.552,763,3.065,764,3.552,765,3.552,766,3.552,767,3.065,768,3.552,769,3.552]],["title/interfaces/FourtyTwoToken.html",[137,2.167,423,1.135]],["body/interfaces/FourtyTwoToken.html",[3,0.269,4,0.269,5,0.243,7,0.464,13,0.017,35,0.269,45,0.013,46,0.013,137,3.468,146,0.793,205,2.206,317,1.011,332,2.003,338,1.77,423,1.449,425,2.325,770,4.205,771,4.205,772,6.998,773,6.998,774,6.998,775,6.998,776,6.998,777,6.998]],["title/classes/GameGateway.html",[36,0.19,778,2.691]],["body/classes/GameGateway.html",[3,0.122,4,0.122,5,0.11,7,0.21,8,0.947,12,2.139,13,0.017,16,1.369,18,1.789,19,1.639,20,1.639,22,1.789,24,0.349,35,0.122,36,0.11,38,1.295,45,0.008,46,0.008,146,0.731,158,3.981,214,1.13,217,1.357,222,1.586,317,0.575,335,0.904,336,0.862,338,1.547,363,3.671,417,2.685,430,4.417,431,0.999,438,1.856,446,1.856,450,3.011,548,1.178,550,3,556,1.555,778,2.45,779,1.904,780,4.302,781,3.322,782,4.881,783,3.477,784,4.302,785,3.711,786,3.711,787,3.711,788,4.302,789,4.302,790,4.302,791,4.302,792,2.207,793,2.77,794,4.302,795,2.958,796,2.207,797,2.207,798,3.322,799,2.207,800,2.207,801,2.207,802,2.207,803,2.207,804,2.207,805,2.207,806,4.724,807,2.207,808,2.207,809,2.207,810,2.207,811,2.207,812,2.207,813,2.207,814,2.207,815,2.207,816,2.207,817,2.207,818,2.207,819,1.904,820,2.207,821,2.207,822,2.207,823,2.207,824,2.207,825,1.904,826,2.207,827,2.207,828,2.207,829,2.207,830,2.207,831,1.704,832,1.904,833,2.207,834,3,835,2.207,836,2.207,837,3.711,838,2.207,839,5.092,840,2.207,841,3.477,842,3.477,843,2.207,844,2.207,845,6.116,846,5.31,847,2.207,848,2.207,849,2.207,850,2.207,851,2.207,852,1.904,853,2.207,854,2.207,855,2.207,856,2.207,857,2.207,858,3.477,859,4.211,860,3.477,861,2.207,862,2.207,863,2.207]],["title/modules/GameModule.html",[47,1.358,58,2.485]],["body/modules/GameModule.html",[2,2.026,3,0.273,4,0.273,5,0.247,13,0.017,24,0.504,27,0.818,35,0.273,36,0.247,45,0.013,46,0.013,47,2.194,49,2.24,50,2.943,58,4.926,60,3.293,61,2.641,62,2.361,64,3.5,778,4.347,793,4.249,795,4.537,831,3.821,832,4.268,864,4.268,865,4.268,866,4.947,867,4.947]],["title/injectables/GameService.html",[125,0.663,793,2.167]],["body/injectables/GameService.html",[3,0.06,4,0.06,5,0.054,7,0.104,8,0.523,13,0.018,16,1.161,18,1.521,19,1.393,20,1.393,22,1.521,24,0.137,27,0.18,35,0.06,36,0.054,43,0.547,45,0.004,46,0.004,88,1.395,125,0.333,126,0.405,142,3.225,146,0.681,158,3.966,214,2.221,215,1.058,222,2.11,250,0.405,311,0.939,317,0.318,332,1.349,335,0.787,336,0.75,337,3.225,338,1.619,386,1.09,415,2.568,424,0.581,427,1.164,428,1.164,431,0.493,432,2.568,433,2.568,435,0.618,440,1.661,441,3.827,445,1.886,446,0.581,447,3.301,448,3.301,450,2.744,464,2.016,493,3.827,499,2.193,504,0.84,781,3.827,785,2.225,786,2.225,787,2.225,793,1.09,798,4.492,834,5.898,852,1.657,859,4.818,868,0.767,869,2.579,870,2.579,871,1.921,872,2.579,873,2.579,874,2.579,875,2.579,876,2.579,877,2.579,878,3.112,879,2.579,880,2.579,881,2.579,882,1.088,883,2.685,884,1.921,885,1.088,886,1.088,887,1.088,888,5.554,889,1.088,890,1.088,891,1.088,892,1.088,893,1.088,894,1.088,895,1.088,896,1.088,897,1.088,898,1.088,899,1.088,900,1.088,901,1.088,902,1.088,903,3.065,904,1.088,905,1.921,906,1.088,907,1.088,908,1.088,909,1.088,910,1.088,911,1.088,912,1.088,913,1.088,914,1.088,915,1.088,916,3.891,917,1.088,918,1.088,919,1.484,920,1.657,921,2.403,922,0.84,923,1.657,924,1.088,925,1.088,926,3.029,927,3.029,928,3.273,929,0.939,930,2.403,931,0.939,932,1.484,933,1.657,934,1.484,935,1.992,936,1.992,937,1.992,938,0.84,939,2.403,940,1.484,941,2.403,942,0.84,943,0.939,944,2.579,945,1.921,946,2.579,947,1.921,948,1.921,949,3.112,950,1.921,951,1.088,952,1.921,953,1.921,954,1.921,955,1.088,956,1.088,957,1.088,958,1.088,959,2.579,960,4.746,961,3.112,962,1.921,963,3.112,964,1.921,965,4.51,966,1.921,967,1.921,968,1.921,969,1.921,970,1.088,971,1.088,972,1.088,973,1.088,974,1.484,975,1.088,976,1.088,977,1.088,978,1.921,979,1.921,980,1.088,981,3.112,982,1.088,983,2.579,984,1.088,985,1.088,986,1.088,987,1.088,988,1.088,989,1.088,990,2.579,991,1.088,992,1.088,993,1.088,994,1.088,995,1.088,996,1.088,997,1.088,998,1.088,999,1.088,1000,1.088,1001,1.088,1002,3.112,1003,1.921,1004,1.088,1005,1.921,1006,1.088,1007,1.088,1008,1.921,1009,1.088,1010,1.088,1011,3.112,1012,3.112,1013,1.088,1014,1.088,1015,1.088,1016,1.088,1017,1.088,1018,1.088,1019,1.088,1020,2.579,1021,1.921,1022,1.921,1023,1.088,1024,2.579,1025,3.552,1026,1.088,1027,2.579,1028,1.088,1029,2.579,1030,1.088,1031,1.921,1032,1.088,1033,1.921,1034,1.921,1035,1.088]],["title/interfaces/Gameinfo.html",[423,1.135,444,2.167]],["body/interfaces/Gameinfo.html",[3,0.234,4,0.234,5,0.212,7,0.405,13,0.017,24,0.304,35,0.367,45,0.012,46,0.012,146,0.745,317,0.926,332,1.704,338,1.279,423,2.055,424,3.918,425,2.029,426,2.414,427,2.578,428,2.578,429,3.552,430,3.177,431,1.925,432,2.578,433,2.578,434,2.578,435,4.165,436,2.578,437,2.578,438,2.271,439,2.578,440,3.861,441,2.578,442,2.578,443,2.768,444,3.774,445,4.03,446,3.55,447,3.774,448,3.774,449,2.414,450,2.271,451,2.768]],["title/injectables/JwtAuthGuard.html",[32,2.314,125,0.663]],["body/injectables/JwtAuthGuard.html",[3,0.311,4,0.311,5,0.282,13,0.017,24,0.478,27,0.934,32,4.05,35,0.311,36,0.282,45,0.015,46,0.015,125,1.16,126,2.103,1036,3.675,1037,4.361,1038,4.361,1039,3.205,1040,3.422,1041,4.361]],["title/injectables/JwtRefreshAuthGuard.html",[125,0.663,197,2.691]],["body/injectables/JwtRefreshAuthGuard.html",[3,0.309,4,0.309,5,0.28,13,0.017,24,0.476,27,0.928,35,0.309,36,0.28,45,0.014,46,0.014,125,1.155,126,2.089,134,4.034,197,4.692,1036,3.65,1037,4.331,1038,4.331,1039,3.183,1040,3.398,1041,4.331]],["title/injectables/JwtRefreshStrategy.html",[125,0.663,283,2.485]],["body/injectables/JwtRefreshStrategy.html",[3,0.207,4,0.207,5,0.187,7,0.357,8,1.4,9,1.907,13,0.017,15,1.829,16,1.171,18,1.4,19,1.283,20,1.283,21,2.439,22,1.021,23,1.333,24,0.501,25,3.651,27,0.62,35,0.207,36,0.187,43,1.463,45,0.011,46,0.011,68,3.881,69,2.001,88,1.333,125,0.892,126,1.396,134,2.271,146,0.633,176,3.095,189,2.587,190,2.127,202,2.439,203,2.001,214,2.151,215,1.747,217,2.007,222,1.218,229,4.137,283,3.346,317,0.85,335,1.535,336,1.463,358,3.585,359,2.641,363,3.82,1039,2.127,1040,2.271,1042,4.878,1043,3.233,1044,3.624,1045,2.894,1046,4.137,1047,5.141,1048,4.436,1049,3.747,1050,5.141,1051,3.971,1052,2.894,1053,3.971,1054,2.641,1055,3.346,1056,2.894,1057,2.894,1058,2.894,1059,3.747,1060,2.894,1061,3.747,1062,3.747,1063,3.747,1064,3.747,1065,3.747,1066,3.233]],["title/injectables/JwtStrategy.html",[125,0.663,284,2.485]],["body/injectables/JwtStrategy.html",[3,0.214,4,0.214,5,0.194,7,0.37,8,1.436,9,1.944,13,0.017,15,1.384,16,1.194,18,1.436,19,1.316,20,1.316,22,1.059,23,1.384,24,0.506,25,3.195,27,0.643,35,0.214,36,0.194,38,1.964,43,1.501,45,0.011,46,0.011,68,3.924,69,2.077,125,0.915,126,1.449,146,0.645,176,3.13,189,2.628,190,2.208,202,2.532,203,2.077,214,2.179,215,1.792,217,2.059,224,1.593,245,2.357,250,1.449,284,3.433,317,0.872,335,1.593,336,1.519,358,3.641,359,2.741,363,2.532,1039,2.208,1040,2.357,1044,3.717,1045,3.004,1046,4.217,1051,3.004,1052,3.004,1053,3.004,1054,2.741,1055,3.433,1056,3.004,1057,3.004,1058,3.004,1060,3.004,1066,3.356,1067,3.356,1068,5.274,1069,4.55,1070,3.89,1071,5.274,1072,3.89,1073,3.356,1074,3.356,1075,3.89,1076,3.89,1077,3.356,1078,3.356]],["title/interfaces/JwtTokenPayload.html",[358,2.167,423,1.135]],["body/interfaces/JwtTokenPayload.html",[3,0.299,4,0.299,5,0.27,7,0.516,13,0.016,15,1.929,20,1.628,35,0.299,45,0.014,46,0.014,146,0.704,250,2.705,317,1.079,332,1.906,333,6.265,358,3.703,415,4.241,423,1.612,425,2.587,1079,4.678,1080,4.188]],["title/injectables/JwtTwoFactorGuard.html",[125,0.663,1081,2.485]],["body/injectables/JwtTwoFactorGuard.html",[3,0.309,4,0.309,5,0.28,13,0.017,24,0.476,27,0.928,35,0.309,36,0.28,45,0.014,46,0.014,125,1.155,126,2.089,205,2.539,245,3.398,1036,3.65,1038,4.331,1039,3.183,1040,3.398,1041,4.331,1081,4.333,1082,4.838]],["title/injectables/JwtTwoFactorStrategy.html",[125,0.663,285,2.485]],["body/injectables/JwtTwoFactorStrategy.html",[3,0.2,4,0.2,5,0.181,7,0.346,8,1.37,9,1.876,13,0.017,15,1.291,16,1.152,18,1.37,19,1.255,20,1.255,22,0.989,23,1.291,24,0.497,25,3.082,27,0.601,35,0.2,36,0.181,38,1.874,43,1.643,45,0.011,46,0.011,68,3.843,69,1.939,125,0.873,126,1.352,146,0.623,148,1.794,176,3.065,189,2.553,190,2.061,202,2.363,203,1.939,205,2.821,214,2.127,215,1.71,217,1.964,222,1.18,224,1.487,240,3.133,245,3.777,267,4.98,285,3.275,317,0.832,335,1.487,336,1.418,358,3.537,359,2.559,363,2.363,543,4.98,1039,2.061,1040,2.2,1042,4.813,1044,3.546,1045,2.804,1046,4.069,1051,3.885,1052,2.804,1053,3.885,1054,2.559,1055,3.275,1056,2.804,1057,2.804,1058,2.804,1060,2.804,1069,4.34,1073,3.133,1074,3.133,1077,3.133,1078,3.133,1083,3.133,1084,5.031,1085,3.631,1086,5.031,1087,3.631,1088,3.631,1089,3.631,1090,3.631,1091,3.631]],["title/injectables/LobbyService.html",[125,0.663,795,2.314]],["body/injectables/LobbyService.html",[3,0.153,4,0.153,5,0.139,7,0.265,8,1.131,13,0.017,16,1.279,18,1.684,19,1.543,20,1.543,22,1.605,24,0.394,27,0.46,35,0.153,36,0.139,37,1.484,43,1.414,45,0.009,46,0.009,88,0.989,125,0.72,126,1.036,146,0.691,158,3.338,214,2.082,215,1.411,217,1.085,222,1.614,317,0.687,335,1.139,336,1.085,337,3.233,338,1.463,415,2.515,430,4.269,431,1.259,447,2.356,448,2.356,450,2.216,464,1.578,781,3.206,793,3.509,795,2.515,798,4.949,806,5.087,819,3.581,825,3.581,831,2.147,837,5.528,839,4.753,916,4.753,1092,2.399,1093,4.967,1094,4.151,1095,4.151,1096,4.151,1097,2.78,1098,2.78,1099,4.151,1100,2.78,1101,4.151,1102,2.78,1103,4.151,1104,2.78,1105,4.151,1106,2.78,1107,4.151,1108,2.78,1109,2.78,1110,2.78,1111,4.967,1112,4.151,1113,2.78,1114,4.151,1115,4.967,1116,2.78,1117,2.78,1118,2.78,1119,2.78,1120,2.78,1121,4.151,1122,2.78,1123,2.78,1124,2.78,1125,2.78,1126,4.967,1127,4.967,1128,2.78,1129,2.78,1130,2.78,1131,2.78,1132,2.78]],["title/classes/LoginConsumer.html",[36,0.19,298,2.691]],["body/classes/LoginConsumer.html",[3,0.193,4,0.193,5,0.174,7,0.333,8,1.335,9,2.175,12,1.666,13,0.017,15,2.381,16,1.224,18,1.541,19,1.412,20,1.412,22,1.335,23,1.245,24,0.462,27,0.579,35,0.193,36,0.174,37,1.868,38,1.303,43,1.395,45,0.011,46,0.011,85,2.12,137,1.986,146,0.662,176,3.03,191,3.373,192,2.277,204,2.466,205,1.584,206,2.466,214,1.839,215,1.924,217,1.366,222,1.993,224,2.008,298,3.456,317,0.811,325,4.737,335,1.433,336,1.366,343,2.466,361,2.466,378,5.733,384,1.986,386,2.783,548,1.868,756,3.019,759,3.787,767,3.019,806,3.787,1133,3.019,1134,4.903,1135,4.903,1136,4.903,1137,4.903,1138,4.903,1139,4.903,1140,3.499,1141,4.903,1142,4.903,1143,3.499,1144,3.499,1145,3.499,1146,3.019,1147,3.499,1148,6.133,1149,4.903,1150,6.133,1151,4.903,1152,3.499,1153,3.499,1154,4.903,1155,3.499,1156,3.499,1157,3.499]],["title/interfaces/Player.html",[423,1.135,440,2.038]],["body/interfaces/Player.html",[3,0.243,4,0.243,5,0.22,7,0.42,13,0.017,24,0.316,35,0.372,45,0.012,46,0.012,146,0.687,317,0.949,332,1.904,338,1.541,423,2.079,424,3.402,425,2.106,426,2.505,427,2.675,428,2.675,429,3.616,430,3.829,431,1.998,432,2.675,433,2.675,434,2.675,435,3.616,436,2.675,437,2.675,438,2.357,439,2.675,440,3.602,441,4.088,442,4.088,443,4.391,444,3.616,445,2.675,446,3.062,447,2.505,448,2.505,449,2.505,450,2.357,451,2.873]],["title/interfaces/QRCodeUrl.html",[423,1.135,1158,2.691]],["body/interfaces/QRCodeUrl.html",[3,0.231,4,0.231,5,0.209,7,0.399,9,2.018,13,0.017,15,2.351,24,0.473,27,0.693,35,0.305,36,0.209,37,2.236,38,1.56,43,1.767,45,0.012,46,0.012,125,0.962,146,0.452,148,1.302,160,2.726,161,2.952,176,2.812,189,2.544,190,2.377,214,1.361,215,1.883,222,2.018,224,2.27,243,3.145,286,2.377,300,3.764,301,2.538,317,0.917,332,1.509,338,1.57,349,2.952,365,3.906,376,3.235,383,2.952,384,2.377,423,1.245,425,1.998,1158,3.906,1159,2.726,1160,3.235,1161,5.455,1162,4.28,1163,3.613,1164,3.613,1165,3.613,1166,3.613,1167,3.613,1168,3.613,1169,3.613,1170,3.613,1171,3.613,1172,3.613,1173,4.781,1174,3.613,1175,3.613,1176,3.613,1177,3.613,1178,3.613,1179,3.613,1180,3.613]],["title/interfaces/Roominfo.html",[423,1.135,449,2.167]],["body/interfaces/Roominfo.html",[3,0.243,4,0.243,5,0.22,7,0.42,13,0.017,24,0.316,35,0.372,45,0.012,46,0.012,146,0.687,317,0.949,332,1.735,338,1.541,423,2.079,424,3.402,425,2.106,426,2.505,427,2.675,428,2.675,429,3.616,430,3.255,431,1.998,432,2.675,433,2.675,434,2.675,435,3.616,436,2.675,437,2.675,438,2.357,439,2.675,440,3.402,441,2.675,442,2.675,443,2.873,444,4.198,445,2.675,446,3.602,447,2.505,448,2.505,449,3.255,450,3.602,451,4.391]],["title/interfaces/SessionPayload.html",[164,2.691,423,1.135]],["body/interfaces/SessionPayload.html",[3,0.302,4,0.302,5,0.273,7,0.521,13,0.016,35,0.302,45,0.014,46,0.014,146,0.708,164,4.626,250,2.714,252,6.286,317,1.086,332,1.914,338,1.605,423,1.629,425,2.613,1080,4.23,1181,4.725]],["title/controllers/TwoFactorAuthController.html",[0,1.564,288,2.691]],["body/controllers/TwoFactorAuthController.html",[0,1.118,2,1.118,3,0.15,4,0.15,5,0.136,7,0.26,8,1.115,9,2.281,12,1.855,13,0.017,15,1.456,16,1.089,18,1.487,19,1.362,20,1.362,21,3.997,22,1.487,23,1.747,24,0.48,26,1.924,27,0.451,29,1.376,32,1.654,34,2.108,35,0.15,36,0.136,38,1.83,40,3.794,43,1.553,45,0.009,46,0.009,88,0.971,130,1.776,140,3.807,142,4.263,146,0.53,148,2.082,150,2.108,160,3.807,173,2.665,174,2.108,175,2.355,177,1.776,179,2.108,181,3.162,185,5.046,187,2.108,189,2.012,190,1.549,191,2.476,192,2.665,196,3.532,205,2.224,207,2.355,213,2.108,214,1.596,217,1.066,222,1.33,224,2.236,226,3.532,227,2.355,238,3.162,239,2.355,245,1.654,276,4.238,286,2.788,288,2.885,300,4.253,301,3.544,343,2.885,394,3.532,1044,3.462,1048,2.355,1081,1.776,1159,3.807,1182,2.355,1183,4.094,1184,4.094,1185,4.094,1186,2.729,1187,2.729,1188,4.094,1189,4.094,1190,4.094,1191,2.729,1192,2.729,1193,5.458,1194,2.729,1195,2.729,1196,2.729,1197,2.729,1198,2.729,1199,4.617,1200,2.729,1201,2.729,1202,2.729,1203,2.729,1204,4.094,1205,2.355,1206,2.729,1207,2.729,1208,2.729,1209,2.729,1210,2.729,1211,4.094,1212,2.729,1213,2.729,1214,2.729,1215,2.729,1216,2.729,1217,2.729,1218,2.729,1219,2.729,1220,2.729,1221,2.729,1222,2.355,1223,2.729,1224,2.729]],["title/injectables/TwoFactorAuthService.html",[125,0.663,286,2.167]],["body/injectables/TwoFactorAuthService.html",[3,0.184,4,0.184,5,0.166,7,0.318,8,1.291,9,2.29,13,0.017,15,2.344,16,1.266,18,1.635,19,1.498,20,1.498,22,1.502,23,1.686,24,0.43,27,0.552,35,0.261,36,0.166,37,1.781,38,1.242,43,1.569,45,0.01,46,0.01,125,0.823,126,1.242,146,0.684,148,1.037,160,2.171,161,3.341,176,2.983,189,2.699,190,1.893,214,1.792,215,1.874,217,1.302,222,1.792,224,1.941,243,3.407,250,1.765,286,2.69,300,4.462,301,3.993,317,0.784,332,1.795,335,1.366,336,1.302,338,1.548,349,2.351,365,3.341,376,2.576,383,2.351,384,1.893,423,0.992,1158,2.351,1159,4.289,1160,2.576,1161,4.258,1162,3.661,1163,4.089,1164,4.089,1165,2.877,1166,2.877,1167,2.877,1168,2.877,1169,2.877,1170,2.877,1171,4.089,1172,2.877,1173,4.089,1174,2.877,1175,2.877,1176,2.877,1177,2.877,1178,2.877,1179,2.877,1180,2.877,1225,4.74,1226,4.74,1227,4.74,1228,3.335,1229,4.74,1230,3.335,1231,3.335,1232,3.335,1233,3.335]],["title/classes/TwoFactorTokenDto.html",[36,0.19,1199,2.691]],["body/classes/TwoFactorTokenDto.html",[3,0.285,4,0.285,5,0.258,7,0.492,12,1.756,13,0.017,15,2.437,16,1.031,24,0.453,29,2.604,35,0.285,36,0.316,45,0.014,46,0.014,146,0.557,300,4.329,301,3.839,317,1.048,338,1.447,496,3.99,548,2.758,720,4.893,724,3.641,1159,4.123,1199,4.465,1234,4.457,1235,5.166,1236,5.166,1237,5.166,1238,6.335,1239,5.166,1240,4.457]],["title/entities/User.html",[148,1.187,452,1.924]],["body/entities/User.html",[3,0.203,4,0.203,5,0.184,7,0.351,12,2.37,13,0.017,16,1.392,19,0.92,20,1.565,24,0.364,35,0.28,36,0.254,45,0.011,46,0.011,88,2.232,146,0.778,148,1.809,166,4.102,250,2.168,317,0.841,332,1.385,335,2.384,337,3.789,338,1.554,415,3.082,434,3.989,438,2.715,452,2.563,454,2.235,476,4.914,480,1.969,492,3.928,501,4.846,727,4.495,974,2.848,1241,2.848,1242,5.022,1243,5.022,1244,5.821,1245,5.022,1246,5.086,1247,5.086,1248,5.086,1249,3.688,1250,3.688,1251,5.086,1252,3.688,1253,5.821,1254,3.688,1255,3.688,1256,3.688,1257,3.688,1258,3.688,1259,5.678,1260,3.688,1261,3.688,1262,6.274,1263,3.182,1264,4.387,1265,4.387,1266,3.688,1267,3.688]],["title/controllers/UsersController.html",[0,1.564,1268,2.691]],["body/controllers/UsersController.html",[0,1.141,2,1.141,3,0.154,4,0.154,5,0.32,7,0.265,8,1.132,9,2.011,12,1.874,13,0.017,16,1.1,18,1.502,19,1.375,20,1.375,21,4.463,22,1.502,23,1.478,24,0.482,26,1.963,27,0.461,28,2.403,29,1.404,35,0.154,36,0.139,37,1.487,38,1.037,43,1.569,44,2.403,45,0.009,46,0.009,88,0.991,130,1.813,140,1.813,146,0.636,148,1.714,160,3.84,161,3.886,162,1.813,166,1.963,173,1.813,174,2.151,177,1.813,179,2.151,180,2.403,181,3.21,183,2.403,186,3.504,187,2.151,189,1.702,193,1.813,195,2.403,203,2.219,205,1.261,213,2.151,215,1.874,220,2.929,222,1.351,224,1.141,251,2.403,258,2.403,317,0.461,338,0.636,386,1.581,446,1.487,535,1.813,630,2.929,753,2.151,936,2.151,974,2.151,1036,1.813,1046,1.963,1081,1.813,1205,2.403,1222,4.757,1268,2.929,1269,2.403,1270,3.586,1271,3.586,1272,4.156,1273,4.29,1274,2.785,1275,2.785,1276,2.785,1277,2.785,1278,2.785,1279,4.156,1280,2.785,1281,2.785,1282,2.785,1283,2.785,1284,2.785,1285,2.785,1286,4.972,1287,2.785,1288,4.156,1289,4.156,1290,4.156,1291,4.156,1292,4.156,1293,4.156,1294,4.156,1295,2.785,1296,4.156,1297,4.156,1298,2.785,1299,3.586,1300,4.156,1301,4.156,1302,4.156,1303,2.785,1304,2.785,1305,4.156,1306,2.785,1307,2.403,1308,2.785,1309,2.785,1310,2.151,1311,2.403,1312,2.785,1313,2.785,1314,2.785,1315,2.785,1316,2.785,1317,2.785,1318,2.785,1319,2.785,1320,2.785,1321,2.785,1322,2.785,1323,2.785,1324,2.151,1325,2.785,1326,2.785,1327,2.785,1328,2.785,1329,4.156,1330,2.785,1331,2.785,1332,2.785,1333,2.785,1334,2.785,1335,2.785]],["title/modules/UsersModule.html",[47,1.358,59,2.314]],["body/modules/UsersModule.html",[2,2.457,3,0.261,4,0.261,5,0.236,13,0.017,24,0.523,27,0.783,35,0.261,36,0.236,45,0.013,46,0.013,47,2.134,49,2.143,50,2.862,59,4.493,60,3.203,61,2.527,62,2.258,64,3.404,65,2.868,148,1.471,189,3.161,292,3.08,293,2.385,295,5.175,296,3.08,313,4.083,315,4.633,1268,4.641,1310,3.655,1311,4.083,1336,4.083,1337,4.083,1338,4.083,1339,4.733,1340,4.733]],["title/injectables/UsersService.html",[125,0.663,189,1.564]],["body/injectables/UsersService.html",[3,0.09,4,0.09,5,0.081,7,0.155,8,0.741,9,2.393,13,0.017,15,0.58,16,1.27,18,1.703,19,1.56,20,1.56,22,1.67,23,0.968,24,0.39,25,0.871,27,0.27,35,0.09,36,0.081,38,1.013,43,1.81,45,0.006,46,0.006,88,0.58,125,0.472,126,0.608,135,1.407,146,0.686,148,1.977,166,3.199,176,2.219,189,1.114,214,1.475,215,2.085,217,1.062,222,2.152,224,2.645,229,3.199,243,1.544,245,1.648,250,2.765,293,0.822,296,1.062,317,0.45,327,4.487,332,1.988,335,0.668,336,0.637,337,1.062,338,1.529,350,1.407,351,2.347,352,1.26,353,2.347,354,1.26,365,3.456,383,3.666,384,3.314,386,2.783,391,1.407,392,1.407,393,1.407,480,0.871,499,1.917,571,3.154,583,1.26,586,1.26,727,4.209,759,4.209,938,1.26,1146,1.407,1242,3.019,1243,2.347,1245,2.347,1270,2.347,1271,2.347,1273,2.347,1299,1.407,1310,1.26,1341,1.26,1342,2.72,1343,2.72,1344,2.72,1345,2.72,1346,2.72,1347,2.72,1348,2.72,1349,2.72,1350,2.72,1351,1.631,1352,2.72,1353,2.72,1354,2.72,1355,3.499,1356,1.631,1357,2.72,1358,1.631,1359,2.72,1360,1.631,1361,2.72,1362,1.631,1363,2.72,1364,1.631,1365,2.72,1366,1.631,1367,2.72,1368,1.631,1369,2.72,1370,1.631,1371,2.72,1372,1.631,1373,2.72,1374,1.631,1375,2.72,1376,1.631,1377,2.72,1378,3.499,1379,1.631,1380,2.72,1381,2.72,1382,1.631,1383,5.201,1384,2.347,1385,1.26,1386,1.407,1387,4.903,1388,4.903,1389,5.201,1390,4.084,1391,5.449,1392,1.631,1393,2.72,1394,2.72,1395,2.72,1396,1.631,1397,1.631,1398,1.631,1399,1.631,1400,1.631,1401,1.631,1402,1.631,1403,1.631,1404,1.631,1405,1.631,1406,1.631,1407,1.631,1408,1.631,1409,1.631,1410,1.631,1411,1.631,1412,1.631,1413,2.72,1414,1.631,1415,1.631,1416,1.631,1417,1.631,1418,1.631,1419,1.631]],["title/interfaces/Vector2D.html",[423,1.135,429,2.167]],["body/interfaces/Vector2D.html",[3,0.248,4,0.248,5,0.224,7,0.428,13,0.017,24,0.322,35,0.375,45,0.013,46,0.013,146,0.626,317,0.96,332,1.996,338,1.326,423,2.092,424,3.433,425,2.147,426,2.553,427,2.726,428,2.726,429,3.856,430,3.296,431,2.037,432,4.118,433,4.118,434,2.726,435,3.649,436,2.726,437,2.726,438,2.402,439,2.726,440,3.433,441,2.726,442,2.726,443,2.928,444,3.649,445,2.726,446,3.1,447,2.553,448,2.553,449,2.553,450,2.402,451,2.928]],["title/coverage.html",[1420,4.493]],["body/coverage.html",[0,2.354,1,1.626,5,0.115,6,1.99,13,0.017,15,1.28,30,1.398,32,1.398,36,0.299,45,0.008,46,0.008,78,1.309,125,1.202,127,1.99,128,1.626,129,1.99,134,1.398,137,1.309,146,0.249,148,1.119,162,1.501,163,1.781,164,1.626,189,0.945,191,1.162,193,1.501,197,1.626,198,1.626,205,2.004,215,0.784,283,1.501,284,1.501,285,1.501,286,1.309,288,1.626,298,1.626,300,3.762,301,3.03,316,1.99,355,1.781,356,1.781,358,1.309,406,2.78,408,1.99,409,1.99,423,1.897,424,1.231,426,3.077,429,1.309,440,1.231,444,1.309,449,1.309,452,2.52,453,1.398,455,1.99,481,1.398,486,1.99,493,6.092,516,1.626,517,1.99,523,1.626,533,1.398,535,1.501,549,1.99,568,1.99,616,1.781,617,1.99,628,1.501,629,1.99,640,1.626,641,1.99,651,1.398,669,2.78,676,3.105,704,1.781,709,1.99,710,1.99,726,1.99,753,1.781,754,1.99,770,1.99,771,1.99,778,1.626,779,1.99,793,1.309,795,1.398,868,4.932,919,1.781,921,1.781,922,1.781,926,1.781,927,1.781,928,1.781,930,1.781,932,1.781,934,1.781,935,1.781,937,1.781,939,1.781,941,1.781,942,1.781,1036,2.881,1037,2.78,1042,2.78,1043,1.99,1067,1.99,1079,1.99,1080,2.78,1081,1.501,1082,1.99,1083,1.99,1092,1.99,1133,1.99,1158,1.626,1159,3.255,1160,2.78,1181,1.99,1182,1.99,1199,1.626,1234,1.99,1241,1.781,1268,1.626,1269,1.99,1341,2.78,1385,1.781,1420,1.99,1421,1.99,1422,2.306,1423,2.306,1424,5,1425,7.6,1426,3.105,1427,7.371,1428,5.422,1429,2.306,1430,1.99,1431,1.99,1432,1.99,1433,1.99,1434,6.209,1435,2.306,1436,6.209,1437,4.426,1438,1.99,1439,3.599,1440,2.306,1441,2.306,1442,1.99,1443,1.99,1444,1.99,1445,1.99,1446,1.99,1447,1.99,1448,2.306,1449,2.306]],["title/dependencies.html",[50,2.19,1450,2.752]],["body/dependencies.html",[13,0.017,27,0.705,29,2.149,36,0.28,45,0.012,46,0.012,50,2.035,69,2.277,71,3.679,72,3.679,85,2.584,150,3.294,203,2.994,254,3.294,291,3.294,293,2.149,296,2.776,352,3.294,354,3.294,361,3.006,390,3.679,431,2.539,480,2.277,556,3.006,724,3.006,1039,2.42,1054,4.692,1055,2.776,1161,3.294,1162,3.294,1263,3.679,1307,4.838,1384,3.679,1451,5.608,1452,4.264,1453,6.266,1454,4.264,1455,4.264,1456,4.264,1457,5.608,1458,4.264,1459,4.264,1460,4.264,1461,4.264,1462,4.264,1463,4.264,1464,4.264,1465,4.264,1466,4.264,1467,4.264,1468,4.264,1469,4.264,1470,4.264,1471,4.264,1472,4.264,1473,4.264,1474,4.264,1475,4.264,1476,4.264,1477,4.264,1478,4.264,1479,4.264,1480,4.264,1481,4.264,1482,4.264,1483,4.264,1484,4.264,1485,4.264,1486,4.264,1487,4.264,1488,4.264,1489,4.264,1490,4.264,1491,4.264,1492,4.264]],["title/miscellaneous/enumerations.html",[1493,1.703,1494,3.961]],["body/miscellaneous/enumerations.html",[7,0.518,13,0.016,45,0.014,46,0.014,336,2.838,426,3.088,435,3.71,436,3.297,437,3.297,438,3.742,439,3.297,1241,4.202,1259,5.64,1264,5.64,1265,5.64,1493,2.905,1494,4.694,1495,6.537,1496,5.44,1497,5.44,1498,5.44,1499,5.44,1500,5.44,1501,5.44]],["title/miscellaneous/functions.html",[1493,1.703,1502,3.961]],["body/miscellaneous/functions.html",[7,0.545,13,0.016,18,1.559,19,1.428,20,1.428,45,0.015,46,0.015,336,2.631,669,4.422,677,4.94,704,5.205,1324,4.422,1442,4.94,1443,6.178,1493,3.057,1502,4.94,1503,5.726,1504,5.726]],["title/index.html",[7,0.304,1505,2.752,1506,2.752]],["body/index.html",[13,0.015,45,0.015,46,0.015,167,5.359,1507,6.939,1508,6.02,1509,6.02]],["title/license.html",[1505,2.752,1506,2.752,1510,2.464]],["body/license.html",[13,0.013,45,0.013,46,0.013,62,2.176,203,2.435,599,3.935,603,3.935,1421,3.935,1510,3.523,1511,4.561,1512,6.472,1513,4.561,1514,4.561,1515,4.561,1516,4.561,1517,5.859,1518,4.561,1519,4.561,1520,4.561,1521,4.561,1522,4.561,1523,4.561,1524,5.859,1525,7.523,1526,4.561,1527,4.561,1528,4.561,1529,6.472,1530,4.561,1531,5.859,1532,4.561,1533,4.561,1534,5.859,1535,4.561,1536,4.561,1537,4.561,1538,4.561,1539,4.561,1540,4.561,1541,5.859,1542,4.561,1543,4.561,1544,4.561,1545,4.561,1546,4.561,1547,4.561,1548,4.561,1549,5.859,1550,5.859,1551,4.561,1552,4.561,1553,4.561,1554,4.561,1555,4.561,1556,4.561,1557,4.561,1558,4.561,1559,4.561,1560,4.561,1561,4.561,1562,4.561,1563,4.561,1564,4.561,1565,4.561,1566,4.561,1567,4.561,1568,4.561,1569,4.561,1570,4.561,1571,4.561,1572,4.561,1573,4.561,1574,4.561,1575,4.561,1576,4.561,1577,4.561,1578,4.561]],["title/modules.html",[49,2.357]],["body/modules.html",[13,0.014,45,0.014,46,0.014,48,3.772,49,2.423,54,3.483,55,3.483,56,3.483,57,3.483,58,3.483,59,3.243,80,3.243,1579,7.611,1580,7.611,1581,7.611,1582,7.679,1583,5.351,1584,5.351]],["title/overview.html",[1585,4.493]],["body/overview.html",[2,1.56,13,0.017,30,3.587,45,0.011,46,0.011,48,5.384,49,1.724,50,2.48,51,3.286,52,3.286,53,3.286,54,4.95,55,4.577,56,4.333,57,3.852,58,4.577,59,4.262,60,2.776,61,2.033,62,1.817,78,3.609,80,3.854,126,1.419,142,2.479,189,2.881,191,2.983,280,3.286,282,3.286,283,3.852,284,3.852,285,3.852,286,3.359,407,2.941,425,1.817,454,2.308,533,3.587,548,2.033,559,3.286,560,3.286,561,3.286,651,3.587,662,3.286,663,3.286,749,3.286,750,3.286,793,3.359,795,3.587,864,3.286,865,3.286,940,2.941,1240,3.286,1336,3.286,1337,3.286,1338,3.286,1585,3.286,1586,3.808,1587,3.808,1588,3.808,1589,3.808]],["title/properties.html",[317,0.759,1450,2.752]],["body/properties.html",[13,0.017,45,0.015,46,0.015,140,3.848,317,0.978,1510,4.566,1590,5.912,1591,5.912,1592,5.912,1593,5.912]],["title/miscellaneous/typealiases.html",[1493,1.703,1594,4.591]],["body/miscellaneous/typealiases.html",[7,0.555,13,0.015,45,0.015,46,0.015,146,0.778,868,4.107,883,5.874,888,5.874,903,5.874,1493,3.111,1595,5.828,1596,5.874]],["title/miscellaneous/variables.html",[1493,1.703,1597,3.961]],["body/miscellaneous/variables.html",[7,0.267,13,0.017,15,2.104,23,1.968,25,2.954,43,1.879,45,0.009,46,0.009,101,2.419,102,2.166,103,2.419,104,2.166,134,1.699,146,0.794,148,1.552,155,2.419,163,3.226,222,1.798,332,1.922,335,3.095,336,2.95,338,1.263,355,3.226,356,3.226,386,3.14,412,4.273,422,2.419,504,2.166,535,2.719,642,3.604,763,2.419,868,1.976,919,3.226,920,3.604,921,3.226,922,3.226,923,3.604,926,3.226,927,3.226,928,3.226,929,2.419,930,3.226,931,2.419,932,3.226,933,3.604,934,3.226,935,3.226,936,3.226,937,3.226,938,2.166,939,3.226,940,2.166,941,3.226,942,3.226,943,2.419,1055,1.825,1324,3.226,1341,2.166,1385,3.226,1386,2.419,1426,2.419,1430,2.419,1431,3.604,1432,2.419,1433,2.419,1438,2.419,1444,2.419,1445,3.604,1446,2.419,1447,3.604,1493,1.497,1596,6.212,1597,2.419,1598,4.177,1599,2.804,1600,2.804,1601,2.804,1602,2.804,1603,2.804,1604,4.177,1605,2.804,1606,2.804,1607,2.804,1608,2.804,1609,2.804,1610,5.532,1611,2.804,1612,2.804,1613,2.804,1614,5.532,1615,5.532,1616,5.532,1617,4.177]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthSessionGuard.html":{},"interfaces/Ball.html":{},"entities/ChannelMember.html":{},"entities/Channels.html":{},"controllers/ChannelsController.html":{},"classes/ChannelsGateway.html":{},"modules/ChannelsModule.html":{},"injectables/ChannelsService.html":{},"classes/ChatGateway.html":{},"entities/Chats.html":{},"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"classes/CreateChannelDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"modules/EventsModule.html":{},"guards/FourtyTwoGuard.html":{},"interfaces/FourtyTwoToken.html":{},"classes/GameGateway.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"interfaces/Gameinfo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"interfaces/JwtTokenPayload.html":{},"injectables/JwtTwoFactorGuard.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{},"interfaces/Player.html":{},"interfaces/QRCodeUrl.html":{},"interfaces/Roominfo.html":{},"interfaces/SessionPayload.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"classes/TwoFactorTokenDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Vector2D.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":493,"title":{},"body":{"entities/Channels.html":{},"injectables/GameService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1591,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1489,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1470,"title":{},"body":{"dependencies.html":{}}}],["0.3.12",{"_index":1492,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1469,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1478,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":1452,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1425,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1439,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1440,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1424,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1434,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1436,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1428,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1437,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1435,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1441,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1429,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":464,"title":{},"body":{"entities/ChannelMember.html":{},"entities/Channels.html":{},"controllers/ChannelsController.html":{},"controllers/ChatsController.html":{},"classes/CreateUserDto.html":{},"injectables/GameService.html":{},"injectables/LobbyService.html":{}}}],["1.0.1",{"_index":1480,"title":{},"body":{"dependencies.html":{}}}],["1.1",{"_index":943,"title":{},"body":{"injectables/GameService.html":{},"miscellaneous/variables.html":{}}}],["1.17.3",{"_index":1473,"title":{},"body":{"dependencies.html":{}}}],["1.3.4",{"_index":1466,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":1472,"title":{},"body":{"dependencies.html":{}}}],["1.5.1",{"_index":1486,"title":{},"body":{"dependencies.html":{}}}],["1.6.1",{"_index":1483,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":938,"title":{},"body":{"injectables/GameService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["10.0.2",{"_index":1455,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":497,"title":{},"body":{"entities/Channels.html":{}}}],["1000",{"_index":311,"title":{},"body":{"modules/AuthModule.html":{},"injectables/GameService.html":{}}}],["1024",{"_index":1329,"title":{},"body":{"controllers/UsersController.html":{}}}],["12",{"_index":732,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["14",{"_index":1587,"title":{},"body":{"overview.html":{}}}],["16.0.3",{"_index":1463,"title":{},"body":{"dependencies.html":{}}}],["160",{"_index":929,"title":{},"body":{"injectables/GameService.html":{},"miscellaneous/variables.html":{}}}],["17.8.3",{"_index":1477,"title":{},"body":{"dependencies.html":{}}}],["1q2w3e4r",{"_index":716,"title":{},"body":{"classes/CreateChannelDto.html":{}}}],["2",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/GameService.html":{},"controllers/TwoFactorAuthController.html":{},"overview.html":{}}}],["2.0.0",{"_index":1451,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1454,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":925,"title":{},"body":{"injectables/GameService.html":{}}}],["2023",{"_index":1514,"title":{},"body":{"license.html":{}}}],["23505",{"_index":1501,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["24",{"_index":931,"title":{},"body":{"injectables/GameService.html":{},"miscellaneous/variables.html":{}}}],["29.4.3",{"_index":1476,"title":{},"body":{"dependencies.html":{}}}],["2fa",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorGuard.html":{},"injectables/JwtTwoFactorStrategy.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/UsersService.html":{}}}],["3",{"_index":936,"title":{},"body":{"injectables/GameService.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":1461,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":504,"title":{},"body":{"entities/Channels.html":{},"injectables/GameService.html":{},"miscellaneous/variables.html":{}}}],["3600",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3mb",{"_index":1288,"title":{},"body":{"controllers/UsersController.html":{}}}],["4",{"_index":940,"title":{},"body":{"injectables/GameService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["4.0.1",{"_index":1481,"title":{},"body":{"dependencies.html":{}}}],["4.10.4",{"_index":1468,"title":{},"body":{"dependencies.html":{}}}],["4.6.1",{"_index":1491,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":933,"title":{},"body":{"injectables/GameService.html":{},"miscellaneous/variables.html":{}}}],["400",{"_index":923,"title":{},"body":{"injectables/GameService.html":{},"miscellaneous/variables.html":{}}}],["41",{"_index":1515,"title":{},"body":{"license.html":{}}}],["42",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["5",{"_index":982,"title":{},"body":{"injectables/GameService.html":{}}}],["5.0.0",{"_index":1465,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":1467,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":1240,"title":{},"body":{"classes/TwoFactorTokenDto.html":{},"overview.html":{}}}],["6)@isnumberstring",{"_index":1236,"title":{},"body":{"classes/TwoFactorTokenDto.html":{}}}],["6.2.1",{"_index":1458,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":993,"title":{},"body":{"injectables/GameService.html":{}}}],["600",{"_index":920,"title":{},"body":{"injectables/GameService.html":{},"miscellaneous/variables.html":{}}}],["7",{"_index":1588,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":1490,"title":{},"body":{"dependencies.html":{}}}],["7200",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8",{"_index":1586,"title":{},"body":{"overview.html":{}}}],["8.9.0",{"_index":1485,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1589,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":1453,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":1459,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":1456,"title":{},"body":{"dependencies.html":{}}}],["9.3.9",{"_index":1457,"title":{},"body":{"dependencies.html":{}}}],["9_",{"_index":730,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["__circle_collision",{"_index":871,"title":{},"body":{"injectables/GameService.html":{}}}],["__circle_collision(c1",{"_index":882,"title":{},"body":{"injectables/GameService.html":{}}}],["__collid_check",{"_index":872,"title":{},"body":{"injectables/GameService.html":{}}}],["__collid_check(game",{"_index":887,"title":{},"body":{"injectables/GameService.html":{}}}],["__dirname",{"_index":746,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["__game_list",{"_index":869,"title":{},"body":{"injectables/GameService.html":{}}}],["__keyboard_check",{"_index":873,"title":{},"body":{"injectables/GameService.html":{}}}],["__keyboard_check(game",{"_index":890,"title":{},"body":{"injectables/GameService.html":{}}}],["__match_make",{"_index":1094,"title":{},"body":{"injectables/LobbyService.html":{}}}],["__match_make(nsp",{"_index":1099,"title":{},"body":{"injectables/LobbyService.html":{}}}],["__paddle_collision",{"_index":874,"title":{},"body":{"injectables/GameService.html":{}}}],["__paddle_collision(player",{"_index":892,"title":{},"body":{"injectables/GameService.html":{}}}],["__player_list",{"_index":870,"title":{},"body":{"injectables/GameService.html":{}}}],["__queue",{"_index":1093,"title":{},"body":{"injectables/LobbyService.html":{}}}],["__score_check",{"_index":875,"title":{},"body":{"injectables/GameService.html":{}}}],["__score_check(nsp",{"_index":894,"title":{},"body":{"injectables/GameService.html":{}}}],["__single_game_frame",{"_index":876,"title":{},"body":{"injectables/GameService.html":{}}}],["__single_game_frame(nsp",{"_index":896,"title":{},"body":{"injectables/GameService.html":{}}}],["__start_game",{"_index":877,"title":{},"body":{"injectables/GameService.html":{}}}],["__start_game(nsp",{"_index":898,"title":{},"body":{"injectables/GameService.html":{}}}],["__stop_game",{"_index":878,"title":{},"body":{"injectables/GameService.html":{}}}],["__stop_game(game",{"_index":900,"title":{},"body":{"injectables/GameService.html":{}}}],["__wall_collision",{"_index":879,"title":{},"body":{"injectables/GameService.html":{}}}],["__wall_collision(positions",{"_index":902,"title":{},"body":{"injectables/GameService.html":{}}}],["above",{"_index":1548,"title":{},"body":{"license.html":{}}}],["accel_ratio",{"_index":942,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["access",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["access_token",{"_index":772,"title":{},"body":{"interfaces/FourtyTwoToken.html":{}}}],["accesscookie",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TwoFactorAuthController.html":{}}}],["accesstokencookie",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{}}}],["action",{"_index":1572,"title":{},"body":{"license.html":{}}}],["afterinit",{"_index":782,"title":{},"body":{"classes/GameGateway.html":{}}}],["age=${this.configservice.get",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["age=0",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["aliases",{"_index":1595,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":1088,"title":{},"body":{"injectables/JwtTwoFactorStrategy.html":{}}}],["and/or",{"_index":1539,"title":{},"body":{"license.html":{}}}],["api/room_list",{"_index":518,"title":{},"body":{"controllers/ChannelsController.html":{}}}],["apibadrequestresponse",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apibadrequestresponse({description",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibearerauth",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["apibearerauth('access",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["apibody",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TwoFactorAuthController.html":{},"controllers/UsersController.html":{}}}],["apibody({type",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes",{"_index":1308,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiconsumes('multipart/form",{"_index":1294,"title":{},"body":{"controllers/UsersController.html":{}}}],["apicookieauth",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["apicookieauth('authentication",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["apicookieauth('refresh",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["apicreatedresponse",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["apicreatedresponse({description",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiforbiddenresponse",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiforbiddenresponse({description",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiokresponse",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TwoFactorAuthController.html":{}}}],["apioperation",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ChannelsController.html":{},"controllers/ChatsController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":524,"title":{},"body":{"controllers/ChannelsController.html":{}}}],["apioperation,apitags",{"_index":532,"title":{},"body":{"controllers/ChannelsController.html":{}}}],["apiproperty",{"_index":720,"title":{},"body":{"classes/CreateChannelDto.html":{},"classes/CreateUserDto.html":{},"classes/TwoFactorTokenDto.html":{}}}],["apiproperty()@length(6",{"_index":1235,"title":{},"body":{"classes/TwoFactorTokenDto.html":{}}}],["apiproperty()@matches([a",{"_index":728,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty({example",{"_index":712,"title":{},"body":{"classes/CreateChannelDto.html":{}}}],["apitags",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TwoFactorAuthController.html":{},"controllers/UsersController.html":{}}}],["apitags('2fa",{"_index":1207,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["apitags('auth",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('channel",{"_index":539,"title":{},"body":{"controllers/ChannelsController.html":{}}}],["apitags('users",{"_index":1312,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiunauthorizedresponse",{"_index":1204,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["apiunauthorizedresponse({description",{"_index":1202,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["app.controller",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_pipe",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":48,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":30,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arising",{"_index":1576,"title":{},"body":{"license.html":{}}}],["array",{"_index":446,"title":{},"body":{"interfaces/Ball.html":{},"classes/GameGateway.html":{},"injectables/GameService.html":{},"interfaces/Gameinfo.html":{},"interfaces/Player.html":{},"interfaces/Roominfo.html":{},"controllers/UsersController.html":{},"interfaces/Vector2D.html":{}}}],["array)'})@useguards(jwttwofactorguard",{"_index":1280,"title":{},"body":{"controllers/UsersController.html":{}}}],["arraybuffer",{"_index":1403,"title":{},"body":{"injectables/UsersService.html":{}}}],["arrowdown",{"_index":963,"title":{},"body":{"injectables/GameService.html":{}}}],["arrowup",{"_index":961,"title":{},"body":{"injectables/GameService.html":{}}}],["ascii",{"_index":1177,"title":{},"body":{"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{}}}],["aspect_ratio",{"_index":924,"title":{},"body":{"injectables/GameService.html":{}}}],["associated",{"_index":1526,"title":{},"body":{"license.html":{}}}],["async",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ChannelsController.html":{},"injectables/ChannelsService.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"guards/FourtyTwoGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{},"classes/LoginConsumer.html":{},"interfaces/QRCodeUrl.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["attribute",{"_index":984,"title":{},"body":{"injectables/GameService.html":{}}}],["auth",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.constants",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth.controller",{"_index":289,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.controller.ts",{"_index":1182,"title":{},"body":{"controllers/TwoFactorAuthController.html":{},"coverage.html":{}}}],["auth.controller.ts:42",{"_index":1191,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["auth.controller.ts:56",{"_index":1203,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["auth.controller.ts:77",{"_index":1198,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["auth.controller.ts:85",{"_index":1195,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["auth.guard",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/TwoFactorAuthController.html":{}}}],["auth.guard.ts",{"_index":1037,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"guards/FourtyTwoGuard.html":{},"classes/LoginConsumer.html":{},"controllers/TwoFactorAuthController.html":{}}}],["auth.service.ts",{"_index":1160,"title":{},"body":{"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{},"coverage.html":{}}}],["auth.service.ts:12",{"_index":1229,"title":{},"body":{"injectables/TwoFactorAuthService.html":{}}}],["auth.service.ts:16",{"_index":1230,"title":{},"body":{"injectables/TwoFactorAuthService.html":{}}}],["auth.service.ts:22",{"_index":1232,"title":{},"body":{"injectables/TwoFactorAuthService.html":{}}}],["auth.service.ts:26",{"_index":1233,"title":{},"body":{"injectables/TwoFactorAuthService.html":{}}}],["auth/auth.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/guards/jwt",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["authcontroller",{"_index":128,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{}}}],["authentication/two",{"_index":301,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/QRCodeUrl.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"classes/TwoFactorTokenDto.html":{},"coverage.html":{}}}],["authentication=${token",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticator",{"_index":1189,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["authguard",{"_index":1038,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtTwoFactorGuard.html":{}}}],["authguard('jwt",{"_index":1041,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtTwoFactorGuard.html":{}}}],["authmodule",{"_index":54,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1593,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["authorization_code",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["authors",{"_index":1565,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":191,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/FourtyTwoGuard.html":{},"classes/LoginConsumer.html":{},"controllers/TwoFactorAuthController.html":{},"coverage.html":{},"overview.html":{}}}],["authsessionguard",{"_index":198,"title":{"guards/AuthSessionGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthSessionGuard.html":{},"coverage.html":{}}}],["available",{"_index":1584,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["avatarurl",{"_index":1355,"title":{},"body":{"injectables/UsersService.html":{}}}],["await",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ChannelsService.html":{},"injectables/ChatsService.html":{},"guards/FourtyTwoGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{},"classes/LoginConsumer.html":{},"interfaces/QRCodeUrl.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["axios",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["axioserror",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["backend",{"_index":1508,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":1146,"title":{},"body":{"classes/LoginConsumer.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('invalid",{"_index":1409,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception('token",{"_index":1155,"title":{},"body":{"classes/LoginConsumer.html":{}}}],["ball",{"_index":424,"title":{"interfaces/Ball.html":{}},"body":{"interfaces/Ball.html":{},"injectables/GameService.html":{},"interfaces/Gameinfo.html":{},"interfaces/Player.html":{},"interfaces/Roominfo.html":{},"interfaces/Vector2D.html":{},"coverage.html":{}}}],["ball_pos",{"_index":944,"title":{},"body":{"injectables/GameService.html":{}}}],["ball_rad",{"_index":927,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ball_vel",{"_index":945,"title":{},"body":{"injectables/GameService.html":{}}}],["ball_vel_init_x",{"_index":939,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ball_vel_init_y",{"_index":941,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bcrypt",{"_index":1384,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.compare",{"_index":1396,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.hash(refreshtoken",{"_index":1392,"title":{},"body":{"injectables/UsersService.html":{}}}],["bearer",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["binary",{"_index":1326,"title":{},"body":{"controllers/UsersController.html":{}}}],["bmp",{"_index":1291,"title":{},"body":{"controllers/UsersController.html":{}}}],["body",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ChannelsController.html":{},"controllers/ChatsController.html":{},"controllers/TwoFactorAuthController.html":{},"controllers/UsersController.html":{}}}],["body('content",{"_index":660,"title":{},"body":{"controllers/ChatsController.html":{}}}],["body.password",{"_index":545,"title":{},"body":{"controllers/ChannelsController.html":{}}}],["boolean",{"_index":415,"title":{},"body":{"guards/AuthSessionGuard.html":{},"entities/Channels.html":{},"injectables/GameService.html":{},"interfaces/JwtTokenPayload.html":{},"injectables/LobbyService.html":{},"entities/User.html":{}}}],["bootstrap",{"_index":1443,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["bot",{"_index":1032,"title":{},"body":{"injectables/GameService.html":{}}}],["bounceback",{"_index":312,"title":{},"body":{"modules/AuthModule.html":{}}}],["browse",{"_index":1582,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1579,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":1378,"title":{},"body":{"injectables/UsersService.html":{}}}],["bull",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"guards/FourtyTwoGuard.html":{},"classes/LoginConsumer.html":{},"dependencies.html":{}}}],["bullmodule",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["bullmodule.forrootasync",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["bullmodule.registerqueue",{"_index":306,"title":{},"body":{"modules/AuthModule.html":{}}}],["busy",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{},"guards/FourtyTwoGuard.html":{}}}],["byte",{"_index":1279,"title":{},"body":{"controllers/UsersController.html":{}}}],["bytea",{"_index":1248,"title":{},"body":{"entities/User.html":{}}}],["c",{"_index":1513,"title":{},"body":{"license.html":{}}}],["c1",{"_index":886,"title":{},"body":{"injectables/GameService.html":{}}}],["c2",{"_index":884,"title":{},"body":{"injectables/GameService.html":{}}}],["canactivate",{"_index":410,"title":{},"body":{"guards/AuthSessionGuard.html":{},"guards/FourtyTwoGuard.html":{}}}],["canactivate(context",{"_index":411,"title":{},"body":{"guards/AuthSessionGuard.html":{},"guards/FourtyTwoGuard.html":{}}}],["cascade",{"_index":512,"title":{},"body":{"entities/Channels.html":{}}}],["case",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/FourtyTwoGuard.html":{}}}],["catcherror",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["catcherror((error",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["center",{"_index":1027,"title":{},"body":{"injectables/GameService.html":{}}}],["center.x",{"_index":1034,"title":{},"body":{"injectables/GameService.html":{}}}],["center.y",{"_index":1031,"title":{},"body":{"injectables/GameService.html":{}}}],["channel",{"_index":593,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["channel.dto",{"_index":538,"title":{},"body":{"controllers/ChannelsController.html":{}}}],["channel.dto.ts",{"_index":710,"title":{},"body":{"classes/CreateChannelDto.html":{},"coverage.html":{}}}],["channel.dto.ts:11",{"_index":719,"title":{},"body":{"classes/CreateChannelDto.html":{}}}],["channel.dto.ts:19",{"_index":717,"title":{},"body":{"classes/CreateChannelDto.html":{}}}],["channel.dto.ts:27",{"_index":714,"title":{},"body":{"classes/CreateChannelDto.html":{}}}],["channel.owner",{"_index":596,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["channel.password",{"_index":595,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["channel.title",{"_index":594,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["channelid",{"_index":456,"title":{},"body":{"entities/ChannelMember.html":{},"injectables/ChannelsService.html":{},"entities/Chats.html":{}}}],["channelmember",{"_index":453,"title":{"entities/ChannelMember.html":{}},"body":{"entities/ChannelMember.html":{},"entities/Channels.html":{},"modules/ChannelsModule.html":{},"injectables/ChannelsService.html":{},"coverage.html":{}}}],["channelmember.channels",{"_index":511,"title":{},"body":{"entities/Channels.html":{}}}],["channelmemberrepository",{"_index":573,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["channelmembers",{"_index":510,"title":{},"body":{"entities/Channels.html":{}}}],["channelmembers.channelmembers",{"_index":515,"title":{},"body":{"entities/Channels.html":{}}}],["channelreturned",{"_index":600,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["channelreturned.id",{"_index":609,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["channels",{"_index":481,"title":{"entities/Channels.html":{}},"body":{"entities/ChannelMember.html":{},"entities/Channels.html":{},"modules/ChannelsModule.html":{},"injectables/ChannelsService.html":{},"coverage.html":{}}}],["channels.controller",{"_index":563,"title":{},"body":{"modules/ChannelsModule.html":{}}}],["channels.entity",{"_index":482,"title":{},"body":{"entities/ChannelMember.html":{}}}],["channels.service",{"_index":534,"title":{},"body":{"controllers/ChannelsController.html":{},"modules/ChannelsModule.html":{}}}],["channels.title",{"_index":614,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["channels/channels.module",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["channelscontroller",{"_index":516,"title":{"controllers/ChannelsController.html":{}},"body":{"controllers/ChannelsController.html":{},"modules/ChannelsModule.html":{},"coverage.html":{}}}],["channelsgateway",{"_index":78,"title":{"classes/ChannelsGateway.html":{}},"body":{"modules/AppModule.html":{},"classes/ChannelsGateway.html":{},"injectables/ChannelsService.html":{},"modules/EventsModule.html":{},"coverage.html":{},"overview.html":{}}}],["channelsmodule",{"_index":55,"title":{"modules/ChannelsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ChannelsModule.html":{},"modules.html":{},"overview.html":{}}}],["channelsrepository",{"_index":575,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["channelsservice",{"_index":533,"title":{"injectables/ChannelsService.html":{}},"body":{"controllers/ChannelsController.html":{},"modules/ChannelsModule.html":{},"injectables/ChannelsService.html":{},"coverage.html":{},"overview.html":{}}}],["charge",{"_index":1521,"title":{},"body":{"license.html":{}}}],["chat",{"_index":691,"title":{},"body":{"injectables/ChatsService.html":{}}}],["chat.content",{"_index":694,"title":{},"body":{"injectables/ChatsService.html":{}}}],["chat.receiverid",{"_index":693,"title":{},"body":{"injectables/ChatsService.html":{}}}],["chat.senderid",{"_index":692,"title":{},"body":{"injectables/ChatsService.html":{}}}],["chatgateway",{"_index":616,"title":{"classes/ChatGateway.html":{}},"body":{"classes/ChatGateway.html":{},"coverage.html":{}}}],["chats",{"_index":628,"title":{"entities/Chats.html":{}},"body":{"entities/Chats.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"coverage.html":{}}}],["chats.controller",{"_index":665,"title":{},"body":{"modules/ChatsModule.html":{}}}],["chats.entity",{"_index":675,"title":{},"body":{"injectables/ChatsService.html":{}}}],["chats.service",{"_index":652,"title":{},"body":{"controllers/ChatsController.html":{},"modules/ChatsModule.html":{}}}],["chats/chats.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["chatscontroller",{"_index":640,"title":{"controllers/ChatsController.html":{}},"body":{"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"coverage.html":{}}}],["chatsmodule",{"_index":56,"title":{"modules/ChatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ChatsModule.html":{},"modules.html":{},"overview.html":{}}}],["chatsrepository",{"_index":672,"title":{},"body":{"injectables/ChatsService.html":{}}}],["chatsservice",{"_index":651,"title":{"injectables/ChatsService.html":{}},"body":{"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"coverage.html":{},"overview.html":{}}}],["chatwithsender",{"_index":698,"title":{},"body":{"injectables/ChatsService.html":{}}}],["claim",{"_index":1568,"title":{},"body":{"license.html":{}}}],["class",{"_index":36,"title":{"classes/ChannelsGateway.html":{},"classes/ChatGateway.html":{},"classes/CreateChannelDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"classes/LoginConsumer.html":{},"classes/TwoFactorTokenDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthSessionGuard.html":{},"entities/ChannelMember.html":{},"entities/Channels.html":{},"controllers/ChannelsController.html":{},"classes/ChannelsGateway.html":{},"modules/ChannelsModule.html":{},"injectables/ChannelsService.html":{},"classes/ChatGateway.html":{},"entities/Chats.html":{},"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"classes/CreateChannelDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"modules/EventsModule.html":{},"guards/FourtyTwoGuard.html":{},"classes/GameGateway.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorGuard.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{},"interfaces/QRCodeUrl.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"classes/TwoFactorTokenDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":548,"title":{},"body":{"classes/ChannelsGateway.html":{},"classes/ChatGateway.html":{},"classes/CreateChannelDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"classes/LoginConsumer.html":{},"classes/TwoFactorTokenDto.html":{},"overview.html":{}}}],["classserializerinterceptor",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TwoFactorAuthController.html":{},"controllers/UsersController.html":{}}}],["clearinterval(game.intervalid",{"_index":994,"title":{},"body":{"injectables/GameService.html":{}}}],["client_id",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["client_secret",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["clients",{"_index":605,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["cluster_appmodule",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":280,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":281,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":282,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_channelsmodule",{"_index":559,"title":{},"body":{"modules/ChannelsModule.html":{},"overview.html":{}}}],["cluster_channelsmodule_imports",{"_index":560,"title":{},"body":{"modules/ChannelsModule.html":{},"overview.html":{}}}],["cluster_channelsmodule_providers",{"_index":561,"title":{},"body":{"modules/ChannelsModule.html":{},"overview.html":{}}}],["cluster_chatsmodule",{"_index":662,"title":{},"body":{"modules/ChatsModule.html":{},"overview.html":{}}}],["cluster_chatsmodule_providers",{"_index":663,"title":{},"body":{"modules/ChatsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule",{"_index":749,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_exports",{"_index":750,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_gamemodule",{"_index":864,"title":{},"body":{"modules/GameModule.html":{},"overview.html":{}}}],["cluster_gamemodule_providers",{"_index":865,"title":{},"body":{"modules/GameModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1336,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1337,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1338,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{},"guards/FourtyTwoGuard.html":{},"classes/LoginConsumer.html":{},"controllers/TwoFactorAuthController.html":{}}}],["column",{"_index":476,"title":{},"body":{"entities/ChannelMember.html":{},"entities/Channels.html":{},"entities/Chats.html":{},"entities/User.html":{}}}],["column('smallint",{"_index":500,"title":{},"body":{"entities/Channels.html":{}}}],["column('varchar",{"_index":495,"title":{},"body":{"entities/Channels.html":{}}}],["column({default",{"_index":1255,"title":{},"body":{"entities/User.html":{}}}],["column({nullable",{"_index":492,"title":{},"body":{"entities/Channels.html":{},"entities/Chats.html":{},"entities/User.html":{}}}],["column({nullable:true",{"_index":509,"title":{},"body":{"entities/Channels.html":{}}}],["column({primary",{"_index":460,"title":{},"body":{"entities/ChannelMember.html":{}}}],["column({type",{"_index":1247,"title":{},"body":{"entities/User.html":{}}}],["column({unique",{"_index":1257,"title":{},"body":{"entities/User.html":{}}}],["completed",{"_index":1076,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["conditions",{"_index":1547,"title":{},"body":{"license.html":{}}}],["config",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["config).pipe",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["configmodule",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["configmodule.forroot",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{}}}],["configservice.get('db_database",{"_index":745,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('db_host",{"_index":740,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('db_password",{"_index":743,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('db_port",{"_index":741,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('db_username",{"_index":742,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('jwt_access_token_secret",{"_index":1074,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{}}}],["configservice.get('jwt_refresh_token_secret",{"_index":1061,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["configservice.get('redis_host",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('redis_port",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["connected",{"_index":558,"title":{},"body":{"classes/ChannelsGateway.html":{},"injectables/ChannelsService.html":{}}}],["connection",{"_index":1577,"title":{},"body":{"license.html":{}}}],["console.log",{"_index":852,"title":{},"body":{"classes/GameGateway.html":{},"injectables/GameService.html":{}}}],["console.log(\"loop",{"_index":987,"title":{},"body":{"injectables/GameService.html":{}}}],["console.log(\"new",{"_index":955,"title":{},"body":{"injectables/GameService.html":{}}}],["console.log(\"player",{"_index":970,"title":{},"body":{"injectables/GameService.html":{}}}],["console.log(\"updating",{"_index":1001,"title":{},"body":{"injectables/GameService.html":{}}}],["console.log('channelreturned",{"_index":606,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["console.log('client",{"_index":557,"title":{},"body":{"classes/ChannelsGateway.html":{}}}],["console.log(`game",{"_index":837,"title":{},"body":{"classes/GameGateway.html":{},"injectables/LobbyService.html":{}}}],["console.log(`gamehome",{"_index":1112,"title":{},"body":{"injectables/LobbyService.html":{}}}],["const",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthSessionGuard.html":{},"injectables/ChannelsService.html":{},"injectables/ChatsService.html":{},"guards/FourtyTwoGuard.html":{},"classes/GameGateway.html":{},"injectables/GameService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{},"interfaces/QRCodeUrl.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ChannelsService.html":{},"injectables/ChatsService.html":{},"guards/FourtyTwoGuard.html":{},"classes/GameGateway.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":756,"title":{},"body":{"guards/FourtyTwoGuard.html":{},"classes/LoginConsumer.html":{}}}],["constructor(channelsrepository",{"_index":570,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["constructor(chatsrepository",{"_index":670,"title":{},"body":{"injectables/ChatsService.html":{}}}],["constructor(configservice",{"_index":1045,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{}}}],["constructor(gameservice",{"_index":1097,"title":{},"body":{"injectables/LobbyService.html":{}}}],["constructor(ingame",{"_index":792,"title":{},"body":{"classes/GameGateway.html":{}}}],["constructor(loginqueue",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"controllers/ChannelsController.html":{},"controllers/ChatsController.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{},"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{},"controllers/UsersController.html":{}}}],["constructor(userrepository",{"_index":1351,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":1228,"title":{},"body":{"injectables/TwoFactorAuthService.html":{}}}],["consts",{"_index":690,"title":{},"body":{"injectables/ChatsService.html":{}}}],["content",{"_index":630,"title":{},"body":{"entities/Chats.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"controllers/UsersController.html":{}}}],["context",{"_index":414,"title":{},"body":{"guards/AuthSessionGuard.html":{},"guards/FourtyTwoGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":419,"title":{},"body":{"guards/AuthSessionGuard.html":{},"guards/FourtyTwoGuard.html":{}}}],["contract",{"_index":1573,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ChannelsController.html":{},"controllers/ChatsController.html":{},"controllers/TwoFactorAuthController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ChannelsController.html":{},"controllers/ChatsController.html":{},"controllers/TwoFactorAuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('2fa",{"_index":1208,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["controller('api/room_list",{"_index":540,"title":{},"body":{"controllers/ChannelsController.html":{}}}],["controller('auth",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('test",{"_index":653,"title":{},"body":{"controllers/ChatsController.html":{}}}],["controller('users",{"_index":1313,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ChannelsController.html":{},"modules/ChannelsModule.html":{},"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"modules/GameModule.html":{},"controllers/TwoFactorAuthController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TwoFactorAuthController.html":{},"dependencies.html":{}}}],["copies",{"_index":1541,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1524,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1512,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":1420,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1342,"title":{},"body":{"injectables/UsersService.html":{}}}],["create(id",{"_index":1354,"title":{},"body":{"injectables/UsersService.html":{}}}],["createchanneldto",{"_index":523,"title":{"classes/CreateChannelDto.html":{}},"body":{"controllers/ChannelsController.html":{},"classes/CreateChannelDto.html":{},"coverage.html":{}}}],["createchannels",{"_index":519,"title":{},"body":{"controllers/ChannelsController.html":{},"injectables/ChannelsService.html":{}}}],["createchannels(body",{"_index":522,"title":{},"body":{"controllers/ChannelsController.html":{}}}],["createchannels(title",{"_index":576,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["createchats",{"_index":643,"title":{},"body":{"controllers/ChatsController.html":{},"injectables/ChatsService.html":{}}}],["createchats(url",{"_index":645,"title":{},"body":{"controllers/ChatsController.html":{},"injectables/ChatsService.html":{}}}],["created",{"_index":957,"title":{},"body":{"injectables/GameService.html":{}}}],["created_at",{"_index":773,"title":{},"body":{"interfaces/FourtyTwoToken.html":{}}}],["createdat",{"_index":457,"title":{},"body":{"entities/ChannelMember.html":{},"entities/Channels.html":{},"entities/Chats.html":{}}}],["createdatecolumn",{"_index":469,"title":{},"body":{"entities/ChannelMember.html":{},"entities/Channels.html":{},"entities/Chats.html":{}}}],["createparamdecorator",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createquerybuilder('channles",{"_index":612,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["createquerybuilder('user",{"_index":682,"title":{},"body":{"injectables/ChatsService.html":{}}}],["createuserdto",{"_index":162,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["createuserdto.nickname",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{}}}],["ctx",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":1569,"title":{},"body":{"license.html":{}}}],["data",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChatGateway.html":{},"injectables/GameService.html":{},"classes/LoginConsumer.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["data')@apibody({description",{"_index":1295,"title":{},"body":{"controllers/UsersController.html":{}}}],["data:string",{"_index":626,"title":{},"body":{"classes/ChatGateway.html":{}}}],["database",{"_index":744,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database/database.module",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["databasemodule",{"_index":57,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["date",{"_index":468,"title":{},"body":{"entities/ChannelMember.html":{},"entities/Channels.html":{},"entities/Chats.html":{}}}],["db_database",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["db_host",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["db_password",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["db_port",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["db_username",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["deal",{"_index":1528,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1578,"title":{},"body":{"license.html":{}}}],["decorator/session",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["decorator/token.decorator",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["decorator/user.decorator",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TwoFactorAuthController.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"entities/ChannelMember.html":{},"entities/Channels.html":{},"controllers/ChannelsController.html":{},"classes/ChannelsGateway.html":{},"classes/ChatGateway.html":{},"entities/Chats.html":{},"controllers/ChatsController.html":{},"classes/CreateChannelDto.html":{},"classes/CreateUserDto.html":{},"classes/GameGateway.html":{},"classes/LoginConsumer.html":{},"controllers/TwoFactorAuthController.html":{},"classes/TwoFactorTokenDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{},"entities/Channels.html":{},"classes/GameGateway.html":{},"injectables/GameService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{},"injectables/TwoFactorAuthService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["default:\"default",{"_index":508,"title":{},"body":{"entities/Channels.html":{}}}],["defined",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthSessionGuard.html":{},"entities/ChannelMember.html":{},"entities/Channels.html":{},"controllers/ChannelsController.html":{},"classes/ChannelsGateway.html":{},"injectables/ChannelsService.html":{},"classes/ChatGateway.html":{},"entities/Chats.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"classes/CreateChannelDto.html":{},"classes/CreateUserDto.html":{},"guards/FourtyTwoGuard.html":{},"classes/GameGateway.html":{},"injectables/GameService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"classes/TwoFactorTokenDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":1299,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete()@useguards(jwttwofactorguard",{"_index":1275,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteresult",{"_index":1417,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteresult.affected",{"_index":1419,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteuser",{"_index":1270,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteuser(@req",{"_index":1334,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser(id",{"_index":1357,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteuser(req",{"_index":1274,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":50,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChannelsModule.html":{},"modules/ChatsModule.html":{},"modules/EventsModule.html":{},"modules/GameModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateChannelDto.html":{},"controllers/TwoFactorAuthController.html":{},"controllers/UsersController.html":{},"properties.html":{}}}],["destroyed",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["dev",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["disposition",{"_index":1319,"title":{},"body":{"controllers/UsersController.html":{}}}],["distribute",{"_index":1537,"title":{},"body":{"license.html":{}}}],["dms",{"_index":684,"title":{},"body":{"injectables/ChatsService.html":{}}}],["dms.senderid",{"_index":685,"title":{},"body":{"injectables/ChatsService.html":{}}}],["dmwithsender",{"_index":708,"title":{},"body":{"injectables/ChatsService.html":{}}}],["documentation",{"_index":1421,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["done",{"_index":1089,"title":{},"body":{"injectables/JwtTwoFactorStrategy.html":{}}}],["dotenv",{"_index":1462,"title":{},"body":{"dependencies.html":{}}}],["down_pressed",{"_index":948,"title":{},"body":{"injectables/GameService.html":{}}}],["dto/create",{"_index":537,"title":{},"body":{"controllers/ChannelsController.html":{}}}],["dto/users.dto",{"_index":1309,"title":{},"body":{"controllers/UsersController.html":{}}}],["duplicated",{"_index":1408,"title":{},"body":{"injectables/UsersService.html":{}}}],["duration",{"_index":310,"title":{},"body":{"modules/AuthModule.html":{}}}],["emit",{"_index":602,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["encoding",{"_index":1176,"title":{},"body":{"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{}}}],["end",{"_index":439,"title":{},"body":{"interfaces/Ball.html":{},"interfaces/Gameinfo.html":{},"interfaces/Player.html":{},"interfaces/Roominfo.html":{},"interfaces/Vector2D.html":{},"miscellaneous/enumerations.html":{}}}],["entities",{"_index":454,"title":{},"body":{"entities/ChannelMember.html":{},"entities/Channels.html":{},"entities/Chats.html":{},"modules/DatabaseModule.html":{},"entities/User.html":{},"overview.html":{}}}],["entity",{"_index":452,"title":{"entities/ChannelMember.html":{},"entities/Channels.html":{},"entities/Chats.html":{},"entities/User.html":{}},"body":{"entities/ChannelMember.html":{},"entities/Channels.html":{},"entities/Chats.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity.{js,ts",{"_index":747,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["enum",{"_index":434,"title":{},"body":{"interfaces/Ball.html":{},"interfaces/Gameinfo.html":{},"interfaces/Player.html":{},"interfaces/Roominfo.html":{},"entities/User.html":{},"interfaces/Vector2D.html":{}}}],["enumerations",{"_index":1494,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["env.dev",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/FourtyTwoGuard.html":{}}}],["event",{"_index":603,"title":{},"body":{"injectables/ChannelsService.html":{},"license.html":{}}}],["eventgateway",{"_index":681,"title":{},"body":{"injectables/ChatsService.html":{}}}],["events.channels.gateway",{"_index":752,"title":{},"body":{"modules/EventsModule.html":{}}}],["events/events.channels.gateway",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["events/events.module",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["eventsgateway",{"_index":588,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/ChatsService.html":{}}}],["eventsmodule",{"_index":80,"title":{"modules/EventsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ChannelsModule.html":{},"modules/EventsModule.html":{},"modules.html":{},"overview.html":{}}}],["eventsmoudle",{"_index":668,"title":{},"body":{"modules/ChatsModule.html":{}}}],["example",{"_index":725,"title":{},"body":{"classes/CreateChannelDto.html":{}}}],["exclude",{"_index":1262,"title":{},"body":{"entities/User.html":{}}}],["executioncontext",{"_index":412,"title":{},"body":{"guards/AuthSessionGuard.html":{},"guards/FourtyTwoGuard.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":1415,"title":{},"body":{"injectables/UsersService.html":{}}}],["exists",{"_index":767,"title":{},"body":{"guards/FourtyTwoGuard.html":{},"classes/LoginConsumer.html":{}}}],["expires_in",{"_index":774,"title":{},"body":{"interfaces/FourtyTwoToken.html":{}}}],["expiresin",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthSessionGuard.html":{},"interfaces/Ball.html":{},"entities/ChannelMember.html":{},"entities/Channels.html":{},"controllers/ChannelsController.html":{},"classes/ChannelsGateway.html":{},"modules/ChannelsModule.html":{},"injectables/ChannelsService.html":{},"classes/ChatGateway.html":{},"entities/Chats.html":{},"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"classes/CreateChannelDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"modules/EventsModule.html":{},"guards/FourtyTwoGuard.html":{},"interfaces/FourtyTwoToken.html":{},"classes/GameGateway.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"interfaces/Gameinfo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"interfaces/JwtTokenPayload.html":{},"injectables/JwtTwoFactorGuard.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{},"interfaces/Player.html":{},"interfaces/QRCodeUrl.html":{},"interfaces/Roominfo.html":{},"interfaces/SessionPayload.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"classes/TwoFactorTokenDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Vector2D.html":{}}}],["exports",{"_index":315,"title":{},"body":{"modules/AuthModule.html":{},"modules/EventsModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"guards/FourtyTwoGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{},"controllers/UsersController.html":{},"dependencies.html":{},"license.html":{}}}],["express.multer.file",{"_index":1286,"title":{},"body":{"controllers/UsersController.html":{}}}],["extends",{"_index":1040,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorGuard.html":{},"injectables/JwtTwoFactorStrategy.html":{}}}],["extractjwt",{"_index":1052,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{}}}],["extractjwt.fromextractors",{"_index":1058,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{}}}],["factor",{"_index":300,"title":{},"body":{"modules/AuthModule.html":{},"interfaces/QRCodeUrl.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"classes/TwoFactorTokenDto.html":{},"coverage.html":{}}}],["factor.guard",{"_index":1205,"title":{},"body":{"controllers/TwoFactorAuthController.html":{},"controllers/UsersController.html":{}}}],["factor.guard.ts",{"_index":1082,"title":{},"body":{"injectables/JwtTwoFactorGuard.html":{},"coverage.html":{}}}],["factor.strategy",{"_index":305,"title":{},"body":{"modules/AuthModule.html":{}}}],["factor.strategy.ts",{"_index":1083,"title":{},"body":{"injectables/JwtTwoFactorStrategy.html":{},"coverage.html":{}}}],["factor.strategy.ts:14",{"_index":1084,"title":{},"body":{"injectables/JwtTwoFactorStrategy.html":{}}}],["factor.strategy.ts:30",{"_index":1085,"title":{},"body":{"injectables/JwtTwoFactorStrategy.html":{}}}],["fail",{"_index":1180,"title":{},"body":{"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{}}}],["failed",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{},"injectables/UsersService.html":{}}}],["false",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/LobbyService.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["false})@exclude",{"_index":1249,"title":{},"body":{"entities/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthSessionGuard.html":{},"interfaces/Ball.html":{},"entities/ChannelMember.html":{},"entities/Channels.html":{},"controllers/ChannelsController.html":{},"classes/ChannelsGateway.html":{},"modules/ChannelsModule.html":{},"injectables/ChannelsService.html":{},"classes/ChatGateway.html":{},"entities/Chats.html":{},"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"classes/CreateChannelDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"modules/EventsModule.html":{},"guards/FourtyTwoGuard.html":{},"interfaces/FourtyTwoToken.html":{},"classes/GameGateway.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"interfaces/Gameinfo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"interfaces/JwtTokenPayload.html":{},"injectables/JwtTwoFactorGuard.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{},"interfaces/Player.html":{},"interfaces/QRCodeUrl.html":{},"interfaces/Roominfo.html":{},"interfaces/SessionPayload.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"classes/TwoFactorTokenDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Vector2D.html":{},"coverage.html":{}}}],["file.buffer",{"_index":1333,"title":{},"body":{"controllers/UsersController.html":{}}}],["fileinterceptor",{"_index":1306,"title":{},"body":{"controllers/UsersController.html":{}}}],["files",{"_index":1527,"title":{},"body":{"license.html":{}}}],["filetype",{"_index":1330,"title":{},"body":{"controllers/UsersController.html":{}}}],["filetypevalidator",{"_index":1300,"title":{},"body":{"controllers/UsersController.html":{}}}],["findbyid",{"_index":569,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["findbyid(id",{"_index":579,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["findbyid(id:number",{"_index":589,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["finishing",{"_index":1154,"title":{},"body":{"classes/LoginConsumer.html":{}}}],["firstvaluefrom",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["fitness",{"_index":1561,"title":{},"body":{"license.html":{}}}],["following",{"_index":1546,"title":{},"body":{"license.html":{}}}],["forbiddenexception",{"_index":416,"title":{},"body":{"guards/AuthSessionGuard.html":{}}}],["format",{"_index":1325,"title":{},"body":{"controllers/UsersController.html":{}}}],["found",{"_index":1386,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["fourty_two_token_uri",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fourty_two_user_info",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fourtytwoguard",{"_index":193,"title":{"guards/FourtyTwoGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/FourtyTwoGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["fourtytwologin",{"_index":307,"title":{},"body":{"modules/AuthModule.html":{}}}],["fourtytwotoken",{"_index":137,"title":{"interfaces/FourtyTwoToken.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/FourtyTwoGuard.html":{},"interfaces/FourtyTwoToken.html":{},"classes/LoginConsumer.html":{},"coverage.html":{}}}],["fourtytwouser",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["fourtytwouser.id",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{}}}],["free",{"_index":1520,"title":{},"body":{"license.html":{}}}],["frontend_url",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["function",{"_index":676,"title":{},"body":{"injectables/ChatsService.html":{},"coverage.html":{}}}],["functions",{"_index":1502,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1544,"title":{},"body":{"license.html":{}}}],["game",{"_index":834,"title":{},"body":{"classes/GameGateway.html":{},"injectables/GameService.html":{}}}],["game.data.ball_pos",{"_index":1002,"title":{},"body":{"injectables/GameService.html":{}}}],["game.data.ball_pos.x",{"_index":1016,"title":{},"body":{"injectables/GameService.html":{}}}],["game.data.ball_pos.y",{"_index":1018,"title":{},"body":{"injectables/GameService.html":{}}}],["game.data.ball_vel",{"_index":1028,"title":{},"body":{"injectables/GameService.html":{}}}],["game.data.ball_vel.x",{"_index":1017,"title":{},"body":{"injectables/GameService.html":{}}}],["game.data.ball_vel.y",{"_index":1019,"title":{},"body":{"injectables/GameService.html":{}}}],["game.data.down_pressed.p1",{"_index":964,"title":{},"body":{"injectables/GameService.html":{}}}],["game.data.down_pressed.p2",{"_index":967,"title":{},"body":{"injectables/GameService.html":{}}}],["game.data.paddle_pos",{"_index":1003,"title":{},"body":{"injectables/GameService.html":{}}}],["game.data.paddle_pos.p1",{"_index":1011,"title":{},"body":{"injectables/GameService.html":{}}}],["game.data.paddle_pos.p2",{"_index":1012,"title":{},"body":{"injectables/GameService.html":{}}}],["game.data.score",{"_index":979,"title":{},"body":{"injectables/GameService.html":{}}}],["game.data.score.p1",{"_index":976,"title":{},"body":{"injectables/GameService.html":{}}}],["game.data.score.p2",{"_index":977,"title":{},"body":{"injectables/GameService.html":{}}}],["game.data.up_pressed.p1",{"_index":962,"title":{},"body":{"injectables/GameService.html":{}}}],["game.data.up_pressed.p2",{"_index":966,"title":{},"body":{"injectables/GameService.html":{}}}],["game.gateway",{"_index":867,"title":{},"body":{"modules/GameModule.html":{}}}],["game.intervalid",{"_index":990,"title":{},"body":{"injectables/GameService.html":{}}}],["game.isready",{"_index":971,"title":{},"body":{"injectables/GameService.html":{}}}],["game.isready.p1",{"_index":968,"title":{},"body":{"injectables/GameService.html":{}}}],["game.isready.p2",{"_index":969,"title":{},"body":{"injectables/GameService.html":{}}}],["game.players.p1",{"_index":960,"title":{},"body":{"injectables/GameService.html":{}}}],["game.players.p2",{"_index":965,"title":{},"body":{"injectables/GameService.html":{}}}],["game.service",{"_index":831,"title":{},"body":{"classes/GameGateway.html":{},"modules/GameModule.html":{},"injectables/LobbyService.html":{}}}],["game/game.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["game_",{"_index":1128,"title":{},"body":{"injectables/LobbyService.html":{}}}],["game_over",{"_index":980,"title":{},"body":{"injectables/GameService.html":{}}}],["gamedatatype",{"_index":903,"title":{},"body":{"injectables/GameService.html":{},"miscellaneous/typealiases.html":{}}}],["gamegateway",{"_index":778,"title":{"classes/GameGateway.html":{}},"body":{"classes/GameGateway.html":{},"modules/GameModule.html":{},"coverage.html":{}}}],["gameid",{"_index":949,"title":{},"body":{"injectables/GameService.html":{}}}],["gameinfo",{"_index":444,"title":{"interfaces/Gameinfo.html":{}},"body":{"interfaces/Ball.html":{},"interfaces/Gameinfo.html":{},"interfaces/Player.html":{},"interfaces/Roominfo.html":{},"interfaces/Vector2D.html":{},"coverage.html":{}}}],["gamelobby",{"_index":843,"title":{},"body":{"classes/GameGateway.html":{}}}],["gamemodule",{"_index":58,"title":{"modules/GameModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"modules.html":{},"overview.html":{}}}],["games",{"_index":780,"title":{},"body":{"classes/GameGateway.html":{}}}],["gameservice",{"_index":793,"title":{"injectables/GameService.html":{}},"body":{"classes/GameGateway.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"injectables/LobbyService.html":{},"coverage.html":{},"overview.html":{}}}],["gametype",{"_index":888,"title":{},"body":{"injectables/GameService.html":{},"miscellaneous/typealiases.html":{}}}],["generatetwofactorauthsecret",{"_index":1225,"title":{},"body":{"injectables/TwoFactorAuthService.html":{}}}],["generatetwofactorauthsecret(id",{"_index":1164,"title":{},"body":{"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{}}}],["get('/room/:title",{"_index":528,"title":{},"body":{"controllers/ChannelsController.html":{}}}],["get(':url/chats",{"_index":649,"title":{},"body":{"controllers/ChatsController.html":{}}}],["get('avatar",{"_index":1315,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('avatar')@apioperation({summary",{"_index":1278,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('generate",{"_index":1209,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["get('generate')@useguards(jwtauthguard)@apiokresponse({description",{"_index":1187,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["get('hello",{"_index":39,"title":{},"body":{"controllers/AppController.html":{}}}],["get('hello')@useguards(jwtauthguard)@apibearerauth('access",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["get('login",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('login')@useguards(fourtytwoguard)@apioperation({summary",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('refresh",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('refresh')@useguards(jwtrefreshauthguard)@apiokresponse({description",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{}}}],["get()@useguards(jwttwofactorguard",{"_index":1283,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(fourty_two_user_info",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(key",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getavatarfromweb",{"_index":1343,"title":{},"body":{"injectables/UsersService.html":{}}}],["getavatarfromweb(url",{"_index":1359,"title":{},"body":{"injectables/UsersService.html":{}}}],["getbyid",{"_index":1344,"title":{},"body":{"injectables/UsersService.html":{}}}],["getbyid(id",{"_index":1361,"title":{},"body":{"injectables/UsersService.html":{}}}],["getchannelmembers",{"_index":520,"title":{},"body":{"controllers/ChannelsController.html":{},"injectables/ChannelsService.html":{}}}],["getchannelmembers(title",{"_index":527,"title":{},"body":{"controllers/ChannelsController.html":{},"injectables/ChannelsService.html":{}}}],["getchannels",{"_index":521,"title":{},"body":{"controllers/ChannelsController.html":{},"injectables/ChannelsService.html":{}}}],["getchats",{"_index":644,"title":{},"body":{"controllers/ChatsController.html":{},"injectables/ChatsService.html":{}}}],["getchats(@param('url",{"_index":655,"title":{},"body":{"controllers/ChatsController.html":{}}}],["getchats(url",{"_index":648,"title":{},"body":{"controllers/ChatsController.html":{},"injectables/ChatsService.html":{}}}],["getcookieforlogout",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwtaccesstoken",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwtaccesstoken(id",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwtrefreshtoken",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["getcookiewithjwtrefreshtoken(id",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["getfourtytwotoken",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["getfourtytwotoken(code",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["getfourtytwouserinfo",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["getfourtytwouserinfo(token",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["getfourtytwouserinforesultfromqueue",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["getfourtytwouserinforesultfromqueue(token",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["getkeybyvalue",{"_index":704,"title":{},"body":{"injectables/ChatsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["getkeybyvalue(object",{"_index":677,"title":{},"body":{"injectables/ChatsService.html":{},"miscellaneous/functions.html":{}}}],["getmany",{"_index":615,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/ChatsService.html":{}}}],["getting",{"_index":1505,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettoken",{"_index":1134,"title":{},"body":{"classes/LoginConsumer.html":{}}}],["gettoken(job",{"_index":1138,"title":{},"body":{"classes/LoginConsumer.html":{}}}],["getuseravatar",{"_index":1271,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["getuseravatar(@req",{"_index":1316,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuseravatar(id",{"_index":1363,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuseravatar(req",{"_index":1277,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserifrefreshtokenvalid",{"_index":1345,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserifrefreshtokenvalid(refreshtoken",{"_index":1365,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserinfo",{"_index":1272,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserinfo(@req",{"_index":1314,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserinfo(req",{"_index":1282,"title":{},"body":{"controllers/UsersController.html":{}}}],["google",{"_index":1188,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["grant_type",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["granted",{"_index":1519,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1583,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":406,"title":{"guards/AuthSessionGuard.html":{},"guards/FourtyTwoGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":407,"title":{},"body":{"guards/AuthSessionGuard.html":{},"guards/FourtyTwoGuard.html":{},"overview.html":{}}}],["guards/auth",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/fourty",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/jwt",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TwoFactorAuthController.html":{}}}],["handleconnection",{"_index":550,"title":{},"body":{"classes/ChannelsGateway.html":{},"classes/GameGateway.html":{}}}],["handleconnection(@ws.connectedsocket",{"_index":838,"title":{},"body":{"classes/GameGateway.html":{}}}],["handleconnection(socket",{"_index":801,"title":{},"body":{"classes/GameGateway.html":{}}}],["handledisconnect",{"_index":783,"title":{},"body":{"classes/GameGateway.html":{}}}],["handledisconnect(@ws.connectedsocket",{"_index":840,"title":{},"body":{"classes/GameGateway.html":{}}}],["handledisconnect(socket",{"_index":803,"title":{},"body":{"classes/GameGateway.html":{}}}],["handlefourtytwoauth",{"_index":1135,"title":{},"body":{"classes/LoginConsumer.html":{}}}],["handlefourtytwoauth(job",{"_index":1141,"title":{},"body":{"classes/LoginConsumer.html":{}}}],["handleinviteevent",{"_index":784,"title":{},"body":{"classes/GameGateway.html":{}}}],["handleinviteevent(socket",{"_index":805,"title":{},"body":{"classes/GameGateway.html":{}}}],["handlekeypressed",{"_index":785,"title":{},"body":{"classes/GameGateway.html":{},"injectables/GameService.html":{}}}],["handlekeypressed(roomid",{"_index":906,"title":{},"body":{"injectables/GameService.html":{}}}],["handlekeypressed(socket",{"_index":809,"title":{},"body":{"classes/GameGateway.html":{}}}],["handlekeyreleased",{"_index":786,"title":{},"body":{"classes/GameGateway.html":{},"injectables/GameService.html":{}}}],["handlekeyreleased(roomid",{"_index":908,"title":{},"body":{"injectables/GameService.html":{}}}],["handlekeyreleased(socket",{"_index":812,"title":{},"body":{"classes/GameGateway.html":{}}}],["handleplayerready",{"_index":787,"title":{},"body":{"classes/GameGateway.html":{},"injectables/GameService.html":{}}}],["handleplayerready(nsp",{"_index":910,"title":{},"body":{"injectables/GameService.html":{}}}],["handleplayerready(socket",{"_index":815,"title":{},"body":{"classes/GameGateway.html":{}}}],["handlequeueevent",{"_index":788,"title":{},"body":{"classes/GameGateway.html":{}}}],["handlequeueevent(socket",{"_index":818,"title":{},"body":{"classes/GameGateway.html":{}}}],["handlequitgame",{"_index":789,"title":{},"body":{"classes/GameGateway.html":{}}}],["handlequitgame(socket",{"_index":821,"title":{},"body":{"classes/GameGateway.html":{}}}],["handlequitqueueevent",{"_index":790,"title":{},"body":{"classes/GameGateway.html":{}}}],["handlequitqueueevent(socket",{"_index":824,"title":{},"body":{"classes/GameGateway.html":{}}}],["handlewatchevent",{"_index":791,"title":{},"body":{"classes/GameGateway.html":{}}}],["handlewatchevent(socket",{"_index":827,"title":{},"body":{"classes/GameGateway.html":{}}}],["hashedrefreshtoken",{"_index":1242,"title":{},"body":{"entities/User.html":{},"injectables/UsersService.html":{}}}],["headers",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["hello",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["hello(@request",{"_index":42,"title":{},"body":{"controllers/AppController.html":{}}}],["hello(req",{"_index":11,"title":{},"body":{"controllers/AppController.html":{}}}],["hereby",{"_index":1518,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1566,"title":{},"body":{"license.html":{}}}],["home",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["host",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["http",{"_index":1479,"title":{},"body":{"dependencies.html":{}}}],["httpcode",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TwoFactorAuthController.html":{}}}],["httpcode(200",{"_index":276,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TwoFactorAuthController.html":{}}}],["httpmodule",{"_index":295,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["httponly",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://api.intra.42.fr/oauth/token",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://api.intra.42.fr/v2/me",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpservice",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["id",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"entities/ChannelMember.html":{},"entities/Channels.html":{},"injectables/ChannelsService.html":{},"entities/Chats.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"injectables/GameService.html":{},"injectables/JwtStrategy.html":{},"interfaces/JwtTokenPayload.html":{},"interfaces/SessionPayload.html":{},"injectables/TwoFactorAuthService.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["id:number",{"_index":483,"title":{},"body":{"entities/ChannelMember.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{}}}],["identifier",{"_index":1422,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["image/(jpg|jpeg|png|bmp",{"_index":1331,"title":{},"body":{"controllers/UsersController.html":{}}}],["image/png",{"_index":1215,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["implements",{"_index":417,"title":{},"body":{"guards/AuthSessionGuard.html":{},"guards/FourtyTwoGuard.html":{},"classes/GameGateway.html":{}}}],["implied",{"_index":1557,"title":{},"body":{"license.html":{}}}],["import",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthSessionGuard.html":{},"interfaces/Ball.html":{},"entities/ChannelMember.html":{},"entities/Channels.html":{},"controllers/ChannelsController.html":{},"classes/ChannelsGateway.html":{},"modules/ChannelsModule.html":{},"injectables/ChannelsService.html":{},"classes/ChatGateway.html":{},"entities/Chats.html":{},"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"classes/CreateChannelDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"modules/EventsModule.html":{},"guards/FourtyTwoGuard.html":{},"classes/GameGateway.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"interfaces/Gameinfo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorGuard.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{},"interfaces/Player.html":{},"interfaces/QRCodeUrl.html":{},"interfaces/Roominfo.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"classes/TwoFactorTokenDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Vector2D.html":{}}}],["imports",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChannelsModule.html":{},"modules/ChatsModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}}}],["included",{"_index":1551,"title":{},"body":{"license.html":{}}}],["including",{"_index":1531,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthSessionGuard.html":{},"interfaces/Ball.html":{},"entities/ChannelMember.html":{},"entities/Channels.html":{},"controllers/ChannelsController.html":{},"classes/ChannelsGateway.html":{},"injectables/ChannelsService.html":{},"classes/ChatGateway.html":{},"entities/Chats.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"classes/CreateChannelDto.html":{},"classes/CreateUserDto.html":{},"guards/FourtyTwoGuard.html":{},"interfaces/FourtyTwoToken.html":{},"classes/GameGateway.html":{},"injectables/GameService.html":{},"interfaces/Gameinfo.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"interfaces/JwtTokenPayload.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{},"interfaces/Player.html":{},"interfaces/QRCodeUrl.html":{},"interfaces/Roominfo.html":{},"interfaces/SessionPayload.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"classes/TwoFactorTokenDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/Vector2D.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthSessionGuard.html":{},"interfaces/Ball.html":{},"entities/ChannelMember.html":{},"entities/Channels.html":{},"controllers/ChannelsController.html":{},"classes/ChannelsGateway.html":{},"modules/ChannelsModule.html":{},"injectables/ChannelsService.html":{},"classes/ChatGateway.html":{},"entities/Chats.html":{},"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"classes/CreateChannelDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"modules/EventsModule.html":{},"guards/FourtyTwoGuard.html":{},"interfaces/FourtyTwoToken.html":{},"classes/GameGateway.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"interfaces/Gameinfo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"interfaces/JwtTokenPayload.html":{},"injectables/JwtTwoFactorGuard.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{},"interfaces/Player.html":{},"interfaces/QRCodeUrl.html":{},"interfaces/Roominfo.html":{},"interfaces/SessionPayload.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"classes/TwoFactorTokenDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Vector2D.html":{}}}],["info.decorator",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["info.decorator.ts",{"_index":1431,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ingame",{"_index":438,"title":{},"body":{"interfaces/Ball.html":{},"classes/GameGateway.html":{},"interfaces/Gameinfo.html":{},"interfaces/Player.html":{},"interfaces/Roominfo.html":{},"entities/User.html":{},"interfaces/Vector2D.html":{},"miscellaneous/enumerations.html":{}}}],["inject",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["injectable",{"_index":125,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ChannelsService.html":{},"injectables/ChatsService.html":{},"injectables/GameService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorGuard.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"injectables/TwoFactorAuthService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"guards/AuthSessionGuard.html":{},"injectables/ChannelsService.html":{},"injectables/ChatsService.html":{},"guards/FourtyTwoGuard.html":{},"injectables/GameService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorGuard.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":126,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/ChannelsService.html":{},"injectables/ChatsService.html":{},"injectables/GameService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorGuard.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"injectables/TwoFactorAuthService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectqueue",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"guards/FourtyTwoGuard.html":{}}}],["injectqueue('fourtytwologin",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"guards/FourtyTwoGuard.html":{}}}],["injectrepository",{"_index":583,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/ChatsService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(channelmember",{"_index":587,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["injectrepository(channels",{"_index":585,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["injectrepository(chats",{"_index":680,"title":{},"body":{"injectables/ChatsService.html":{}}}],["injectrepository(user",{"_index":586,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/ChatsService.html":{},"injectables/UsersService.html":{}}}],["inline",{"_index":1320,"title":{},"body":{"controllers/UsersController.html":{}}}],["innerjoin('channels",{"_index":613,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["insert",{"_index":513,"title":{},"body":{"entities/Channels.html":{}}}],["interface",{"_index":423,"title":{"interfaces/Ball.html":{},"interfaces/FourtyTwoToken.html":{},"interfaces/Gameinfo.html":{},"interfaces/JwtTokenPayload.html":{},"interfaces/Player.html":{},"interfaces/QRCodeUrl.html":{},"interfaces/Roominfo.html":{},"interfaces/SessionPayload.html":{},"interfaces/Vector2D.html":{}},"body":{"interfaces/Ball.html":{},"interfaces/FourtyTwoToken.html":{},"interfaces/Gameinfo.html":{},"interfaces/JwtTokenPayload.html":{},"interfaces/Player.html":{},"interfaces/QRCodeUrl.html":{},"interfaces/Roominfo.html":{},"interfaces/SessionPayload.html":{},"injectables/TwoFactorAuthService.html":{},"interfaces/Vector2D.html":{},"coverage.html":{}}}],["interface/fourty",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/FourtyTwoGuard.html":{},"classes/LoginConsumer.html":{}}}],["interface/jwt",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{}}}],["interface/session",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["interfaces",{"_index":425,"title":{},"body":{"interfaces/Ball.html":{},"interfaces/FourtyTwoToken.html":{},"interfaces/Gameinfo.html":{},"interfaces/JwtTokenPayload.html":{},"interfaces/Player.html":{},"interfaces/QRCodeUrl.html":{},"interfaces/Roominfo.html":{},"interfaces/SessionPayload.html":{},"interfaces/Vector2D.html":{},"overview.html":{}}}],["intervalid",{"_index":950,"title":{},"body":{"injectables/GameService.html":{}}}],["invalid",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{},"controllers/TwoFactorAuthController.html":{}}}],["invite",{"_index":807,"title":{},"body":{"classes/GameGateway.html":{}}}],["invite_to_game",{"_index":1095,"title":{},"body":{"injectables/LobbyService.html":{}}}],["invite_to_game(socket",{"_index":1101,"title":{},"body":{"injectables/LobbyService.html":{}}}],["isglobal",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["isinvalidrequest",{"_index":1405,"title":{},"body":{"injectables/UsersService.html":{}}}],["isinvalidrequest.length",{"_index":1407,"title":{},"body":{"injectables/UsersService.html":{}}}],["isnotempty",{"_index":721,"title":{},"body":{"classes/CreateChannelDto.html":{}}}],["isnotempty()@isstring()@apiproperty({example",{"_index":718,"title":{},"body":{"classes/CreateChannelDto.html":{}}}],["isnumber",{"_index":722,"title":{},"body":{"classes/CreateChannelDto.html":{}}}],["isnumberstring",{"_index":1238,"title":{},"body":{"classes/TwoFactorTokenDto.html":{}}}],["isready",{"_index":952,"title":{},"body":{"injectables/GameService.html":{}}}],["isrefreshtokenmatch",{"_index":1395,"title":{},"body":{"injectables/UsersService.html":{}}}],["isstring",{"_index":723,"title":{},"body":{"classes/CreateChannelDto.html":{}}}],["isstring()@isnotempty()@apiproperty({example",{"_index":715,"title":{},"body":{"classes/CreateChannelDto.html":{}}}],["istwofactorauthenticationcompleted",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtTokenPayload.html":{}}}],["istwofactorauthenticationenabled",{"_index":1243,"title":{},"body":{"entities/User.html":{},"injectables/UsersService.html":{}}}],["isverified",{"_index":1173,"title":{},"body":{"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{}}}],["jest",{"_index":1474,"title":{},"body":{"dependencies.html":{}}}],["job",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{},"guards/FourtyTwoGuard.html":{},"classes/LoginConsumer.html":{}}}],["job.data",{"_index":1151,"title":{},"body":{"classes/LoginConsumer.html":{}}}],["job.finished",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"guards/FourtyTwoGuard.html":{}}}],["job.id",{"_index":1150,"title":{},"body":{"classes/LoginConsumer.html":{}}}],["joi",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["joi.number",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.number().required",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.object",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().required",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["join_queue",{"_index":819,"title":{},"body":{"classes/GameGateway.html":{},"injectables/LobbyService.html":{}}}],["join_queue(nsp",{"_index":1103,"title":{},"body":{"injectables/LobbyService.html":{}}}],["joincolumn",{"_index":479,"title":{},"body":{"entities/ChannelMember.html":{}}}],["joincolumn({name",{"_index":485,"title":{},"body":{"entities/ChannelMember.html":{}}}],["jpeg",{"_index":1290,"title":{},"body":{"controllers/UsersController.html":{}}}],["jpg",{"_index":1292,"title":{},"body":{"controllers/UsersController.html":{}}}],["junyopar",{"_index":713,"title":{},"body":{"classes/CreateChannelDto.html":{}}}],["jwt",{"_index":1055,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["jwt_access_token_expiration_time",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["jwt_access_token_secret",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["jwt_refresh_token_expiration_time",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["jwt_refresh_token_secret",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":32,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/TwoFactorAuthController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":1057,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{}}}],["jwtmodule",{"_index":290,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":314,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtrefreshauthguard",{"_index":197,"title":{"injectables/JwtRefreshAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshAuthGuard.html":{},"coverage.html":{}}}],["jwtrefreshstrategy",{"_index":283,"title":{"injectables/JwtRefreshStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtRefreshStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwtservice",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":284,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwttokenpayload",{"_index":358,"title":{"interfaces/JwtTokenPayload.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"interfaces/JwtTokenPayload.html":{},"injectables/JwtTwoFactorStrategy.html":{},"coverage.html":{}}}],["jwttwofactorguard",{"_index":1081,"title":{"injectables/JwtTwoFactorGuard.html":{}},"body":{"injectables/JwtTwoFactorGuard.html":{},"controllers/TwoFactorAuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwttwofactorstrategy",{"_index":285,"title":{"injectables/JwtTwoFactorStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtTwoFactorStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["key",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keycode",{"_index":859,"title":{},"body":{"classes/GameGateway.html":{},"injectables/GameService.html":{}}}],["keypress",{"_index":810,"title":{},"body":{"classes/GameGateway.html":{}}}],["keyrelease",{"_index":813,"title":{},"body":{"classes/GameGateway.html":{}}}],["kind",{"_index":1556,"title":{},"body":{"license.html":{}}}],["left",{"_index":1033,"title":{},"body":{"injectables/GameService.html":{}}}],["leftjoin('dms",{"_index":686,"title":{},"body":{"injectables/ChatsService.html":{}}}],["leftjoin('user.dms",{"_index":683,"title":{},"body":{"injectables/ChatsService.html":{}}}],["length",{"_index":496,"title":{},"body":{"entities/Channels.html":{},"classes/CreateUserDto.html":{},"classes/TwoFactorTokenDto.html":{}}}],["length(2",{"_index":731,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["length(6",{"_index":1239,"title":{},"body":{"classes/TwoFactorTokenDto.html":{}}}],["liability",{"_index":1570,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1567,"title":{},"body":{"license.html":{}}}],["license",{"_index":1510,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["limit",{"_index":1289,"title":{},"body":{"controllers/UsersController.html":{}}}],["limitation",{"_index":1532,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1558,"title":{},"body":{"license.html":{}}}],["limiter",{"_index":308,"title":{},"body":{"modules/AuthModule.html":{}}}],["link",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/SessionPayload.html":{}}}],["listenformessage",{"_index":618,"title":{},"body":{"classes/ChatGateway.html":{}}}],["listenformessage(@messagebody",{"_index":625,"title":{},"body":{"classes/ChatGateway.html":{}}}],["listenformessage(data",{"_index":620,"title":{},"body":{"classes/ChatGateway.html":{}}}],["literal",{"_index":883,"title":{},"body":{"injectables/GameService.html":{},"miscellaneous/typealiases.html":{}}}],["lobby",{"_index":794,"title":{},"body":{"classes/GameGateway.html":{}}}],["lobby.service",{"_index":832,"title":{},"body":{"classes/GameGateway.html":{},"modules/GameModule.html":{}}}],["lobbyservice",{"_index":795,"title":{"injectables/LobbyService.html":{}},"body":{"classes/GameGateway.html":{},"modules/GameModule.html":{},"injectables/LobbyService.html":{},"coverage.html":{},"overview.html":{}}}],["log",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["logged",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{}}}],["logger",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthSessionGuard.html":{},"guards/FourtyTwoGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{},"classes/LoginConsumer.html":{},"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{},"injectables/UsersService.html":{}}}],["logger('user",{"_index":1380,"title":{},"body":{"injectables/UsersService.html":{}}}],["logger(authcontroller.name",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["logger(authservice.name",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["logger(authsessionguard.name",{"_index":418,"title":{},"body":{"guards/AuthSessionGuard.html":{}}}],["logger(fourtytwoguard.name",{"_index":762,"title":{},"body":{"guards/FourtyTwoGuard.html":{}}}],["logger(jwtrefreshstrategy.name",{"_index":1050,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["logger(jwtstrategy.name",{"_index":1071,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["logger(jwttwofactorstrategy.name",{"_index":1086,"title":{},"body":{"injectables/JwtTwoFactorStrategy.html":{}}}],["logger(loginconsumer.name",{"_index":1137,"title":{},"body":{"classes/LoginConsumer.html":{}}}],["logger(twofactorauthservice.name",{"_index":1163,"title":{},"body":{"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{}}}],["login",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(@req",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["login.consumer",{"_index":299,"title":{},"body":{"modules/AuthModule.html":{}}}],["loginconsumer",{"_index":298,"title":{"classes/LoginConsumer.html":{}},"body":{"modules/AuthModule.html":{},"classes/LoginConsumer.html":{},"coverage.html":{}}}],["loginqueue",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"guards/FourtyTwoGuard.html":{}}}],["logout",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(@req",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(req",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["m",{"_index":465,"title":{},"body":{"entities/ChannelMember.html":{}}}],["makenewroom",{"_index":880,"title":{},"body":{"injectables/GameService.html":{}}}],["makenewroom(roomid",{"_index":912,"title":{},"body":{"injectables/GameService.html":{}}}],["many",{"_index":466,"title":{},"body":{"entities/ChannelMember.html":{}}}],["manytoone",{"_index":477,"title":{},"body":{"entities/ChannelMember.html":{}}}],["manytoone(undefined)@joincolumn({name",{"_index":462,"title":{},"body":{"entities/ChannelMember.html":{}}}],["map",{"_index":916,"title":{},"body":{"injectables/GameService.html":{},"injectables/LobbyService.html":{}}}],["matches",{"_index":734,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(`[a",{"_index":735,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(`\\.{0",{"_index":736,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthSessionGuard.html":{},"interfaces/Ball.html":{},"entities/ChannelMember.html":{},"entities/Channels.html":{},"controllers/ChannelsController.html":{},"classes/ChannelsGateway.html":{},"modules/ChannelsModule.html":{},"injectables/ChannelsService.html":{},"classes/ChatGateway.html":{},"entities/Chats.html":{},"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"classes/CreateChannelDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"modules/EventsModule.html":{},"guards/FourtyTwoGuard.html":{},"interfaces/FourtyTwoToken.html":{},"classes/GameGateway.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"interfaces/Gameinfo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"interfaces/JwtTokenPayload.html":{},"injectables/JwtTwoFactorGuard.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{},"interfaces/Player.html":{},"interfaces/QRCodeUrl.html":{},"interfaces/Roominfo.html":{},"interfaces/SessionPayload.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"classes/TwoFactorTokenDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Vector2D.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":309,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["maxfilesizevalidator",{"_index":1301,"title":{},"body":{"controllers/UsersController.html":{}}}],["maxsize",{"_index":1328,"title":{},"body":{"controllers/UsersController.html":{}}}],["merchantability",{"_index":1560,"title":{},"body":{"license.html":{}}}],["merge",{"_index":599,"title":{},"body":{"injectables/ChannelsService.html":{},"license.html":{}}}],["messagebody",{"_index":623,"title":{},"body":{"classes/ChatGateway.html":{}}}],["metadata",{"_index":1488,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":986,"title":{},"body":{"injectables/GameService.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthSessionGuard.html":{},"controllers/ChannelsController.html":{},"classes/ChannelsGateway.html":{},"injectables/ChannelsService.html":{},"classes/ChatGateway.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"guards/FourtyTwoGuard.html":{},"classes/GameGateway.html":{},"injectables/GameService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":1493,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1511,"title":{},"body":{"license.html":{}}}],["mock",{"_index":1475,"title":{},"body":{"dependencies.html":{}}}],["mockedconfigservice",{"_index":1445,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockedjwtservice",{"_index":1447,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":1535,"title":{},"body":{"license.html":{}}}],["module",{"_index":47,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChannelsModule.html":{},"modules/ChatsModule.html":{},"modules/DatabaseModule.html":{},"modules/EventsModule.html":{},"modules/GameModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChannelsModule.html":{},"modules/ChatsModule.html":{},"modules/DatabaseModule.html":{},"modules/EventsModule.html":{},"modules/GameModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":49,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChannelsModule.html":{},"modules/ChatsModule.html":{},"modules/DatabaseModule.html":{},"modules/EventsModule.html":{},"modules/GameModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["myid",{"_index":577,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/ChatsService.html":{}}}],["name",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthSessionGuard.html":{},"controllers/ChannelsController.html":{},"injectables/ChannelsService.html":{},"classes/ChatGateway.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"guards/FourtyTwoGuard.html":{},"classes/GameGateway.html":{},"injectables/GameService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["namespace",{"_index":798,"title":{},"body":{"classes/GameGateway.html":{},"injectables/GameService.html":{},"injectables/LobbyService.html":{}}}],["needs",{"_index":1090,"title":{},"body":{"injectables/JwtTwoFactorStrategy.html":{}}}],["nestjs/axios",{"_index":296,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/bull",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/FourtyTwoGuard.html":{},"classes/LoginConsumer.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthSessionGuard.html":{},"controllers/ChannelsController.html":{},"modules/ChannelsModule.html":{},"injectables/ChannelsService.html":{},"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"modules/DatabaseModule.html":{},"modules/EventsModule.html":{},"guards/FourtyTwoGuard.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorGuard.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{},"interfaces/QRCodeUrl.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":291,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":1039,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorGuard.html":{},"injectables/JwtTwoFactorStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1307,"title":{},"body":{"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/ChannelsController.html":{},"classes/CreateChannelDto.html":{},"classes/CreateUserDto.html":{},"controllers/TwoFactorAuthController.html":{},"classes/TwoFactorTokenDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":293,"title":{},"body":{"modules/AuthModule.html":{},"modules/ChannelsModule.html":{},"injectables/ChannelsService.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/websockets",{"_index":556,"title":{},"body":{"classes/ChannelsGateway.html":{},"classes/ChatGateway.html":{},"classes/GameGateway.html":{},"dependencies.html":{}}}],["new",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthSessionGuard.html":{},"injectables/ChannelsService.html":{},"injectables/ChatsService.html":{},"guards/FourtyTwoGuard.html":{},"injectables/GameService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{},"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["nickname",{"_index":727,"title":{},"body":{"classes/CreateUserDto.html":{},"entities/User.html":{},"injectables/UsersService.html":{}}}],["noninfringement",{"_index":1564,"title":{},"body":{"license.html":{}}}],["notfounderrormessage",{"_index":1385,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["notfoundexception",{"_index":1382,"title":{},"body":{"injectables/UsersService.html":{}}}],["notfoundexception('invalid",{"_index":1404,"title":{},"body":{"injectables/UsersService.html":{}}}],["notfoundexception(notfounderrormessage",{"_index":1391,"title":{},"body":{"injectables/UsersService.html":{}}}],["nothing",{"_index":1400,"title":{},"body":{"injectables/UsersService.html":{}}}],["notice",{"_index":1549,"title":{},"body":{"license.html":{}}}],["nsp",{"_index":781,"title":{},"body":{"classes/GameGateway.html":{},"injectables/GameService.html":{},"injectables/LobbyService.html":{}}}],["nsp.to(game.gameid).emit(\"game_over",{"_index":981,"title":{},"body":{"injectables/GameService.html":{}}}],["nsp.to(game.gameid).emit(\"update_game",{"_index":1004,"title":{},"body":{"injectables/GameService.html":{}}}],["nsp.to(game.gameid).emit(\"update_score",{"_index":978,"title":{},"body":{"injectables/GameService.html":{}}}],["nsp.to(roomid).emit(\"enter_to_game",{"_index":1131,"title":{},"body":{"injectables/LobbyService.html":{}}}],["nsp.to(roomid).emit(\"game_start",{"_index":972,"title":{},"body":{"injectables/GameService.html":{}}}],["null",{"_index":499,"title":{},"body":{"entities/Channels.html":{},"entities/Chats.html":{},"injectables/GameService.html":{},"injectables/UsersService.html":{}}}],["nullable",{"_index":501,"title":{},"body":{"entities/Channels.html":{},"entities/Chats.html":{},"entities/User.html":{}}}],["number",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Ball.html":{},"entities/ChannelMember.html":{},"entities/Channels.html":{},"injectables/ChannelsService.html":{},"entities/Chats.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"classes/CreateChannelDto.html":{},"interfaces/FourtyTwoToken.html":{},"injectables/GameService.html":{},"interfaces/Gameinfo.html":{},"interfaces/JwtTokenPayload.html":{},"interfaces/Player.html":{},"interfaces/QRCodeUrl.html":{},"interfaces/Roominfo.html":{},"interfaces/SessionPayload.html":{},"injectables/TwoFactorAuthService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"interfaces/Vector2D.html":{},"miscellaneous/variables.html":{}}}],["number(game.data.down_pressed.p1",{"_index":1006,"title":{},"body":{"injectables/GameService.html":{}}}],["number(game.data.down_pressed.p2",{"_index":1009,"title":{},"body":{"injectables/GameService.html":{}}}],["number(game.data.up_pressed.p1",{"_index":1007,"title":{},"body":{"injectables/GameService.html":{}}}],["number(game.data.up_pressed.p2",{"_index":1010,"title":{},"body":{"injectables/GameService.html":{}}}],["number(id",{"_index":706,"title":{},"body":{"injectables/ChatsService.html":{}}}],["oauth2",{"_index":1482,"title":{},"body":{"dependencies.html":{}}}],["object",{"_index":1324,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.keys(object).find((key",{"_index":678,"title":{},"body":{"injectables/ChatsService.html":{}}}],["object[key",{"_index":679,"title":{},"body":{"injectables/ChatsService.html":{}}}],["obtaining",{"_index":1523,"title":{},"body":{"license.html":{}}}],["off')@httpcode(200)@useguards(jwttwofactorguard)@apiokresponse({description",{"_index":1194,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["offline",{"_index":1265,"title":{},"body":{"entities/User.html":{},"miscellaneous/enumerations.html":{}}}],["on')@httpcode(200)@useguards(jwtauthguard)@apiokresponse({description",{"_index":1197,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["one",{"_index":467,"title":{},"body":{"entities/ChannelMember.html":{}}}],["onetomany",{"_index":507,"title":{},"body":{"entities/Channels.html":{}}}],["onetomany(type",{"_index":514,"title":{},"body":{"entities/Channels.html":{}}}],["online",{"_index":1264,"title":{},"body":{"entities/User.html":{},"miscellaneous/enumerations.html":{}}}],["onlinemap[`/ws",{"_index":705,"title":{},"body":{"injectables/ChatsService.html":{}}}],["optional",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthSessionGuard.html":{},"controllers/ChannelsController.html":{},"injectables/ChannelsService.html":{},"classes/ChatGateway.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"guards/FourtyTwoGuard.html":{},"classes/GameGateway.html":{},"injectables/GameService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"interfaces/JwtTokenPayload.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["otherwise",{"_index":1575,"title":{},"body":{"license.html":{}}}],["otpurl",{"_index":1211,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["out",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/ChannelsModule.html":{},"modules/ChatsModule.html":{},"modules/EventsModule.html":{},"modules/GameModule.html":{},"modules/UsersModule.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":1585,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":487,"title":{},"body":{"entities/Channels.html":{},"injectables/ChannelsService.html":{},"classes/CreateChannelDto.html":{}}}],["p1",{"_index":447,"title":{},"body":{"interfaces/Ball.html":{},"injectables/GameService.html":{},"interfaces/Gameinfo.html":{},"injectables/LobbyService.html":{},"interfaces/Player.html":{},"interfaces/Roominfo.html":{},"interfaces/Vector2D.html":{}}}],["p1.emit(\"out_of_queue",{"_index":1123,"title":{},"body":{"injectables/LobbyService.html":{}}}],["p1.id",{"_index":1126,"title":{},"body":{"injectables/LobbyService.html":{}}}],["p1.join(roomid",{"_index":1129,"title":{},"body":{"injectables/LobbyService.html":{}}}],["p1_dir",{"_index":1005,"title":{},"body":{"injectables/GameService.html":{}}}],["p2",{"_index":448,"title":{},"body":{"interfaces/Ball.html":{},"injectables/GameService.html":{},"interfaces/Gameinfo.html":{},"injectables/LobbyService.html":{},"interfaces/Player.html":{},"interfaces/Roominfo.html":{},"interfaces/Vector2D.html":{}}}],["p2.emit(\"out_of_queue",{"_index":1125,"title":{},"body":{"injectables/LobbyService.html":{}}}],["p2.id",{"_index":1127,"title":{},"body":{"injectables/LobbyService.html":{}}}],["p2.join(roomid",{"_index":1130,"title":{},"body":{"injectables/LobbyService.html":{}}}],["p2_dir",{"_index":1008,"title":{},"body":{"injectables/GameService.html":{}}}],["package",{"_index":1450,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paddle_h",{"_index":928,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paddle_l",{"_index":932,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paddle_pos",{"_index":946,"title":{},"body":{"injectables/GameService.html":{}}}],["paddle_r",{"_index":934,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paddle_speed",{"_index":937,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paddle_w",{"_index":930,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":531,"title":{},"body":{"controllers/ChannelsController.html":{},"controllers/ChatsController.html":{}}}],["param('id",{"_index":658,"title":{},"body":{"controllers/ChatsController.html":{}}}],["param('title",{"_index":546,"title":{},"body":{"controllers/ChannelsController.html":{}}}],["param('url",{"_index":541,"title":{},"body":{"controllers/ChannelsController.html":{},"controllers/ChatsController.html":{}}}],["parameters",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthSessionGuard.html":{},"controllers/ChannelsController.html":{},"injectables/ChannelsService.html":{},"classes/ChatGateway.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"guards/FourtyTwoGuard.html":{},"classes/GameGateway.html":{},"injectables/GameService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["parsefilepipe",{"_index":1302,"title":{},"body":{"controllers/UsersController.html":{}}}],["parseintpipe",{"_index":659,"title":{},"body":{"controllers/ChatsController.html":{}}}],["parser",{"_index":1471,"title":{},"body":{"dependencies.html":{}}}],["particular",{"_index":1562,"title":{},"body":{"license.html":{}}}],["passport",{"_index":1054,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{},"dependencies.html":{}}}],["passportstrategy",{"_index":1051,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1072,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passreqtocallback",{"_index":1062,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["passthrough",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["password",{"_index":488,"title":{},"body":{"entities/Channels.html":{},"injectables/ChannelsService.html":{},"classes/CreateChannelDto.html":{},"modules/DatabaseModule.html":{}}}],["password:string",{"_index":592,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["path",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{},"classes/GameGateway.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{}}}],["payload.id",{"_index":1066,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{}}}],["payload.interface.ts",{"_index":1080,"title":{},"body":{"interfaces/JwtTokenPayload.html":{},"interfaces/SessionPayload.html":{},"coverage.html":{}}}],["payload.istwofactorauthenticationcompleted",{"_index":1077,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{}}}],["payload[0",{"_index":858,"title":{},"body":{"classes/GameGateway.html":{}}}],["payload[1",{"_index":860,"title":{},"body":{"classes/GameGateway.html":{}}}],["permission",{"_index":1517,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1542,"title":{},"body":{"license.html":{}}}],["person",{"_index":1522,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1543,"title":{},"body":{"license.html":{}}}],["pg",{"_index":1484,"title":{},"body":{"dependencies.html":{}}}],["pipe",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["pipeqrcodestream",{"_index":1226,"title":{},"body":{"injectables/TwoFactorAuthService.html":{}}}],["pipeqrcodestream(@res",{"_index":1169,"title":{},"body":{"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{}}}],["pipeqrcodestream(response",{"_index":1231,"title":{},"body":{"injectables/TwoFactorAuthService.html":{}}}],["player",{"_index":440,"title":{"interfaces/Player.html":{}},"body":{"interfaces/Ball.html":{},"injectables/GameService.html":{},"interfaces/Gameinfo.html":{},"interfaces/Player.html":{},"interfaces/Roominfo.html":{},"interfaces/Vector2D.html":{},"coverage.html":{}}}],["playerid",{"_index":985,"title":{},"body":{"injectables/GameService.html":{}}}],["players",{"_index":953,"title":{},"body":{"injectables/GameService.html":{}}}],["png",{"_index":1293,"title":{},"body":{"controllers/UsersController.html":{}}}],["pong",{"_index":1507,"title":{},"body":{"index.html":{}}}],["port",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["portions",{"_index":1553,"title":{},"body":{"license.html":{}}}],["pos",{"_index":427,"title":{},"body":{"interfaces/Ball.html":{},"injectables/GameService.html":{},"interfaces/Gameinfo.html":{},"interfaces/Player.html":{},"interfaces/Roominfo.html":{},"interfaces/Vector2D.html":{}}}],["pos.x",{"_index":1020,"title":{},"body":{"injectables/GameService.html":{}}}],["pos.y",{"_index":1026,"title":{},"body":{"injectables/GameService.html":{}}}],["positions",{"_index":905,"title":{},"body":{"injectables/GameService.html":{}}}],["positions.ball_pos",{"_index":1022,"title":{},"body":{"injectables/GameService.html":{}}}],["positions.ball_vel",{"_index":1023,"title":{},"body":{"injectables/GameService.html":{}}}],["post",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ChannelsController.html":{},"controllers/ChatsController.html":{},"controllers/TwoFactorAuthController.html":{},"controllers/UsersController.html":{}}}],["post('/room",{"_index":525,"title":{},"body":{"controllers/ChannelsController.html":{}}}],["post(':url/chats/:id/contents",{"_index":646,"title":{},"body":{"controllers/ChatsController.html":{}}}],["post('logout",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout')@useguards(jwtauthguard)@httpcode(200)@apiokresponse({description",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup')@useguards(authsessionguard)@apioperation({summary",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('turn",{"_index":1193,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["post('validate",{"_index":1217,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["post('validate')@httpcode(200)@useguards(jwtauthguard)@apibody({type",{"_index":1200,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["postgres",{"_index":739,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["postgreserrorcode",{"_index":1495,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["prefix",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ChannelsController.html":{},"controllers/ChatsController.html":{},"controllers/TwoFactorAuthController.html":{},"controllers/UsersController.html":{}}}],["primary",{"_index":484,"title":{},"body":{"entities/ChannelMember.html":{}}}],["primarycolumn",{"_index":1253,"title":{},"body":{"entities/User.html":{}}}],["primarycolumncannotbenullableerror",{"_index":478,"title":{},"body":{"entities/ChannelMember.html":{}}}],["primarygeneratedcolumn",{"_index":471,"title":{},"body":{"entities/ChannelMember.html":{},"entities/Channels.html":{},"entities/Chats.html":{}}}],["private",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthSessionGuard.html":{},"entities/Channels.html":{},"injectables/ChannelsService.html":{},"injectables/ChatsService.html":{},"guards/FourtyTwoGuard.html":{},"classes/GameGateway.html":{},"injectables/GameService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{},"interfaces/QRCodeUrl.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"injectables/UsersService.html":{}}}],["process",{"_index":1144,"title":{},"body":{"classes/LoginConsumer.html":{}}}],["process('token",{"_index":1139,"title":{},"body":{"classes/LoginConsumer.html":{}}}],["process('userinfo",{"_index":1142,"title":{},"body":{"classes/LoginConsumer.html":{}}}],["process.env.node_env",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["processing",{"_index":1149,"title":{},"body":{"classes/LoginConsumer.html":{}}}],["processor",{"_index":1145,"title":{},"body":{"classes/LoginConsumer.html":{}}}],["processor('fourtytwologin",{"_index":1147,"title":{},"body":{"classes/LoginConsumer.html":{}}}],["project",{"_index":1509,"title":{},"body":{"index.html":{}}}],["promise",{"_index":759,"title":{},"body":{"guards/FourtyTwoGuard.html":{},"classes/LoginConsumer.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":317,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"guards/AuthSessionGuard.html":{},"interfaces/Ball.html":{},"entities/ChannelMember.html":{},"entities/Channels.html":{},"classes/ChannelsGateway.html":{},"classes/ChatGateway.html":{},"entities/Chats.html":{},"classes/CreateChannelDto.html":{},"classes/CreateUserDto.html":{},"guards/FourtyTwoGuard.html":{},"interfaces/FourtyTwoToken.html":{},"classes/GameGateway.html":{},"injectables/GameService.html":{},"interfaces/Gameinfo.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"interfaces/JwtTokenPayload.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{},"interfaces/Player.html":{},"interfaces/QRCodeUrl.html":{},"interfaces/Roominfo.html":{},"interfaces/SessionPayload.html":{},"injectables/TwoFactorAuthService.html":{},"classes/TwoFactorTokenDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/Vector2D.html":{},"properties.html":{}}}],["provide",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":1554,"title":{},"body":{"license.html":{}}}],["providers",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChannelsModule.html":{},"modules/ChatsModule.html":{},"modules/EventsModule.html":{},"modules/GameModule.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":711,"title":{},"body":{"classes/CreateChannelDto.html":{}}}],["publish",{"_index":1536,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1563,"title":{},"body":{"license.html":{}}}],["put",{"_index":1303,"title":{},"body":{"controllers/UsersController.html":{}}}],["put('avatar",{"_index":1322,"title":{},"body":{"controllers/UsersController.html":{}}}],["put('avatar')@useinterceptors(undefined)@useguards(jwttwofactorguard)@apioperation({summary",{"_index":1287,"title":{},"body":{"controllers/UsersController.html":{}}}],["qr",{"_index":1190,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["qrcode",{"_index":1161,"title":{},"body":{"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{},"dependencies.html":{}}}],["qrcode.tofilestream(response",{"_index":1170,"title":{},"body":{"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{}}}],["qrcodeurl",{"_index":1158,"title":{"interfaces/QRCodeUrl.html":{}},"body":{"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{},"coverage.html":{}}}],["queue",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"guards/FourtyTwoGuard.html":{},"classes/LoginConsumer.html":{}}}],["queuesize",{"_index":1114,"title":{},"body":{"injectables/LobbyService.html":{}}}],["quit_game",{"_index":822,"title":{},"body":{"classes/GameGateway.html":{}}}],["quit_queue",{"_index":825,"title":{},"body":{"classes/GameGateway.html":{},"injectables/LobbyService.html":{}}}],["quit_queue(socket",{"_index":1105,"title":{},"body":{"injectables/LobbyService.html":{}}}],["quitgame",{"_index":881,"title":{},"body":{"injectables/GameService.html":{}}}],["quitgame(nsp",{"_index":914,"title":{},"body":{"injectables/GameService.html":{}}}],["rad",{"_index":1029,"title":{},"body":{"injectables/GameService.html":{}}}],["readonly",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/ChannelsService.html":{},"injectables/ChatsService.html":{},"guards/FourtyTwoGuard.html":{},"classes/GameGateway.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{},"classes/LoginConsumer.html":{},"interfaces/QRCodeUrl.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ready",{"_index":816,"title":{},"body":{"classes/GameGateway.html":{}}}],["receiverid",{"_index":631,"title":{},"body":{"entities/Chats.html":{}}}],["receiversocketid",{"_index":703,"title":{},"body":{"injectables/ChatsService.html":{}}}],["redirect",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{}}}],["redirect'})@redirect",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["redirect_uri",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["redirect_url",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{}}}],["redirect_url}/home",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{}}}],["redirect_url}/signup",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{}}}],["redirect_url}/twofactor",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{}}}],["redis",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["redis_host",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["redis_port",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["reflect",{"_index":1487,"title":{},"body":{"dependencies.html":{}}}],["refresh",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["refresh(@req",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(req",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh.strategy",{"_index":304,"title":{},"body":{"modules/AuthModule.html":{}}}],["refresh.strategy.ts",{"_index":1043,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"coverage.html":{}}}],["refresh.strategy.ts:14",{"_index":1047,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["refresh.strategy.ts:31",{"_index":1049,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["refresh=${refreshtoken",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token",{"_index":775,"title":{},"body":{"interfaces/FourtyTwoToken.html":{}}}],["refreshcookie",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/UsersService.html":{}}}],["register",{"_index":1183,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["register(@req",{"_index":1210,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["register(req",{"_index":1186,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["relations:['sender",{"_index":702,"title":{},"body":{"injectables/ChatsService.html":{}}}],["removerefreshtoken",{"_index":1346,"title":{},"body":{"injectables/UsersService.html":{}}}],["removerefreshtoken(id",{"_index":1367,"title":{},"body":{"injectables/UsersService.html":{}}}],["repository",{"_index":571,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/ChatsService.html":{},"injectables/UsersService.html":{}}}],["req",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/JwtRefreshStrategy.html":{},"controllers/TwoFactorAuthController.html":{},"controllers/UsersController.html":{}}}],["req.cookies?.refresh",{"_index":1063,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["req.res.setheader('content",{"_index":1214,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["req.res.setheader('set",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TwoFactorAuthController.html":{}}}],["req.session.destroy",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.session.info",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.user",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["req.user.id",{"_index":1213,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["request",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"guards/AuthSessionGuard.html":{},"guards/FourtyTwoGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["request.query",{"_index":765,"title":{},"body":{"guards/FourtyTwoGuard.html":{}}}],["request.session",{"_index":420,"title":{},"body":{"guards/AuthSessionGuard.html":{}}}],["request.sessioninfo",{"_index":422,"title":{},"body":{"guards/AuthSessionGuard.html":{},"miscellaneous/variables.html":{}}}],["request.token",{"_index":763,"title":{},"body":{"guards/FourtyTwoGuard.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request?.cookies?.authentication",{"_index":1073,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{}}}],["request?.cookies?.refresh",{"_index":1059,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["required",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["res",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/QRCodeUrl.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"controllers/UsersController.html":{}}}],["res.set",{"_index":1318,"title":{},"body":{"controllers/UsersController.html":{}}}],["res.setheader('set",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChannelsModule.html":{},"modules/ChatsModule.html":{},"modules/EventsModule.html":{},"modules/GameModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{},"controllers/UsersController.html":{}}}],["responsetype",{"_index":1402,"title":{},"body":{"injectables/UsersService.html":{}}}],["restriction",{"_index":1530,"title":{},"body":{"license.html":{}}}],["results",{"_index":45,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthSessionGuard.html":{},"interfaces/Ball.html":{},"entities/ChannelMember.html":{},"entities/Channels.html":{},"controllers/ChannelsController.html":{},"classes/ChannelsGateway.html":{},"modules/ChannelsModule.html":{},"injectables/ChannelsService.html":{},"classes/ChatGateway.html":{},"entities/Chats.html":{},"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"classes/CreateChannelDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"modules/EventsModule.html":{},"guards/FourtyTwoGuard.html":{},"interfaces/FourtyTwoToken.html":{},"classes/GameGateway.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"interfaces/Gameinfo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"interfaces/JwtTokenPayload.html":{},"injectables/JwtTwoFactorGuard.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{},"interfaces/Player.html":{},"interfaces/QRCodeUrl.html":{},"interfaces/Roominfo.html":{},"interfaces/SessionPayload.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"classes/TwoFactorTokenDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Vector2D.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthSessionGuard.html":{},"controllers/ChannelsController.html":{},"injectables/ChannelsService.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"guards/FourtyTwoGuard.html":{},"injectables/GameService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{},"interfaces/QRCodeUrl.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthSessionGuard.html":{},"controllers/ChannelsController.html":{},"classes/ChannelsGateway.html":{},"injectables/ChannelsService.html":{},"classes/ChatGateway.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"guards/FourtyTwoGuard.html":{},"classes/GameGateway.html":{},"injectables/GameService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returntype",{"_index":951,"title":{},"body":{"injectables/GameService.html":{}}}],["right",{"_index":1035,"title":{},"body":{"injectables/GameService.html":{}}}],["rights",{"_index":1533,"title":{},"body":{"license.html":{}}}],["room",{"_index":956,"title":{},"body":{"injectables/GameService.html":{}}}],["roomid",{"_index":450,"title":{},"body":{"interfaces/Ball.html":{},"classes/GameGateway.html":{},"injectables/GameService.html":{},"interfaces/Gameinfo.html":{},"injectables/LobbyService.html":{},"interfaces/Player.html":{},"interfaces/Roominfo.html":{},"interfaces/Vector2D.html":{}}}],["roominfo",{"_index":449,"title":{"interfaces/Roominfo.html":{}},"body":{"interfaces/Ball.html":{},"interfaces/Gameinfo.html":{},"interfaces/Player.html":{},"interfaces/Roominfo.html":{},"interfaces/Vector2D.html":{},"coverage.html":{}}}],["rxjs",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["savechat",{"_index":696,"title":{},"body":{"injectables/ChatsService.html":{}}}],["savechat.id",{"_index":701,"title":{},"body":{"injectables/ChatsService.html":{}}}],["schema",{"_index":1297,"title":{},"body":{"controllers/UsersController.html":{}}}],["scope",{"_index":776,"title":{},"body":{"interfaces/FourtyTwoToken.html":{}}}],["score",{"_index":445,"title":{},"body":{"interfaces/Ball.html":{},"injectables/GameService.html":{},"interfaces/Gameinfo.html":{},"interfaces/Player.html":{},"interfaces/Roominfo.html":{},"interfaces/Vector2D.html":{}}}],["score.p1",{"_index":1021,"title":{},"body":{"injectables/GameService.html":{}}}],["secret",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{},"injectables/UsersService.html":{}}}],["secret.ascii",{"_index":1167,"title":{},"body":{"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{}}}],["secret.otpauth_url",{"_index":1168,"title":{},"body":{"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{}}}],["secretorkey",{"_index":1060,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{}}}],["sell",{"_index":1540,"title":{},"body":{"license.html":{}}}],["senderid",{"_index":632,"title":{},"body":{"entities/Chats.html":{},"injectables/ChatsService.html":{}}}],["serivce",{"_index":1381,"title":{},"body":{"injectables/UsersService.html":{}}}],["server",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChannelsGateway.html":{},"classes/ChatGateway.html":{},"guards/FourtyTwoGuard.html":{}}}],["server:server",{"_index":624,"title":{},"body":{"classes/ChatGateway.html":{}}}],["session",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthSessionGuard.html":{},"dependencies.html":{}}}],["session.guard",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["session.guard.ts",{"_index":409,"title":{},"body":{"guards/AuthSessionGuard.html":{},"coverage.html":{}}}],["session.guard.ts:13",{"_index":413,"title":{},"body":{"guards/AuthSessionGuard.html":{}}}],["session.info",{"_index":421,"title":{},"body":{"guards/AuthSessionGuard.html":{}}}],["session_secret",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["sessioninfo",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sessioninfo.id",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["sessioninfo.link",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{}}}],["sessionpayload",{"_index":164,"title":{"interfaces/SessionPayload.html":{}},"body":{"controllers/AuthController.html":{},"interfaces/SessionPayload.html":{},"coverage.html":{}}}],["setcurrentrefreshtoken",{"_index":1347,"title":{},"body":{"injectables/UsersService.html":{}}}],["setcurrentrefreshtoken(refreshtoken",{"_index":1369,"title":{},"body":{"injectables/UsersService.html":{}}}],["setinterval",{"_index":991,"title":{},"body":{"injectables/GameService.html":{}}}],["settwofactorauthenticationsecret",{"_index":1348,"title":{},"body":{"injectables/UsersService.html":{}}}],["settwofactorauthenticationsecret(id",{"_index":1371,"title":{},"body":{"injectables/UsersService.html":{}}}],["shall",{"_index":1550,"title":{},"body":{"license.html":{}}}],["sign",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signed",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UsersService.html":{}}}],["signup(req",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["socket",{"_index":430,"title":{},"body":{"interfaces/Ball.html":{},"classes/GameGateway.html":{},"interfaces/Gameinfo.html":{},"injectables/LobbyService.html":{},"interfaces/Player.html":{},"interfaces/Roominfo.html":{},"interfaces/Vector2D.html":{}}}],["socket.emit(\"joined_to_queue",{"_index":1117,"title":{},"body":{"injectables/LobbyService.html":{}}}],["socket.emit('out_of_queue",{"_index":1120,"title":{},"body":{"injectables/LobbyService.html":{}}}],["socket.id",{"_index":839,"title":{},"body":{"classes/GameGateway.html":{},"injectables/LobbyService.html":{}}}],["socket.io",{"_index":431,"title":{},"body":{"interfaces/Ball.html":{},"classes/ChannelsGateway.html":{},"classes/ChatGateway.html":{},"classes/GameGateway.html":{},"injectables/GameService.html":{},"interfaces/Gameinfo.html":{},"injectables/LobbyService.html":{},"interfaces/Player.html":{},"interfaces/Roominfo.html":{},"interfaces/Vector2D.html":{},"dependencies.html":{}}}],["socketid",{"_index":441,"title":{},"body":{"interfaces/Ball.html":{},"injectables/GameService.html":{},"interfaces/Gameinfo.html":{},"interfaces/Player.html":{},"interfaces/Roominfo.html":{},"interfaces/Vector2D.html":{}}}],["software",{"_index":1525,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/AuthSessionGuard.html":{},"interfaces/Ball.html":{},"entities/ChannelMember.html":{},"entities/Channels.html":{},"controllers/ChannelsController.html":{},"classes/ChannelsGateway.html":{},"modules/ChannelsModule.html":{},"injectables/ChannelsService.html":{},"classes/ChatGateway.html":{},"entities/Chats.html":{},"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"classes/CreateChannelDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"modules/EventsModule.html":{},"guards/FourtyTwoGuard.html":{},"interfaces/FourtyTwoToken.html":{},"classes/GameGateway.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"interfaces/Gameinfo.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"interfaces/JwtTokenPayload.html":{},"injectables/JwtTwoFactorGuard.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{},"interfaces/Player.html":{},"interfaces/QRCodeUrl.html":{},"interfaces/Roominfo.html":{},"interfaces/SessionPayload.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"classes/TwoFactorTokenDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"interfaces/Vector2D.html":{}}}],["speakeasy",{"_index":1162,"title":{},"body":{"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{},"dependencies.html":{}}}],["speakeasy.generatesecret",{"_index":1165,"title":{},"body":{"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{}}}],["speakeasy.totp.verify",{"_index":1174,"title":{},"body":{"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{}}}],["spectate_game",{"_index":1096,"title":{},"body":{"injectables/LobbyService.html":{}}}],["spectate_game(socket",{"_index":1107,"title":{},"body":{"injectables/LobbyService.html":{}}}],["spectators",{"_index":954,"title":{},"body":{"injectables/GameService.html":{}}}],["src/.../auth.constants.ts",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../chats.service.ts",{"_index":1504,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../config.service.ts",{"_index":1599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../game.interface.ts",{"_index":1497,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../game.service.ts",{"_index":1596,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../jwt.service.ts",{"_index":1600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1503,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../postgreserrorcodes.enum.ts",{"_index":1496,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../session",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../token.decorator.ts",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.decorator.ts",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.entity.ts",{"_index":1498,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../users.service.ts",{"_index":1601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":127,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/auth/auth.constants.ts",{"_index":1426,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.controller.ts",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:104",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:136",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:149",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:60",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":287,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:25",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:39",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:54",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:61",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:71",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:89",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorator/session",{"_index":1430,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorator/token.decorator.ts",{"_index":1432,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorator/user.decorator.ts",{"_index":1433,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/guards/auth",{"_index":408,"title":{},"body":{"guards/AuthSessionGuard.html":{},"coverage.html":{}}}],["src/auth/guards/fourty",{"_index":753,"title":{},"body":{"guards/FourtyTwoGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/auth/guards/jwt",{"_index":1036,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtRefreshAuthGuard.html":{},"injectables/JwtTwoFactorGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/auth/interface/fourty",{"_index":770,"title":{},"body":{"interfaces/FourtyTwoToken.html":{},"coverage.html":{}}}],["src/auth/interface/jwt",{"_index":1079,"title":{},"body":{"interfaces/JwtTokenPayload.html":{},"coverage.html":{}}}],["src/auth/interface/session",{"_index":1181,"title":{},"body":{"interfaces/SessionPayload.html":{},"coverage.html":{}}}],["src/auth/login.consumer.ts",{"_index":1133,"title":{},"body":{"classes/LoginConsumer.html":{},"coverage.html":{}}}],["src/auth/login.consumer.ts:14",{"_index":1140,"title":{},"body":{"classes/LoginConsumer.html":{}}}],["src/auth/login.consumer.ts:26",{"_index":1143,"title":{},"body":{"classes/LoginConsumer.html":{}}}],["src/auth/login.consumer.ts:9",{"_index":1136,"title":{},"body":{"classes/LoginConsumer.html":{}}}],["src/auth/strategies/jwt",{"_index":1042,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts",{"_index":1067,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/strategies/jwt.strategy.ts:11",{"_index":1068,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/strategies/jwt.strategy.ts:27",{"_index":1070,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/two",{"_index":1159,"title":{},"body":{"interfaces/QRCodeUrl.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"classes/TwoFactorTokenDto.html":{},"coverage.html":{}}}],["src/channels/channelcember.entity",{"_index":565,"title":{},"body":{"modules/ChannelsModule.html":{},"injectables/ChannelsService.html":{}}}],["src/channels/channelcember.entity.ts",{"_index":455,"title":{},"body":{"entities/ChannelMember.html":{},"coverage.html":{}}}],["src/channels/channelcember.entity.ts:16",{"_index":472,"title":{},"body":{"entities/ChannelMember.html":{}}}],["src/channels/channelcember.entity.ts:19",{"_index":470,"title":{},"body":{"entities/ChannelMember.html":{}}}],["src/channels/channelcember.entity.ts:22",{"_index":474,"title":{},"body":{"entities/ChannelMember.html":{}}}],["src/channels/channelcember.entity.ts:25",{"_index":461,"title":{},"body":{"entities/ChannelMember.html":{}}}],["src/channels/channelcember.entity.ts:28",{"_index":475,"title":{},"body":{"entities/ChannelMember.html":{}}}],["src/channels/channelcember.entity.ts:37",{"_index":463,"title":{},"body":{"entities/ChannelMember.html":{}}}],["src/channels/channels.controller.ts",{"_index":517,"title":{},"body":{"controllers/ChannelsController.html":{},"coverage.html":{}}}],["src/channels/channels.controller.ts:17",{"_index":530,"title":{},"body":{"controllers/ChannelsController.html":{}}}],["src/channels/channels.controller.ts:23",{"_index":526,"title":{},"body":{"controllers/ChannelsController.html":{}}}],["src/channels/channels.controller.ts:35",{"_index":529,"title":{},"body":{"controllers/ChannelsController.html":{}}}],["src/channels/channels.entity",{"_index":564,"title":{},"body":{"modules/ChannelsModule.html":{},"injectables/ChannelsService.html":{}}}],["src/channels/channels.entity.ts",{"_index":486,"title":{},"body":{"entities/Channels.html":{},"coverage.html":{}}}],["src/channels/channels.entity.ts:12",{"_index":491,"title":{},"body":{"entities/Channels.html":{}}}],["src/channels/channels.entity.ts:15",{"_index":505,"title":{},"body":{"entities/Channels.html":{}}}],["src/channels/channels.entity.ts:18",{"_index":494,"title":{},"body":{"entities/Channels.html":{}}}],["src/channels/channels.entity.ts:25",{"_index":503,"title":{},"body":{"entities/Channels.html":{}}}],["src/channels/channels.entity.ts:28",{"_index":498,"title":{},"body":{"entities/Channels.html":{}}}],["src/channels/channels.entity.ts:31",{"_index":490,"title":{},"body":{"entities/Channels.html":{}}}],["src/channels/channels.entity.ts:34",{"_index":506,"title":{},"body":{"entities/Channels.html":{}}}],["src/channels/channels.module.ts",{"_index":562,"title":{},"body":{"modules/ChannelsModule.html":{}}}],["src/channels/channels.service.ts",{"_index":568,"title":{},"body":{"injectables/ChannelsService.html":{},"coverage.html":{}}}],["src/channels/channels.service.ts:21",{"_index":580,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["src/channels/channels.service.ts:25",{"_index":582,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["src/channels/channels.service.ts:29",{"_index":578,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["src/channels/channels.service.ts:53",{"_index":581,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["src/channels/channels.service.ts:9",{"_index":574,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["src/channels/dto/create",{"_index":709,"title":{},"body":{"classes/CreateChannelDto.html":{},"coverage.html":{}}}],["src/chats/chats.controller.ts",{"_index":641,"title":{},"body":{"controllers/ChatsController.html":{},"coverage.html":{}}}],["src/chats/chats.controller.ts:11",{"_index":650,"title":{},"body":{"controllers/ChatsController.html":{}}}],["src/chats/chats.controller.ts:19",{"_index":647,"title":{},"body":{"controllers/ChatsController.html":{}}}],["src/chats/chats.entity",{"_index":666,"title":{},"body":{"modules/ChatsModule.html":{}}}],["src/chats/chats.entity.ts",{"_index":629,"title":{},"body":{"entities/Chats.html":{},"coverage.html":{}}}],["src/chats/chats.entity.ts:11",{"_index":636,"title":{},"body":{"entities/Chats.html":{}}}],["src/chats/chats.entity.ts:14",{"_index":634,"title":{},"body":{"entities/Chats.html":{}}}],["src/chats/chats.entity.ts:17",{"_index":635,"title":{},"body":{"entities/Chats.html":{}}}],["src/chats/chats.entity.ts:20",{"_index":639,"title":{},"body":{"entities/Chats.html":{}}}],["src/chats/chats.entity.ts:23",{"_index":633,"title":{},"body":{"entities/Chats.html":{}}}],["src/chats/chats.entity.ts:26",{"_index":638,"title":{},"body":{"entities/Chats.html":{}}}],["src/chats/chats.entity.ts:29",{"_index":637,"title":{},"body":{"entities/Chats.html":{}}}],["src/chats/chats.module.ts",{"_index":664,"title":{},"body":{"modules/ChatsModule.html":{}}}],["src/chats/chats.service.ts",{"_index":669,"title":{},"body":{"injectables/ChatsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/chats/chats.service.ts:11",{"_index":671,"title":{},"body":{"injectables/ChatsService.html":{}}}],["src/chats/chats.service.ts:18",{"_index":674,"title":{},"body":{"injectables/ChatsService.html":{}}}],["src/chats/chats.service.ts:27",{"_index":673,"title":{},"body":{"injectables/ChatsService.html":{}}}],["src/common/decorators/user.decorator",{"_index":536,"title":{},"body":{"controllers/ChannelsController.html":{},"controllers/ChatsController.html":{}}}],["src/common/decorators/user.decorator.ts",{"_index":1438,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/database.module.ts",{"_index":737,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/postgreserrorcodes.enum.ts",{"_index":1499,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/events/events.channels.gateway",{"_index":584,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["src/events/events.channels.gateway.ts",{"_index":549,"title":{},"body":{"classes/ChannelsGateway.html":{},"coverage.html":{}}}],["src/events/events.channels.gateway.ts:6",{"_index":552,"title":{},"body":{"classes/ChannelsGateway.html":{}}}],["src/events/events.channels.gateway.ts:8",{"_index":553,"title":{},"body":{"classes/ChannelsGateway.html":{}}}],["src/events/events.chat.gateway.ts",{"_index":617,"title":{},"body":{"classes/ChatGateway.html":{},"coverage.html":{}}}],["src/events/events.chat.gateway.ts:11",{"_index":622,"title":{},"body":{"classes/ChatGateway.html":{}}}],["src/events/events.chat.gateway.ts:8",{"_index":619,"title":{},"body":{"classes/ChatGateway.html":{}}}],["src/events/events.module",{"_index":566,"title":{},"body":{"modules/ChannelsModule.html":{}}}],["src/events/events.module.ts",{"_index":751,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/game/game.gateway.ts",{"_index":779,"title":{},"body":{"classes/GameGateway.html":{},"coverage.html":{}}}],["src/game/game.gateway.ts:102",{"_index":814,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/game/game.gateway.ts:15",{"_index":799,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/game/game.gateway.ts:17",{"_index":797,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/game/game.gateway.ts:19",{"_index":800,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/game/game.gateway.ts:23",{"_index":802,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/game/game.gateway.ts:27",{"_index":804,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/game/game.gateway.ts:40",{"_index":808,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/game/game.gateway.ts:48",{"_index":829,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/game/game.gateway.ts:56",{"_index":820,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/game/game.gateway.ts:64",{"_index":826,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/game/game.gateway.ts:77",{"_index":817,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/game/game.gateway.ts:85",{"_index":823,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/game/game.gateway.ts:9",{"_index":796,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/game/game.gateway.ts:92",{"_index":811,"title":{},"body":{"classes/GameGateway.html":{}}}],["src/game/game.interface.ts",{"_index":426,"title":{},"body":{"interfaces/Ball.html":{},"interfaces/Gameinfo.html":{},"interfaces/Player.html":{},"interfaces/Roominfo.html":{},"interfaces/Vector2D.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/game/game.module.ts",{"_index":866,"title":{},"body":{"modules/GameModule.html":{}}}],["src/game/game.service.ts",{"_index":868,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/game/game.service.ts:102",{"_index":911,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:121",{"_index":915,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:152",{"_index":917,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:154",{"_index":918,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:157",{"_index":899,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:169",{"_index":901,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:184",{"_index":897,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:199",{"_index":891,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:218",{"_index":889,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:228",{"_index":895,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:252",{"_index":904,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:270",{"_index":893,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:304",{"_index":885,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:40",{"_index":913,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:64",{"_index":907,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:83",{"_index":909,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/lobby.service.ts",{"_index":1092,"title":{},"body":{"injectables/LobbyService.html":{},"coverage.html":{}}}],["src/game/lobby.service.ts:10",{"_index":1102,"title":{},"body":{"injectables/LobbyService.html":{}}}],["src/game/lobby.service.ts:14",{"_index":1108,"title":{},"body":{"injectables/LobbyService.html":{}}}],["src/game/lobby.service.ts:18",{"_index":1104,"title":{},"body":{"injectables/LobbyService.html":{}}}],["src/game/lobby.service.ts:35",{"_index":1106,"title":{},"body":{"injectables/LobbyService.html":{}}}],["src/game/lobby.service.ts:46",{"_index":1109,"title":{},"body":{"injectables/LobbyService.html":{}}}],["src/game/lobby.service.ts:48",{"_index":1100,"title":{},"body":{"injectables/LobbyService.html":{}}}],["src/game/lobby.service.ts:7",{"_index":1098,"title":{},"body":{"injectables/LobbyService.html":{}}}],["src/main.ts",{"_index":1442,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/dto/users.dto",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/users/dto/users.dto.ts",{"_index":726,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/users.dto.ts:9",{"_index":733,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/users/users.controller.ts",{"_index":1269,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:44",{"_index":1284,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:52",{"_index":1281,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:77",{"_index":1298,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:96",{"_index":1276,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.entity",{"_index":294,"title":{},"body":{"modules/AuthModule.html":{},"controllers/ChannelsController.html":{},"modules/ChannelsModule.html":{},"injectables/ChannelsService.html":{},"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{}}}],["src/users/users.entity.ts",{"_index":1241,"title":{},"body":{"entities/User.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/users/users.entity.ts:13",{"_index":1254,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.entity.ts:16",{"_index":1258,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.entity.ts:23",{"_index":1250,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.entity.ts:30",{"_index":1260,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.entity.ts:34",{"_index":1252,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.entity.ts:38",{"_index":1261,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.entity.ts:41",{"_index":1256,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.module",{"_index":297,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":1339,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{},"interfaces/QRCodeUrl.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{}}}],["src/users/users.service.ts",{"_index":1341,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.service.ts:111",{"_index":1376,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:123",{"_index":1374,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:135",{"_index":1362,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:144",{"_index":1364,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:149",{"_index":1358,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:158",{"_index":1379,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:19",{"_index":1352,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:26",{"_index":1372,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:38",{"_index":1370,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:53",{"_index":1366,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:66",{"_index":1360,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:78",{"_index":1368,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:90",{"_index":1356,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utils/mocks/config.service.ts",{"_index":1444,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/mocks/jwt.service.ts",{"_index":1446,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":437,"title":{},"body":{"interfaces/Ball.html":{},"interfaces/Gameinfo.html":{},"interfaces/Player.html":{},"interfaces/Roominfo.html":{},"interfaces/Vector2D.html":{},"miscellaneous/enumerations.html":{}}}],["started",{"_index":1506,"title":{"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":435,"title":{},"body":{"interfaces/Ball.html":{},"injectables/GameService.html":{},"interfaces/Gameinfo.html":{},"interfaces/Player.html":{},"interfaces/Roominfo.html":{},"interfaces/Vector2D.html":{},"miscellaneous/enumerations.html":{}}}],["statements",{"_index":1423,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":1244,"title":{},"body":{"entities/User.html":{}}}],["strategies/jwt",{"_index":303,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/jwt.strategy",{"_index":302,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":1053,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{}}}],["streamablefile",{"_index":1304,"title":{},"body":{"controllers/UsersController.html":{}}}],["streamablefile(avatar",{"_index":1321,"title":{},"body":{"controllers/UsersController.html":{}}}],["string",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Ball.html":{},"entities/Channels.html":{},"controllers/ChannelsController.html":{},"injectables/ChannelsService.html":{},"classes/ChatGateway.html":{},"entities/Chats.html":{},"injectables/ChatsService.html":{},"classes/CreateChannelDto.html":{},"classes/CreateUserDto.html":{},"interfaces/FourtyTwoToken.html":{},"classes/GameGateway.html":{},"injectables/GameService.html":{},"interfaces/Gameinfo.html":{},"injectables/LobbyService.html":{},"interfaces/Player.html":{},"interfaces/QRCodeUrl.html":{},"interfaces/Roominfo.html":{},"interfaces/SessionPayload.html":{},"injectables/TwoFactorAuthService.html":{},"classes/TwoFactorTokenDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/Vector2D.html":{},"miscellaneous/variables.html":{}}}],["subject",{"_index":1545,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1538,"title":{},"body":{"license.html":{}}}],["subscribemessage",{"_index":554,"title":{},"body":{"classes/ChannelsGateway.html":{},"classes/ChatGateway.html":{}}}],["subscribemessage('send_message",{"_index":621,"title":{},"body":{"classes/ChatGateway.html":{}}}],["substantial",{"_index":1552,"title":{},"body":{"license.html":{}}}],["summary",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ChannelsController.html":{},"controllers/ChatsController.html":{},"controllers/UsersController.html":{}}}],["super",{"_index":1056,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{}}}],["support",{"_index":1580,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1581,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":748,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["table",{"_index":1449,"title":{},"body":{"coverage.html":{}}}],["table_bottom",{"_index":926,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table_left",{"_index":919,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table_right",{"_index":921,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["table_top",{"_index":922,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1448,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":642,"title":{},"body":{"controllers/ChatsController.html":{},"miscellaneous/variables.html":{}}}],["this.__collid_check(game",{"_index":999,"title":{},"body":{"injectables/GameService.html":{}}}],["this.__game_list.delete(game.gameid",{"_index":997,"title":{},"body":{"injectables/GameService.html":{}}}],["this.__game_list.get(roomid",{"_index":959,"title":{},"body":{"injectables/GameService.html":{}}}],["this.__game_list.set(roomid",{"_index":958,"title":{},"body":{"injectables/GameService.html":{}}}],["this.__keyboard_check(game",{"_index":1000,"title":{},"body":{"injectables/GameService.html":{}}}],["this.__match_make(nsp",{"_index":1118,"title":{},"body":{"injectables/LobbyService.html":{}}}],["this.__paddle_collision(game.players.p1",{"_index":1014,"title":{},"body":{"injectables/GameService.html":{}}}],["this.__paddle_collision(game.players.p2",{"_index":1015,"title":{},"body":{"injectables/GameService.html":{}}}],["this.__player_list.delete(game.players.p1",{"_index":995,"title":{},"body":{"injectables/GameService.html":{}}}],["this.__player_list.delete(game.players.p2",{"_index":996,"title":{},"body":{"injectables/GameService.html":{}}}],["this.__player_list.get(socketid",{"_index":975,"title":{},"body":{"injectables/GameService.html":{}}}],["this.__player_list.set(game.players.p1",{"_index":988,"title":{},"body":{"injectables/GameService.html":{}}}],["this.__player_list.set(game.players.p2",{"_index":989,"title":{},"body":{"injectables/GameService.html":{}}}],["this.__queue.delete(p1.id",{"_index":1122,"title":{},"body":{"injectables/LobbyService.html":{}}}],["this.__queue.delete(p2.id",{"_index":1124,"title":{},"body":{"injectables/LobbyService.html":{}}}],["this.__queue.delete(socket.id",{"_index":1119,"title":{},"body":{"injectables/LobbyService.html":{}}}],["this.__queue.has(socket.id",{"_index":1113,"title":{},"body":{"injectables/LobbyService.html":{}}}],["this.__queue.set(socket.id",{"_index":1116,"title":{},"body":{"injectables/LobbyService.html":{}}}],["this.__queue.size",{"_index":1115,"title":{},"body":{"injectables/LobbyService.html":{}}}],["this.__queue.values().next().value",{"_index":1121,"title":{},"body":{"injectables/LobbyService.html":{}}}],["this.__score_check(nsp",{"_index":998,"title":{},"body":{"injectables/GameService.html":{}}}],["this.__single_game_frame(nsp",{"_index":992,"title":{},"body":{"injectables/GameService.html":{}}}],["this.__start_game(nsp",{"_index":973,"title":{},"body":{"injectables/GameService.html":{}}}],["this.__stop_game(game",{"_index":983,"title":{},"body":{"injectables/GameService.html":{}}}],["this.__wall_collision(game.data",{"_index":1013,"title":{},"body":{"injectables/GameService.html":{}}}],["this.authservice.getcookieforlogout",{"_index":279,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getcookiewithjwtaccesstoken",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TwoFactorAuthController.html":{}}}],["this.authservice.getcookiewithjwtaccesstoken(user.id",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getcookiewithjwtrefreshtoken(fourtytwouser.id",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getcookiewithjwtrefreshtoken(user.id",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.getfourtytwotoken(code",{"_index":1152,"title":{},"body":{"classes/LoginConsumer.html":{}}}],["this.authservice.getfourtytwouserinfo",{"_index":1156,"title":{},"body":{"classes/LoginConsumer.html":{}}}],["this.authservice.getfourtytwouserinforesultfromqueue(token",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.channelmemberrepository.create",{"_index":608,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["this.channelmemberrepository.save(channelmember",{"_index":610,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["this.channelsgateway.server.emit('channelcreated",{"_index":607,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["this.channelsrepository.create",{"_index":597,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["this.channelsrepository.createquerybuilder('channels').getmany",{"_index":591,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["this.channelsrepository.findone",{"_index":590,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["this.channelsrepository.save(channel",{"_index":601,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["this.channelsservice.createchannels(body.title",{"_index":544,"title":{},"body":{"controllers/ChannelsController.html":{}}}],["this.channelsservice.getchannelmembers(title",{"_index":547,"title":{},"body":{"controllers/ChannelsController.html":{}}}],["this.channelsservice.getchannels",{"_index":542,"title":{},"body":{"controllers/ChannelsController.html":{}}}],["this.chatsrepository.create",{"_index":695,"title":{},"body":{"injectables/ChatsService.html":{}}}],["this.chatsrepository.findone",{"_index":699,"title":{},"body":{"injectables/ChatsService.html":{}}}],["this.chatsrepository.save(chat",{"_index":697,"title":{},"body":{"injectables/ChatsService.html":{}}}],["this.chatsservice.createchats(url,content,id,12",{"_index":661,"title":{},"body":{"controllers/ChatsController.html":{}}}],["this.chatsservice.getchats(url",{"_index":657,"title":{},"body":{"controllers/ChatsController.html":{}}}],["this.configservice.get('client_id",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('client_secret",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('frontend_url",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.configservice.get('jwt_access_token_expiration_time",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt_access_token_secret",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt_refresh_token_expiration_time",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt_refresh_token_secret",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('redirect_uri",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.eventsgateway.server.to(receiversocketid).emit('dm",{"_index":707,"title":{},"body":{"injectables/ChatsService.html":{}}}],["this.gameservice.makenewroom(roomid",{"_index":1132,"title":{},"body":{"injectables/LobbyService.html":{}}}],["this.getavatarfromweb(avatarurl",{"_index":1410,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.getbyid(id",{"_index":1394,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.httpservice",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpservice.get(url",{"_index":1401,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.httpservice.post(fourty_two_token_uri",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.ingame.handlekeypressed(roomid",{"_index":861,"title":{},"body":{"classes/GameGateway.html":{}}}],["this.ingame.handlekeyreleased(roomid",{"_index":863,"title":{},"body":{"classes/GameGateway.html":{}}}],["this.ingame.handleplayerready(this.nsp",{"_index":855,"title":{},"body":{"classes/GameGateway.html":{}}}],["this.ingame.quitgame(this.nsp",{"_index":842,"title":{},"body":{"classes/GameGateway.html":{}}}],["this.jwtservice.sign(payload",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.lobby.invite_to_game(socket",{"_index":847,"title":{},"body":{"classes/GameGateway.html":{}}}],["this.lobby.join_queue(this.nsp",{"_index":851,"title":{},"body":{"classes/GameGateway.html":{}}}],["this.lobby.quit_queue(socket",{"_index":841,"title":{},"body":{"classes/GameGateway.html":{}}}],["this.lobby.spectate_game(socket",{"_index":849,"title":{},"body":{"classes/GameGateway.html":{}}}],["this.logger.debug",{"_index":1075,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.logger.debug(`code",{"_index":768,"title":{},"body":{"guards/FourtyTwoGuard.html":{}}}],["this.logger.debug(`login",{"_index":1148,"title":{},"body":{"classes/LoginConsumer.html":{}}}],["this.logger.debug(`refresh",{"_index":1064,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["this.logger.debug(`user",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtTwoFactorStrategy.html":{}}}],["this.logger.error",{"_index":1393,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.logger.error('42",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.error(`2fa",{"_index":1178,"title":{},"body":{"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{}}}],["this.logger.error(`refresh",{"_index":1398,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.logger.error(`user",{"_index":1389,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.logger.error(error",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["this.logger.log",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.logger.log(`user",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.logger.log(token",{"_index":1153,"title":{},"body":{"classes/LoginConsumer.html":{}}}],["this.loginqueue.add('token",{"_index":769,"title":{},"body":{"guards/FourtyTwoGuard.html":{}}}],["this.loginqueue.add('userinfo",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.server.sockets.emit('recieve_message',data",{"_index":627,"title":{},"body":{"classes/ChatGateway.html":{}}}],["this.twofactorauthservice.generatetwofactorauthsecret",{"_index":1212,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["this.twofactorauthservice.pipeqrcodestream(res",{"_index":1216,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["this.twofactorauthservice.verifytwofactorauth",{"_index":1218,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["this.userrepository.create",{"_index":1411,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.delete",{"_index":1418,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.find",{"_index":1406,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findoneby",{"_index":1414,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.save(user",{"_index":1412,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.update",{"_index":1387,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.deleteuser(req.user.id",{"_index":1335,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.getbyid(payload.id",{"_index":1078,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{}}}],["this.userservice.getuseravatar(req.user.id",{"_index":1317,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.getuserifrefreshtokenvalid",{"_index":1065,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{}}}],["this.userservice.updateuseravatar(req.user.id",{"_index":1332,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersrepository",{"_index":611,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/ChatsService.html":{}}}],["this.usersservice.create",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.getbyid(fourtytwouser.id",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.getbyid(id",{"_index":1172,"title":{},"body":{"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{}}}],["this.usersservice.removerefreshtoken(user.id",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.setcurrentrefreshtoken(refreshtoken",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.settwofactorauthenticationsecret(id",{"_index":1166,"title":{},"body":{"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{}}}],["this.usersservice.turnofftwofactorauthentication(user.id",{"_index":1224,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["this.usersservice.turnontwofactorauthentication(user.id",{"_index":1221,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["this.validatecode(request",{"_index":764,"title":{},"body":{"guards/FourtyTwoGuard.html":{}}}],["throw",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{},"guards/AuthSessionGuard.html":{},"guards/FourtyTwoGuard.html":{},"classes/LoginConsumer.html":{},"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{},"injectables/UsersService.html":{}}}],["title",{"_index":489,"title":{},"body":{"entities/Channels.html":{},"controllers/ChannelsController.html":{},"injectables/ChannelsService.html":{},"classes/CreateChannelDto.html":{}}}],["token",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/FourtyTwoGuard.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"interfaces/JwtTokenPayload.html":{},"injectables/JwtTwoFactorStrategy.html":{},"classes/LoginConsumer.html":{},"interfaces/QRCodeUrl.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"classes/TwoFactorTokenDto.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["token.access_token",{"_index":1157,"title":{},"body":{"classes/LoginConsumer.html":{}}}],["token.dto",{"_index":1206,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["token.dto.ts",{"_index":1234,"title":{},"body":{"classes/TwoFactorTokenDto.html":{},"coverage.html":{}}}],["token.dto.ts:8",{"_index":1237,"title":{},"body":{"classes/TwoFactorTokenDto.html":{}}}],["token.interface",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/FourtyTwoGuard.html":{},"classes/LoginConsumer.html":{}}}],["token.interface.ts",{"_index":771,"title":{},"body":{"interfaces/FourtyTwoToken.html":{},"coverage.html":{}}}],["token_type",{"_index":777,"title":{},"body":{"interfaces/FourtyTwoToken.html":{}}}],["top",{"_index":1030,"title":{},"body":{"injectables/GameService.html":{}}}],["tort",{"_index":1574,"title":{},"body":{"license.html":{}}}],["transcendence",{"_index":1516,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":1263,"title":{},"body":{"entities/User.html":{},"dependencies.html":{}}}],["true",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"guards/AuthSessionGuard.html":{},"entities/ChannelMember.html":{},"entities/Channels.html":{},"entities/Chats.html":{},"modules/DatabaseModule.html":{},"guards/FourtyTwoGuard.html":{},"injectables/GameService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/LobbyService.html":{},"controllers/TwoFactorAuthController.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["true})@exclude",{"_index":1251,"title":{},"body":{"entities/User.html":{}}}],["try",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/FourtyTwoGuard.html":{}}}],["turn",{"_index":1413,"title":{},"body":{"injectables/UsersService.html":{}}}],["turnoff",{"_index":1184,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["turnoff(@user",{"_index":1223,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["turnoff(user",{"_index":1192,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["turnofftwofactorauthentication",{"_index":1349,"title":{},"body":{"injectables/UsersService.html":{}}}],["turnofftwofactorauthentication(id",{"_index":1373,"title":{},"body":{"injectables/UsersService.html":{}}}],["turnon",{"_index":1185,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["turnon(@user",{"_index":1220,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["turnon(user",{"_index":1196,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["turnontwofactorauthentication",{"_index":1350,"title":{},"body":{"injectables/UsersService.html":{}}}],["turnontwofactorauthentication(id",{"_index":1375,"title":{},"body":{"injectables/UsersService.html":{}}}],["two",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/FourtyTwoGuard.html":{},"interfaces/FourtyTwoToken.html":{},"injectables/JwtTwoFactorGuard.html":{},"injectables/JwtTwoFactorStrategy.html":{},"classes/LoginConsumer.html":{},"controllers/TwoFactorAuthController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["two.guard",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["two.guard.ts",{"_index":754,"title":{},"body":{"guards/FourtyTwoGuard.html":{},"coverage.html":{}}}],["two.guard.ts:16",{"_index":757,"title":{},"body":{"guards/FourtyTwoGuard.html":{}}}],["two.guard.ts:23",{"_index":758,"title":{},"body":{"guards/FourtyTwoGuard.html":{}}}],["two.guard.ts:29",{"_index":761,"title":{},"body":{"guards/FourtyTwoGuard.html":{}}}],["twofactor",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["twofactorauthcontroller",{"_index":288,"title":{"controllers/TwoFactorAuthController.html":{}},"body":{"modules/AuthModule.html":{},"controllers/TwoFactorAuthController.html":{},"coverage.html":{}}}],["twofactorauthservice",{"_index":286,"title":{"injectables/TwoFactorAuthService.html":{}},"body":{"modules/AuthModule.html":{},"interfaces/QRCodeUrl.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"coverage.html":{},"overview.html":{}}}],["twofactorsecret",{"_index":1245,"title":{},"body":{"entities/User.html":{},"injectables/UsersService.html":{}}}],["twofactortokendto",{"_index":1199,"title":{"classes/TwoFactorTokenDto.html":{}},"body":{"controllers/TwoFactorAuthController.html":{},"classes/TwoFactorTokenDto.html":{},"coverage.html":{}}}],["twofactortokendto.token",{"_index":1219,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["twofactortokendto})@apiokresponse({description",{"_index":1201,"title":{},"body":{"controllers/TwoFactorAuthController.html":{}}}],["type",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/AuthSessionGuard.html":{},"interfaces/Ball.html":{},"entities/ChannelMember.html":{},"entities/Channels.html":{},"controllers/ChannelsController.html":{},"classes/ChannelsGateway.html":{},"injectables/ChannelsService.html":{},"classes/ChatGateway.html":{},"entities/Chats.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"classes/CreateChannelDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"guards/FourtyTwoGuard.html":{},"interfaces/FourtyTwoToken.html":{},"classes/GameGateway.html":{},"injectables/GameService.html":{},"interfaces/Gameinfo.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"interfaces/JwtTokenPayload.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{},"interfaces/Player.html":{},"interfaces/QRCodeUrl.html":{},"interfaces/Roominfo.html":{},"interfaces/SessionPayload.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"classes/TwoFactorTokenDto.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"interfaces/Vector2D.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1594,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":480,"title":{},"body":{"entities/ChannelMember.html":{},"entities/Channels.html":{},"injectables/ChannelsService.html":{},"entities/Chats.html":{},"injectables/ChatsService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":292,"title":{},"body":{"modules/AuthModule.html":{},"modules/ChannelsModule.html":{},"modules/ChatsModule.html":{},"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([channels",{"_index":567,"title":{},"body":{"modules/ChannelsModule.html":{}}}],["typeormmodule.forfeature([chats",{"_index":667,"title":{},"body":{"modules/ChatsModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":313,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":738,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["types/bcrypt",{"_index":1464,"title":{},"body":{"dependencies.html":{}}}],["types/socket.io",{"_index":1460,"title":{},"body":{"dependencies.html":{}}}],["uint8array",{"_index":1246,"title":{},"body":{"entities/User.html":{}}}],["unauthorizedexception",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{},"guards/FourtyTwoGuard.html":{},"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{}}}],["unauthorizedexception('42",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('code",{"_index":766,"title":{},"body":{"guards/FourtyTwoGuard.html":{}}}],["unauthorizedexception('invalid",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{},"guards/FourtyTwoGuard.html":{}}}],["unauthorizedexception('two",{"_index":1179,"title":{},"body":{"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{}}}],["undefined",{"_index":974,"title":{},"body":{"injectables/GameService.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["unique",{"_index":1266,"title":{},"body":{"entities/User.html":{}}}],["uniqueviolation",{"_index":1500,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unknown",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/ChannelsController.html":{},"injectables/ChannelsService.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{},"classes/LoginConsumer.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":1592,"title":{},"body":{"properties.html":{}}}],["up",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["up_pressed",{"_index":947,"title":{},"body":{"injectables/GameService.html":{}}}],["update",{"_index":1390,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatedat",{"_index":458,"title":{},"body":{"entities/ChannelMember.html":{},"entities/Channels.html":{},"entities/Chats.html":{}}}],["updatedatecolumn",{"_index":473,"title":{},"body":{"entities/ChannelMember.html":{},"entities/Channels.html":{},"entities/Chats.html":{}}}],["updateresult",{"_index":1383,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateresult.affected",{"_index":1388,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuseravatar",{"_index":1273,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateuseravatar(id",{"_index":1377,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuseravatar(req",{"_index":1285,"title":{},"body":{"controllers/UsersController.html":{}}}],["upload",{"_index":1296,"title":{},"body":{"controllers/UsersController.html":{}}}],["uploadedfile",{"_index":1305,"title":{},"body":{"controllers/UsersController.html":{}}}],["url",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ChannelsController.html":{},"controllers/ChatsController.html":{},"injectables/ChatsService.html":{},"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{},"injectables/UsersService.html":{}}}],["url:string",{"_index":689,"title":{},"body":{"injectables/ChatsService.html":{}}}],["use",{"_index":1534,"title":{},"body":{"license.html":{}}}],["useclass",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["useguards",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/TwoFactorAuthController.html":{},"controllers/UsersController.html":{}}}],["useguards(authsessionguard",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(fourtytwoguard",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/TwoFactorAuthController.html":{}}}],["useguards(jwtrefreshauthguard",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwttwofactorguard",{"_index":1222,"title":{},"body":{"controllers/TwoFactorAuthController.html":{},"controllers/UsersController.html":{}}}],["useinterceptors",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TwoFactorAuthController.html":{},"controllers/UsersController.html":{}}}],["useinterceptors(classserializerinterceptor",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TwoFactorAuthController.html":{},"controllers/UsersController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":1323,"title":{},"body":{"controllers/UsersController.html":{}}}],["user",{"_index":148,"title":{"entities/User.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/ChannelsController.html":{},"modules/ChannelsModule.html":{},"injectables/ChannelsService.html":{},"controllers/ChatsController.html":{},"modules/ChatsModule.html":{},"injectables/ChatsService.html":{},"injectables/JwtTwoFactorStrategy.html":{},"interfaces/QRCodeUrl.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.avatar",{"_index":1416,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.getbyid",{"_index":598,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["user.hashedrefreshtoken",{"_index":1397,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.id",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ChannelsController.html":{},"controllers/TwoFactorAuthController.html":{}}}],["user.istwofactorauthenticationenabled",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtTwoFactorStrategy.html":{}}}],["user.nickname",{"_index":543,"title":{},"body":{"controllers/ChannelsController.html":{},"injectables/JwtTwoFactorStrategy.html":{}}}],["user.twofactorsecret",{"_index":1175,"title":{},"body":{"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{}}}],["user:user",{"_index":656,"title":{},"body":{"controllers/ChatsController.html":{}}}],["user:users",{"_index":654,"title":{},"body":{"controllers/ChatsController.html":{}}}],["userid",{"_index":459,"title":{},"body":{"entities/ChannelMember.html":{},"injectables/ChannelsService.html":{}}}],["userinfo",{"_index":806,"title":{},"body":{"classes/GameGateway.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{}}}],["username",{"_index":442,"title":{},"body":{"interfaces/Ball.html":{},"modules/DatabaseModule.html":{},"interfaces/Gameinfo.html":{},"interfaces/Player.html":{},"interfaces/Roominfo.html":{},"interfaces/Vector2D.html":{}}}],["userrepository",{"_index":1353,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":535,"title":{},"body":{"controllers/ChannelsController.html":{},"controllers/ChatsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":1340,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.entity",{"_index":1310,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":1311,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":1268,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":1046,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{},"controllers/UsersController.html":{}}}],["usersmodule",{"_index":59,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":572,"title":{},"body":{"injectables/ChannelsService.html":{},"injectables/ChatsService.html":{}}}],["usersservice",{"_index":189,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{},"interfaces/QRCodeUrl.html":{},"controllers/TwoFactorAuthController.html":{},"injectables/TwoFactorAuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["userstatus",{"_index":1259,"title":{},"body":{"entities/User.html":{},"miscellaneous/enumerations.html":{}}}],["userstatus.offline",{"_index":1267,"title":{},"body":{"entities/User.html":{}}}],["using",{"_index":1087,"title":{},"body":{"injectables/JwtTwoFactorStrategy.html":{}}}],["uuid",{"_index":1111,"title":{},"body":{"injectables/LobbyService.html":{}}}],["v4",{"_index":1110,"title":{},"body":{"injectables/LobbyService.html":{}}}],["valid",{"_index":1399,"title":{},"body":{"injectables/UsersService.html":{}}}],["validate",{"_index":1044,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{},"controllers/TwoFactorAuthController.html":{}}}],["validate(payload",{"_index":1069,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{}}}],["validate(req",{"_index":1048,"title":{},"body":{"injectables/JwtRefreshStrategy.html":{},"controllers/TwoFactorAuthController.html":{}}}],["validatecode",{"_index":755,"title":{},"body":{"guards/FourtyTwoGuard.html":{}}}],["validatecode(request",{"_index":760,"title":{},"body":{"guards/FourtyTwoGuard.html":{}}}],["validation",{"_index":1091,"title":{},"body":{"injectables/JwtTwoFactorStrategy.html":{}}}],["validationpipe",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["validationschema",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":724,"title":{},"body":{"classes/CreateChannelDto.html":{},"classes/CreateUserDto.html":{},"classes/TwoFactorTokenDto.html":{},"dependencies.html":{}}}],["validators",{"_index":1327,"title":{},"body":{"controllers/UsersController.html":{}}}],["value",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChatsService.html":{},"classes/GameGateway.html":{},"injectables/GameService.html":{},"injectables/JwtRefreshStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTwoFactorStrategy.html":{},"injectables/LobbyService.html":{},"classes/LoginConsumer.html":{},"injectables/TwoFactorAuthService.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1427,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1597,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vector2d",{"_index":429,"title":{"interfaces/Vector2D.html":{}},"body":{"interfaces/Ball.html":{},"interfaces/Gameinfo.html":{},"interfaces/Player.html":{},"interfaces/Roominfo.html":{},"interfaces/Vector2D.html":{},"coverage.html":{}}}],["vel",{"_index":428,"title":{},"body":{"interfaces/Ball.html":{},"injectables/GameService.html":{},"interfaces/Gameinfo.html":{},"interfaces/Player.html":{},"interfaces/Roominfo.html":{},"interfaces/Vector2D.html":{}}}],["vel.x",{"_index":1024,"title":{},"body":{"injectables/GameService.html":{}}}],["vel.y",{"_index":1025,"title":{},"body":{"injectables/GameService.html":{}}}],["verifytwofactorauth",{"_index":1227,"title":{},"body":{"injectables/TwoFactorAuthService.html":{}}}],["verifytwofactorauth(id",{"_index":1171,"title":{},"body":{"interfaces/QRCodeUrl.html":{},"injectables/TwoFactorAuthService.html":{}}}],["version",{"_index":1590,"title":{},"body":{"properties.html":{}}}],["void",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"classes/ChannelsGateway.html":{},"classes/ChatGateway.html":{},"classes/GameGateway.html":{},"injectables/GameService.html":{},"injectables/LobbyService.html":{}}}],["wait",{"_index":436,"title":{},"body":{"interfaces/Ball.html":{},"interfaces/Gameinfo.html":{},"interfaces/Player.html":{},"interfaces/Roominfo.html":{},"interfaces/Vector2D.html":{},"miscellaneous/enumerations.html":{}}}],["warranties",{"_index":1559,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1555,"title":{},"body":{"license.html":{}}}],["watch",{"_index":828,"title":{},"body":{"classes/GameGateway.html":{}}}],["watchers",{"_index":451,"title":{},"body":{"interfaces/Ball.html":{},"interfaces/Gameinfo.html":{},"interfaces/Player.html":{},"interfaces/Roominfo.html":{},"interfaces/Vector2D.html":{}}}],["websocket",{"_index":604,"title":{},"body":{"injectables/ChannelsService.html":{}}}],["websocketgateway",{"_index":555,"title":{},"body":{"classes/ChannelsGateway.html":{},"classes/ChatGateway.html":{}}}],["websocketserver",{"_index":551,"title":{},"body":{"classes/ChannelsGateway.html":{},"classes/ChatGateway.html":{}}}],["where:{id",{"_index":700,"title":{},"body":{"injectables/ChatsService.html":{}}}],["whether",{"_index":1571,"title":{},"body":{"license.html":{}}}],["width",{"_index":502,"title":{},"body":{"entities/Channels.html":{}}}],["win_score",{"_index":935,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":1529,"title":{},"body":{"license.html":{}}}],["workspace",{"_index":687,"title":{},"body":{"injectables/ChatsService.html":{}}}],["workspace.url",{"_index":688,"title":{},"body":{"injectables/ChatsService.html":{}}}],["ws",{"_index":830,"title":{},"body":{"classes/GameGateway.html":{}}}],["ws.connectedsocket",{"_index":845,"title":{},"body":{"classes/GameGateway.html":{}}}],["ws.messagebody",{"_index":846,"title":{},"body":{"classes/GameGateway.html":{}}}],["ws.ongatewayinit",{"_index":835,"title":{},"body":{"classes/GameGateway.html":{}}}],["ws.subscribemessage('invite",{"_index":844,"title":{},"body":{"classes/GameGateway.html":{}}}],["ws.subscribemessage('join_queue",{"_index":850,"title":{},"body":{"classes/GameGateway.html":{}}}],["ws.subscribemessage('keypress",{"_index":857,"title":{},"body":{"classes/GameGateway.html":{}}}],["ws.subscribemessage('keyrelease",{"_index":862,"title":{},"body":{"classes/GameGateway.html":{}}}],["ws.subscribemessage('quit_game",{"_index":856,"title":{},"body":{"classes/GameGateway.html":{}}}],["ws.subscribemessage('quit_queue",{"_index":853,"title":{},"body":{"classes/GameGateway.html":{}}}],["ws.subscribemessage('ready",{"_index":854,"title":{},"body":{"classes/GameGateway.html":{}}}],["ws.subscribemessage('watch",{"_index":848,"title":{},"body":{"classes/GameGateway.html":{}}}],["ws.websocketgateway({namespace",{"_index":833,"title":{},"body":{"classes/GameGateway.html":{}}}],["ws.websocketserver",{"_index":836,"title":{},"body":{"classes/GameGateway.html":{}}}],["x",{"_index":432,"title":{},"body":{"interfaces/Ball.html":{},"injectables/GameService.html":{},"interfaces/Gameinfo.html":{},"interfaces/Player.html":{},"interfaces/Roominfo.html":{},"interfaces/Vector2D.html":{}}}],["y",{"_index":433,"title":{},"body":{"interfaces/Ball.html":{},"injectables/GameService.html":{},"interfaces/Gameinfo.html":{},"interfaces/Player.html":{},"interfaces/Roominfo.html":{},"interfaces/Vector2D.html":{}}}],["y_pos",{"_index":443,"title":{},"body":{"interfaces/Ball.html":{},"interfaces/Gameinfo.html":{},"interfaces/Player.html":{},"interfaces/Roominfo.html":{},"interfaces/Vector2D.html":{}}}],["z0",{"_index":729,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ChannelsModule.html":{},"modules/ChatsModule.html":{},"modules/EventsModule.html":{},"modules/GameModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                hello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        hello\n                        \n                    \n                \n            \n            \n                \n                    \n                    hello(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('hello')@UseGuards(JwtAuthGuard)@ApiBearerAuth('access-token')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Request, UseGuards } from '@nestjs/common';\nimport { ApiBearerAuth } from '@nestjs/swagger';\nimport { AppService } from './app.service';\nimport { JwtAuthGuard } from './auth/guards/jwt-auth.guard';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get('hello')\n  @UseGuards(JwtAuthGuard)\n  @ApiBearerAuth('access-token')\n  async hello(@Request() req) {\n    return req.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nChannelsModule\n\nChannelsModule\n\nAppModule -->\n\nChannelsModule->AppModule\n\n\n\n\n\nChatsModule\n\nChatsModule\n\nAppModule -->\n\nChatsModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nGameModule\n\nGameModule\n\nAppModule -->\n\nGameModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            ChannelsModule\n                        \n                        \n                            ChatsModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            GameModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, ValidationPipe } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { APP_PIPE } from '@nestjs/core';\nimport * as Joi from 'joi';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModule } from './users/users.module';\nimport { ChatsModule } from './chats/chats.module';\nimport { ChannelsModule } from './channels/channels.module';\nimport { ChannelsGateway } from './events/events.channels.gateway';\nimport { EventsModule } from './events/events.module';\nimport { DatabaseModule } from './database/database.module';\nimport { GameModule } from './game/game.module';\nimport { BullModule } from '@nestjs/bull';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      validationSchema: Joi.object({\n        DB_HOST: Joi.string().required(),\n        DB_PORT: Joi.number(),\n        DB_USERNAME: Joi.string().required(),\n        DB_PASSWORD: Joi.string().required(),\n        DB_DATABASE: Joi.string().required(),\n        CLIENT_ID: Joi.string().required(),\n        CLIENT_SECRET: Joi.string().required(),\n        REDIRECT_URI: Joi.string().required(),\n        JWT_ACCESS_TOKEN_SECRET: Joi.string().required(),\n        JWT_ACCESS_TOKEN_EXPIRATION_TIME: Joi.string().required(),\n        JWT_REFRESH_TOKEN_SECRET: Joi.string().required(),\n        JWT_REFRESH_TOKEN_EXPIRATION_TIME: Joi.string().required(),\n        REDIS_HOST: Joi.string().required(),\n        REDIS_PORT: Joi.number().required(),\n        SESSION_SECRET: Joi.string().required(),\n        FRONTEND_URL: Joi.string().required(),\n      }),\n      envFilePath: process.env.NODE_ENV == 'dev' ? '.env.dev' : '.env',\n    }),\n    DatabaseModule,\n    AuthModule,\n    UsersModule,\n    ChatsModule,\n    ChannelsModule,\n    GameModule,\n    BullModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        redis: {\n          host: configService.get('REDIS_HOST'),\n          port: configService.get('REDIS_PORT'),\n        },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_PIPE,\n      useClass: ValidationPipe,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logOut\n                            \n                            \n                                refresh\n                            \n                            \n                                    Async\n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req, token: FourtyTwoToken)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('login')@UseGuards(FourtyTwoGuard)@ApiOperation({summary: 'Log In', description: '로그인 성공시 home, 2차 인증 필요시 twofactor, 회원가입 필요시 signup으로 redirect'})@Redirect('')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                FourtyTwoToken\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        logOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    logOut(req, user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')@UseGuards(JwtAuthGuard)@HttpCode(200)@ApiOkResponse({description: '로그아웃. cookie token 삭제'})@ApiCookieAuth('Authentication')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh(req, user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('refresh')@UseGuards(JwtRefreshAuthGuard)@ApiOkResponse({description: 'refresh token을 기반으로 새로운 access token을 cookie에 저장 기존 token이 만료되었을때 사용'})@ApiCookieAuth('Refresh')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(req, res: Response, createUserDto: CreateUserDto, sessionInfo: SessionPayload)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signup')@UseGuards(AuthSessionGuard)@ApiOperation({summary: '회원가입', description: '회원 가입 기능. avatar는 기본으로 42 이미지를 기반으로 생성'})@ApiCreatedResponse({description: '회원가입 성공'})@ApiBadRequestResponse({description: '이미 존재하는 닉네임입니다.'})@ApiForbiddenResponse({description: '잘못된 접근 / 로그인을 거치지 않고 온 경우'})@ApiBody({type: CreateUserDto})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sessionInfo\n                                    \n                                                SessionPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ClassSerializerInterceptor,\n  Controller,\n  Get,\n  HttpCode,\n  Logger,\n  Post,\n  Redirect,\n  Req,\n  Res,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport {\n  ApiBadRequestResponse,\n  ApiBody,\n  ApiCookieAuth,\n  ApiCreatedResponse,\n  ApiForbiddenResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { CreateUserDto } from 'src/users/dto/users.dto';\nimport { UsersService } from 'src/users/users.service';\nimport { AuthService } from './auth.service';\nimport { FourtyTwoGuard } from './guards/fourty-two.guard';\nimport { JwtAuthGuard } from './guards/jwt-auth.guard';\nimport { JwtRefreshAuthGuard } from './guards/jwt-refresh-auth.guard';\nimport { AuthSessionGuard } from './guards/auth-session.guard';\nimport { SessionPayload } from './interface/session-payload.interface';\nimport { ConfigService } from '@nestjs/config';\nimport { Response } from 'express';\nimport { FourtyTwoToken } from './interface/fourty-two-token.interface';\nimport { User } from './decorator/user.decorator';\nimport { SessionInfo } from './decorator/session-info.decorator';\nimport { Token } from './decorator/token.decorator';\n\n@ApiTags('auth')\n@Controller('auth')\n@UseInterceptors(ClassSerializerInterceptor)\nexport class AuthController {\n  private logger: Logger = new Logger(AuthController.name);\n\n  constructor(\n    private readonly authService: AuthService,\n    private readonly usersService: UsersService,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @Get('login')\n  @UseGuards(FourtyTwoGuard)\n  @ApiOperation({\n    summary: 'Log In',\n    description:\n      '로그인 성공시 home, 2차 인증 필요시 twofactor, 회원가입 필요시 signup으로 redirect',\n  })\n  @Redirect('')\n  async login(@Req() req, @Token() token: FourtyTwoToken) {\n    const fourtyTwoUser =\n      await this.authService.getFourtyTwoUserInfoResultFromQueue(token);\n    const accessCookie = this.authService.getCookieWithJwtAccessToken(\n      fourtyTwoUser.id,\n    );\n    const { refreshToken, refreshCookie } =\n      this.authService.getCookieWithJwtRefreshToken(fourtyTwoUser.id);\n\n    this.logger.log(\n      `accessCookie: ${accessCookie} / refreshCookie: ${refreshCookie}`,\n    );\n    const redirect_url = this.configService.get('FRONTEND_URL');\n\n    try {\n      const user = await this.usersService.getById(fourtyTwoUser.id);\n      this.usersService.setCurrentRefreshToken(refreshToken, user.id);\n      req.res.setHeader('Set-Cookie', [accessCookie, refreshCookie]);\n      if (!user.isTwoFactorAuthenticationEnabled) {\n        this.logger.log(`user: ${user.id} logged in`);\n        return { url: `${redirect_url}/home` };\n      }\n      this.logger.log(`user: ${user.id} 2FA Required`);\n      return { url: `${redirect_url}/twofactor` };\n    } catch (err) {\n      const { id, image } = fourtyTwoUser;\n      const { link } = image;\n      req.session.info = { id, link }; // session\n      return { url: `${redirect_url}/signup` };\n    }\n  }\n\n  @Post('signup')\n  @UseGuards(AuthSessionGuard)\n  @ApiOperation({\n    summary: '회원가입',\n    description: '회원 가입 기능. avatar는 기본으로 42 이미지를 기반으로 생성',\n  })\n  @ApiCreatedResponse({ description: '회원가입 성공' })\n  @ApiBadRequestResponse({ description: '이미 존재하는 닉네임입니다.' })\n  @ApiForbiddenResponse({\n    description: '잘못된 접근 / 로그인을 거치지 않고 온 경우',\n  })\n  @ApiBody({ type: CreateUserDto })\n  async signUp(\n    @Req() req,\n    @Res({ passthrough: true }) res: Response,\n    @Body() createUserDto: CreateUserDto,\n    @SessionInfo() sessionInfo: SessionPayload,\n  ) {\n    const user = await this.usersService.create(\n      sessionInfo.id,\n      createUserDto.nickname,\n      sessionInfo.link,\n    );\n\n    const accessCookie = this.authService.getCookieWithJwtAccessToken(user.id);\n    const { refreshToken, refreshCookie } =\n      this.authService.getCookieWithJwtRefreshToken(user.id);\n    this.usersService.setCurrentRefreshToken(refreshToken, user.id);\n    res.setHeader('Set-Cookie', [accessCookie, refreshCookie]);\n\n    req.session.destroy(() =>\n      this.logger.debug(`user id : ${user.id} session destroyed`),\n    );\n    this.logger.debug(`user id : ${user.id} signed up`);\n    return user;\n  }\n\n  @Get('refresh')\n  @UseGuards(JwtRefreshAuthGuard)\n  @ApiOkResponse({\n    description:\n      'refresh token을 기반으로 새로운 access token을 cookie에 저장 기존 token이 만료되었을때 사용',\n  })\n  @ApiCookieAuth('Refresh')\n  refresh(@Req() req, @User() user) {\n    const accessTokenCookie = this.authService.getCookieWithJwtAccessToken(\n      user.id,\n    );\n    req.res.setHeader('Set-Cookie', accessTokenCookie);\n    return;\n  }\n\n  @Post('logout')\n  @UseGuards(JwtAuthGuard)\n  @HttpCode(200)\n  @ApiOkResponse({ description: '로그아웃. cookie token 삭제' })\n  @ApiCookieAuth('Authentication')\n  async logOut(@Req() req, @User() user) {\n    await this.usersService.removeRefreshToken(user.id);\n    const cookie = await this.authService.getCookieForLogOut();\n    req.res.setHeader('Set-Cookie', cookie);\n    this.logger.log(`user ${user.id} logged out`);\n    return;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtRefreshStrategy\n\nJwtRefreshStrategy\n\nAuthModule -->\n\nJwtRefreshStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtTwoFactorStrategy\n\nJwtTwoFactorStrategy\n\nAuthModule -->\n\nJwtTwoFactorStrategy->AuthModule\n\n\n\n\n\nTwoFactorAuthService\n\nTwoFactorAuthService\n\nAuthModule -->\n\nTwoFactorAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtRefreshStrategy\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            JwtTwoFactorStrategy\n                        \n                        \n                            TwoFactorAuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                        \n                            TwoFactorAuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { JwtModule } from '@nestjs/jwt';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from 'src/users/users.entity';\nimport { HttpModule } from '@nestjs/axios';\nimport { UsersModule } from 'src/users/users.module';\nimport { BullModule } from '@nestjs/bull';\nimport { LoginConsumer } from './login.consumer';\nimport { TwoFactorAuthController } from './two-factor-authentication/two-factor-auth.controller';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { JwtRefreshStrategy } from './strategies/jwt-refresh.strategy';\nimport { JwtTwoFactorStrategy } from './strategies/jwt-two-factor.strategy';\nimport { TwoFactorAuthService } from './two-factor-authentication/two-factor-auth.service';\n\n@Module({\n  imports: [\n    BullModule.registerQueue({\n      name: 'fourtyTwoLogin',\n      limiter: { max: 2, duration: 1000, bounceBack: true },\n    }),\n    TypeOrmModule.forFeature([User]),\n    JwtModule.register({}),\n    HttpModule,\n    UsersModule,\n  ],\n  controllers: [AuthController, TwoFactorAuthController],\n  providers: [\n    JwtStrategy,\n    JwtRefreshStrategy,\n    JwtTwoFactorStrategy,\n    AuthService,\n    TwoFactorAuthService,\n    LoginConsumer,\n  ],\n  exports: [],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCookieForLogOut\n                            \n                            \n                                getCookieWithJwtAccessToken\n                            \n                            \n                                getCookieWithJwtRefreshToken\n                            \n                            \n                                    Async\n                                getFourtyTwoToken\n                            \n                            \n                                    Async\n                                getFourtyTwoUserInfo\n                            \n                            \n                                    Async\n                                getFourtyTwoUserInfoResultFromQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loginQueue: Queue, jwtService: JwtService, configService: ConfigService, httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loginQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCookieForLogOut\n                        \n                    \n                \n            \n            \n                \ngetCookieForLogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCookieWithJwtAccessToken\n                        \n                    \n                \n            \n            \n                \ngetCookieWithJwtAccessToken(id: number, isTwoFactorAuthenticationCompleted)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    isTwoFactorAuthenticationCompleted\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCookieWithJwtRefreshToken\n                        \n                    \n                \n            \n            \n                \ngetCookieWithJwtRefreshToken(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         { refreshCookie: string; refreshToken: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFourtyTwoToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFourtyTwoToken(code: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFourtyTwoUserInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFourtyTwoUserInfo(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFourtyTwoUserInfoResultFromQueue\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFourtyTwoUserInfoResultFromQueue(token: FourtyTwoToken)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                FourtyTwoToken\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger(AuthService.name)\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { catchError, firstValueFrom } from 'rxjs';\nimport { AxiosError } from 'axios';\nimport { HttpService } from '@nestjs/axios';\nimport { FOURTY_TWO_TOKEN_URI, FOURTY_TWO_USER_INFO } from './auth.constants';\nimport { JwtTokenPayload } from './interface/jwt-token-payload.interface';\nimport { InjectQueue } from '@nestjs/bull';\nimport { Queue } from 'bull';\nimport { FourtyTwoToken } from './interface/fourty-two-token.interface';\n\n@Injectable()\nexport class AuthService {\n  private logger: Logger = new Logger(AuthService.name);\n\n  constructor(\n    @InjectQueue('fourtyTwoLogin')\n    private readonly loginQueue: Queue,\n    private readonly jwtService: JwtService,\n    private readonly configService: ConfigService,\n    private readonly httpService: HttpService,\n  ) {}\n\n  getCookieWithJwtAccessToken(\n    id: number,\n    isTwoFactorAuthenticationCompleted = false,\n  ) {\n    const payload: JwtTokenPayload = { id, isTwoFactorAuthenticationCompleted };\n    const token = this.jwtService.sign(payload, {\n      secret: this.configService.get('JWT_ACCESS_TOKEN_SECRET'),\n      expiresIn: this.configService.get('JWT_ACCESS_TOKEN_EXPIRATION_TIME'),\n    });\n    return `Authentication=${token}; HttpOnly; Path=/; Max-Age=${this.configService.get(\n      'JWT_ACCESS_TOKEN_EXPIRATION_TIME',\n    )}`;\n  }\n\n  getCookieWithJwtRefreshToken(id: number) {\n    const payload: JwtTokenPayload = { id };\n    const refreshToken = this.jwtService.sign(payload, {\n      secret: this.configService.get('JWT_REFRESH_TOKEN_SECRET'),\n      expiresIn: this.configService.get('JWT_REFRESH_TOKEN_EXPIRATION_TIME'),\n    });\n    const refreshCookie = `Refresh=${refreshToken}; HttpOnly; Path=/; Max-Age=${this.configService.get(\n      'JWT_REFRESH_TOKEN_EXPIRATION_TIME',\n    )}`;\n    return {\n      refreshCookie,\n      refreshToken,\n    };\n  }\n\n  getCookieForLogOut() {\n    return [\n      `Authentication=; HttpOnly; Path=/; Max-Age=0`,\n      'Refresh=; HttpOnly; Path=/; Max-Age=0',\n    ];\n  }\n\n  async getFourtyTwoUserInfoResultFromQueue(token: FourtyTwoToken) {\n    const job = await this.loginQueue.add('userInfo', { token });\n    try {\n      return await job.finished();\n    } catch (err) {\n      this.logger.error('42 Authorization failed');\n      throw new UnauthorizedException('42 Authorization failed');\n    }\n  }\n\n  async getFourtyTwoUserInfo(token: string) {\n    const { data } = await firstValueFrom(\n      this.httpService\n        .get(FOURTY_TWO_USER_INFO, {\n          headers: { Authorization: `Bearer ${token}` },\n        })\n        .pipe(\n          catchError((error: AxiosError) => {\n            this.logger.error(error);\n            throw new UnauthorizedException(\n              'invalid 42 token or server is busy',\n            );\n          }),\n        ),\n    );\n    return data;\n  }\n\n  async getFourtyTwoToken(code: string) {\n    const config = {\n      grant_type: 'authorization_code',\n      client_id: this.configService.get('CLIENT_ID'),\n      client_secret: this.configService.get('CLIENT_SECRET'),\n      code,\n      redirect_uri: this.configService.get('REDIRECT_URI'),\n    };\n\n    const { data } = await firstValueFrom(\n      this.httpService.post(FOURTY_TWO_TOKEN_URI, config).pipe(\n        catchError((error: AxiosError) => {\n          this.logger.error(error);\n          throw new UnauthorizedException('invalid 42 token or server is busy');\n        }),\n      ),\n    );\n    return data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthSessionGuard.html":{"url":"guards/AuthSessionGuard.html","title":"guard - AuthSessionGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthSessionGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/auth-session.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/auth-session.guard.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  ForbiddenException,\n  Injectable,\n  Logger,\n} from '@nestjs/common';\n\n@Injectable()\nexport class AuthSessionGuard implements CanActivate {\n  private logger: Logger = new Logger(AuthSessionGuard.name);\n\n  canActivate(context: ExecutionContext): boolean {\n    const request = context.switchToHttp().getRequest();\n    const session: any = request.session;\n\n    if (!session.info) {\n      throw new ForbiddenException('잘못된 접근입니다.');\n    }\n    request.sessionInfo = session.info;\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Ball.html":{"url":"interfaces/Ball.html","title":"interface - Ball","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Ball\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/game.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            pos\n                                        \n                                \n                                \n                                        \n                                            vel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pos:         Vector2D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Vector2D\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        vel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        vel:         Vector2D\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Vector2D\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Socket } from \"socket.io\";\n\nexport interface Vector2D {\n    x: number,\n    y: number\n};\n\ninterface Ball {\n    pos : Vector2D;\n    vel : Vector2D;\n};\n\nexport enum State {\n    WAIT,\n    START,\n    INGAME,\n    END\n};\n\ninterface Player {\n    socketid: Socket;\n    username: string;\n    y_pos : number;\n}\n\nexport interface Gameinfo {\n    score: Array;\n    state: State;\n    ball: Ball;\n    p1 : Player;\n    p2 : Player;\n}\n\nexport interface Roominfo {\n    roomid : string;\n    gameinfo : Gameinfo;\n    watchers : Array;\n};\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/ChannelMember.html":{"url":"entities/ChannelMember.html","title":"entity - ChannelMember","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  ChannelMember\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/channels/channelcember.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ChannelId\n                            \n                            \n                                channelMember\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                            \n                                UserId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ChannelId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({primary: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/channels/channelcember.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channelMember\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelMember\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined)@JoinColumn({name: 'ChannelId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/channels/channelcember.entity.ts:37\n                        \n                    \n\n            \n                \n                    1 : M 관계 설정\n여기서 Many 는 채널 이고 One이 멤버 이다.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/channels/channelcember.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/channels/channelcember.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/channels/channelcember.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({primary: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/channels/channelcember.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { \n    CreateDateColumn,\n    Entity,\n    UpdateDateColumn ,\n    Column,\n    ManyToOne,\n    PrimaryColumnCannotBeNullableError,\n    PrimaryGeneratedColumn,\n    JoinColumn,\n} from \"typeorm\";\nimport { Channels } from './channels.entity'\n\n@Entity()\nexport class ChannelMember {\n    @PrimaryGeneratedColumn()\n    id:number;\n\n    @CreateDateColumn()\n    createdAt: Date;\n\n    @UpdateDateColumn()\n    updatedAt: Date;\n\n    @Column({ primary: true })\n    ChannelId: number;\n  \n    @Column({ primary: true })\n    UserId: number;\n\n    /**\n   * 1 : M 관계 설정\n   * @ManyToOne \n   * 여기서 Many 는 채널 이고 One이 멤버 이다. \n   */\n    @ManyToOne(() => Channels)\n    @JoinColumn({name: \"ChannelId\"})\n    channelMember: ChannelMember;\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Channels.html":{"url":"entities/Channels.html","title":"entity - Channels","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Channels\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/channels/channels.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                owner\n                            \n                            \n                                password\n                            \n                            \n                                private\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/channels/channels.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/channels/channels.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true, default: () => '0'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/channels/channels.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {length: 100, default: ''})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/channels/channels.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        private\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('smallint', {nullable: true, width: 1, default: () => '0'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/channels/channels.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('varchar', {length: 30, default: 'default'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/channels/channels.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/channels/channels.entity.ts:34\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity,\n    PrimaryGeneratedColumn,\n    Column,\n    CreateDateColumn,\n    UpdateDateColumn,\n    OneToMany,\n     } from \"typeorm\";\n\n@Entity()\nexport class Channels {\n    @PrimaryGeneratedColumn()\n    id: number;\n  \n    @Column('varchar', {length: 30 , default:\"default\"})\n    title: string;\n    \n    @Column({nullable:true, default: () => \"'0'\"})\n    owner: number;\n\n    @Column('smallint', {\n      nullable: true,\n      width: 1,\n      default: () => \"'0'\",\n    })\n    private: boolean | null;\n    \n    @Column('varchar', {length: 100, default:\"\"})\n    password: string;\n\n    @CreateDateColumn()\n    createdAt: Date;\n  \n    @UpdateDateColumn()\n    updatedAt: Date;\n\n    // @OneToMany(() => ChannelMember, (channelMembers) => channelMember.Channels, {\n    //   cascade: ['insert'],\n    // })\n    // ChannelMembers: ChannelMembers[];\n    // @OneToMany(type => ChannelMember, channelmembers => channelmembers.channelmembers)\n    // channelmembers: ChannelMember[];\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ChannelsController.html":{"url":"controllers/ChannelsController.html","title":"controller - ChannelsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ChannelsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/channels/channels.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                api/room_list\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createChannels\n                            \n                            \n                                    Async\n                                getChannelMembers\n                            \n                            \n                                    Async\n                                getChannels\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createChannels\n                        \n                    \n                \n            \n            \n                \n                    \n                    createChannels(body: CreateChannelDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: '채팅방 만들기'})@Post('/room')\n                \n            \n\n            \n                \n                    Defined in src/channels/channels.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateChannelDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getChannelMembers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChannelMembers(title: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: '채팅방 멤버 가져오기'})@Get('/room/:title')\n                \n            \n\n            \n                \n                    Defined in src/channels/channels.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getChannels\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChannels()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: '채팅방 모두 가져오기'})@Get('/')\n                \n            \n\n            \n                \n                    Defined in src/channels/channels.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Post, Body } from '@nestjs/common';\nimport { ApiOperation,ApiTags } from '@nestjs/swagger';\nimport { ChannelsService } from './channels.service';\nimport { User } from 'src/users/users.entity';\nimport { Users } from 'src/common/decorators/user.decorator';\nimport { CreateChannelDto } from './dto/create-channel.dto';\n\n@ApiTags('CHANNEL')\n@Controller('api/room_list')\nexport class ChannelsController {\n    constructor(private channelsService: ChannelsService) {}\n\n    // 일단 인자에 Users와 Param 은 필요 없음 (추후 확인후 첨삭 해야함)\n    // 현재 user.id 를 그냥 1로 넣어주고 있음 ( 지금 로직에서도 안 쓰임 )\n    @ApiOperation({ summary: '채팅방 모두 가져오기'})\n    @Get('/')\n    async getChannels() { //@Param('url',) url, @Users() user: User\n        return this.channelsService.getChannels();\n    }\n\n    @ApiOperation({ summary: '채팅방 만들기'})\n    @Post('/room')\n    async createChannels(\n        // @Param('url') url,\n        @Body() body: CreateChannelDto,\n        @Users() user: User,\n    ){\n        // 처음 방을 만드는 유저의 아이디 에 해당 하는 닉네임을 보여줘야 한다.\n        // 마지막 인자 1 -> user.nickname 으로 나중에 \n        return this.channelsService.createChannels(body.title, body.password, 1);\n    }\n\n    @ApiOperation({ summary: '채팅방 멤버 가져오기'})\n    @Get('/room/:title')\n    async getChannelMembers(\n        @Param('title') title: string,\n    ){\n        return this.channelsService.getChannelMembers(title);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChannelsGateway.html":{"url":"classes/ChannelsGateway.html","title":"class - ChannelsGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChannelsGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/events.channels.gateway.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleConnection\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/events.channels.gateway.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleConnection\n                        \n                    \n                \n            \n            \n                \nhandleConnection()\n                \n            \n\n\n            \n                \n                    Defined in src/events/events.channels.gateway.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SubscribeMessage, WebSocketGateway, WebSocketServer} from '@nestjs/websockets';\nimport { Server } from 'socket.io';\n@WebSocketGateway()\nexport class ChannelsGateway {\n  @WebSocketServer()\n  server: Server;\n\n  handleConnection() {\n    console.log('Client connected');\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChannelsModule.html":{"url":"modules/ChannelsModule.html","title":"module - ChannelsModule","body":"\n                   \n\n\n\n\n    Modules\n    ChannelsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ChannelsModule\n\n\n\ncluster_ChannelsModule_imports\n\n\n\ncluster_ChannelsModule_providers\n\n\n\n\nEventsModule\n\nEventsModule\n\n\n\nChannelsModule\n\nChannelsModule\n\nChannelsModule -->\n\nEventsModule->ChannelsModule\n\n\n\n\n\nChannelsService\n\nChannelsService\n\nChannelsModule -->\n\nChannelsService->ChannelsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/channels/channels.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ChannelsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ChannelsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EventsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ChannelsService } from './channels.service';\nimport { ChannelsController } from './channels.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Channels } from 'src/channels/channels.entity';\nimport { User } from 'src/users/users.entity';\nimport { ChannelMember } from 'src/channels/channelcember.entity';\nimport { EventsModule } from 'src/events/events.module';\n@Module({\n  imports: [TypeOrmModule.forFeature([Channels, User, ChannelMember]), EventsModule],\n  providers: [ChannelsService],\n  controllers: [ChannelsController]\n})\nexport class ChannelsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChannelsService.html":{"url":"injectables/ChannelsService.html","title":"injectable - ChannelsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChannelsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/channels/channels.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createChannels\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                getChannelMembers\n                            \n                            \n                                    Async\n                                getChannels\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(channelsRepository: Repository, usersRepository: Repository, channelMemberRepository: Repository, channelsGateway: ChannelsGateway)\n                    \n                \n                        \n                            \n                                Defined in src/channels/channels.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        channelsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelMemberRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelsGateway\n                                                  \n                                                        \n                                                                        ChannelsGateway\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createChannels\n                        \n                    \n                \n            \n            \n                \n                    \n                    createChannels(title: string, password: string, myId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/channels/channels.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    myId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/channels/channels.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getChannelMembers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChannelMembers(title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/channels/channels.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getChannels\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChannels()\n                \n            \n\n\n            \n                \n                    Defined in src/channels/channels.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Channels } from 'src/channels/channels.entity';\nimport { User } from 'src/users/users.entity';\nimport { ChannelMember } from 'src/channels/channelcember.entity';\nimport { ChannelsGateway } from 'src/events/events.channels.gateway';\n@Injectable()\nexport class ChannelsService {\n    constructor(\n        @InjectRepository(Channels)\n        private channelsRepository: Repository,\n        @InjectRepository(User)\n        private usersRepository: Repository,\n        @InjectRepository(ChannelMember)\n        private channelMemberRepository: Repository,\n        // private readonly eventsGateway: EventsGateway,\n        private readonly channelsGateway: ChannelsGateway,\n    ) {}\n\n    async findById(id:number) {\n        return this.channelsRepository.findOne({ where: {id}});\n    }\n\n    async getChannels() {\n        return this.channelsRepository.createQueryBuilder('channels').getMany()\n    }\n\n    async createChannels(title: string, password:string, myId: number) {\n\n        // const channel = new Channels();\n        // channel.title = title;\n        // channel.password = password;\n        // channel.owner = myId;\n        const channel = this.channelsRepository.create({\n            title: title,\n            password: password,\n            owner: myId,\n        })\n        // channel.owner = User.getbyid()~ 해서 나중에 merge 하고 연결 해주자\n        const channelReturned = await this.channelsRepository.save(channel);\n        // emit an event to the connected WebSocket clients\n        console.log('channelReturned:', channelReturned);\n        this.channelsGateway.server.emit('channelCreated', channelReturned);\n        const channelMember = this.channelMemberRepository.create({\n            UserId : myId,\n            ChannelId: channelReturned.id,\n        })\n        await this.channelMemberRepository.save(channelMember);\n    }\n\n    // GET 채널 (채팅방) 에 있는 멤버들  Get 하는거.\n    async getChannelMembers(title: string)\n    {\n        return this.usersRepository\n        .createQueryBuilder('channles')\n        .innerJoin('channels', 'channels', 'channels.title = :title', {\n            title,\n          })\n        .getMany();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChatGateway.html":{"url":"classes/ChatGateway.html","title":"class - ChatGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChatGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/events.chat.gateway.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                listenForMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Server\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @WebSocketServer()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/events/events.chat.gateway.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        listenForMessage\n                        \n                    \n                \n            \n            \n                \nlistenForMessage(data: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SubscribeMessage('send_message')\n                \n            \n\n            \n                \n                    Defined in src/events/events.chat.gateway.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { SubscribeMessage, WebSocketGateway, WebSocketServer, MessageBody } from \"@nestjs/websockets\";\nimport { Server } from \"socket.io\";\n\n\n@WebSocketGateway()\nexport class ChatGateway {\n    @WebSocketServer()\n    server:Server;\n\n    @SubscribeMessage('send_message')\n    listenForMessage(@MessageBody() data:string) {\n        this.server.sockets.emit('recieve_message',data)\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Chats.html":{"url":"entities/Chats.html","title":"entity - Chats","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Chats\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chats/chats.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ChannelId\n                            \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                ReceiverId\n                            \n                            \n                                SenderId\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ChannelId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chats/chats.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chats/chats.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chats/chats.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chats/chats.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ReceiverId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chats/chats.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SenderId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chats/chats.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/chats/chats.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { PrimaryGeneratedColumn, \n    Column, \n    CreateDateColumn,\n    UpdateDateColumn,\n    Entity,\n } from \"typeorm\";\n\n@Entity()\nexport class Chats {\n    @PrimaryGeneratedColumn()\n    id : number;\n\n    @Column()\n    content: string;\n  \n    @CreateDateColumn()\n    createdAt: Date;\n  \n    @UpdateDateColumn()\n    updatedAt: Date;\n  \n    @Column({ nullable: true })\n    ChannelId: number | null;\n  \n    @Column({ nullable: true })\n    SenderId: number | null;\n  \n    @Column({ nullable: true })\n    ReceiverId: number | null;   \n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ChatsController.html":{"url":"controllers/ChatsController.html","title":"controller - ChatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ChatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chats/chats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                test\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createChats\n                            \n                            \n                                    Async\n                                getChats\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createChats\n                        \n                    \n                \n            \n            \n                \n                    \n                    createChats(url, id: number, content, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':url/chats/:id/contents')\n                \n            \n\n            \n                \n                    Defined in src/chats/chats.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getChats\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChats(url, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':url/chats')\n                \n            \n\n            \n                \n                    Defined in src/chats/chats.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Post, Body } from '@nestjs/common';\nimport { ChatsService } from './chats.service';\nimport { User } from 'src/users/users.entity';\nimport { Users } from 'src/common/decorators/user.decorator';\n@Controller('test')\nexport class ChatsController {\n    constructor(private chatsService: ChatsService) {}\n\n    // @ApiOperation({ summary: 채팅방 모두 가져오기})\n    @Get(':url/chats')       // @User user:Users\n    async getChats(@Param('url') url, @Users() user:User) {\n        return this.chatsService.getChats(url, 1);\n    }\n\n    // @ApiOperation({ summary: 특정 채팅방  가져오기})\n\n    // @ApiOperation({ summary: 채팅방 만들기})\n    @Post(':url/chats/:id/contents')\n    async createChats(\n        @Param('url') url,\n        @Param('id') id:number, // ParseIntPipe \n        @Body('content') content,\n        @Users() user:User,\n    ){\n        return this.chatsService.createChats(url,content,id,12)\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChatsModule.html":{"url":"modules/ChatsModule.html","title":"module - ChatsModule","body":"\n                   \n\n\n\n\n    Modules\n    ChatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ChatsModule\n\n\n\ncluster_ChatsModule_providers\n\n\n\n\nChatsService\n\nChatsService\n\n\n\nChatsModule\n\nChatsModule\n\nChatsModule -->\n\nChatsService->ChatsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/chats/chats.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ChatsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ChatsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ChatsService } from './chats.service';\nimport { ChatsController } from './chats.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from 'src/users/users.entity';\nimport { Chats } from 'src/chats/chats.entity';\n@Module({\n  imports: [TypeOrmModule.forFeature([Chats, User])] , // EventsMoudle\n  providers: [ChatsService],\n  controllers: [ChatsController]\n})\nexport class ChatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChatsService.html":{"url":"injectables/ChatsService.html","title":"injectable - ChatsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/chats/chats.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createChats\n                            \n                            \n                                    Async\n                                getChats\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(chatsRepository: Repository, usersRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/chats/chats.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chatsRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createChats\n                        \n                    \n                \n            \n            \n                \n                    \n                    createChats(url: string, content: string, id: number, myId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/chats/chats.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    content\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    myId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getChats\n                        \n                    \n                \n            \n            \n                \n                    \n                    getChats(url: string, myId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/chats/chats.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    myId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Chats } from './chats.entity'\nimport { User } from 'src/users/users.entity';\nfunction getKeyByValue(object, value) {\n    return Object.keys(object).find((key) =>object[key] === value);\n}\n\n@Injectable()\nexport class ChatsService {\n    constructor(\n        @InjectRepository(Chats) private chatsRepository: Repository,\n        @InjectRepository(User) private usersRepository: Repository,\n        // private readonly eventsGateway: EventGateway,\n    ) {}\n\n    async getChats(url: string, myId: number) {\n        return (\n            this.usersRepository\n            .createQueryBuilder('user')\n            // .leftJoin('user.dms', 'dms', 'dms.senderId = :myId', { myId })\n            // .leftJoin('dms', 'workspace', 'workspace.url = :url', { url })\n            .getMany()\n        );\n    }\n    async createChats(\n        url:string,\n        content: string,\n        id:number,\n        myId: number,\n    ){\n        // consts \n        // const chat = new Chats();\n        // chat.SenderId = myId;\n        // chat.ReceiverId = id;\n        // chat.content = content;\n        const chat = this.chatsRepository.create({\n            id: myId,\n            SenderId: id,\n            content: content\n        })\n        const saveChat  = await this.chatsRepository.save(chat);\n        const chatWithSender = await this.chatsRepository.findOne({\n            where:{id: saveChat.id},\n            // relations:['Sender'],\n        });\n        // const receiverSocketId = getKeyByValue(\n        //     onlineMap[`/ws-${workspace.url}`],\n        //     Number(id),\n        //   );\n        // this.eventsGateway.server.to(receiverSocketId).emit('dm', dmWithSender);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateChannelDto.html":{"url":"classes/CreateChannelDto.html","title":"class - CreateChannelDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateChannelDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/channels/dto/create-channel.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                owner\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        owner\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'junyopar', description: '채팅방 소유자'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/channels/dto/create-channel.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: '1q2w3e4r', description: '비밀번호'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/channels/dto/create-channel.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@ApiProperty({example: '수다방', description: '채팅방명'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/channels/dto/create-channel.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsNumber, IsString} from 'class-validator'\n\nexport class CreateChannelDto {\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    example: '수다방',\n    description: '채팅방명',\n  })\n  public title: string;\n  \n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '1q2w3e4r',\n    description: '비밀번호',\n  })\n  public password: string;\n  \n  // @IsNotEmpty()\n  // @IsString()\n  @ApiProperty({\n    example: 'junyopar',\n    description: '채팅방 소유자',\n  })\n  public owner: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/users.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nickname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Matches([a-z0-9_.'-]+)@Length(2, 12)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/users.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Length, Matches } from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty()\n  @Matches(`[a-z0-9_\\.'\\-]+`)\n  //   @Matches(`\\.{0, 1}`)\n  @Length(2, 12)\n  nickname: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (configService: ConfigService) => ({\n        type: 'postgres',\n        host: configService.get('DB_HOST'),\n        port: configService.get('DB_PORT'),\n        username: configService.get('DB_USERNAME'),\n        password: configService.get('DB_PASSWORD'),\n        database: configService.get('DB_DATABASE'),\n        entities: [__dirname + '/../**/*.entity.{js,ts}'],\n        synchronize: true,\n      }),\n    }),\n  ],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventsModule.html":{"url":"modules/EventsModule.html","title":"module - EventsModule","body":"\n                   \n\n\n\n\n    Modules\n    EventsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_exports\n\n\n\n\nChannelsGateway \n\nChannelsGateway \n\n\n\nEventsModule\n\nEventsModule\n\nChannelsGateway  -->\n\nEventsModule->ChannelsGateway \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/events/events.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            ChannelsGateway\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ChannelsGateway } from './events.channels.gateway';\n\n@Module({\n    providers: [ChannelsGateway],\n    exports: [ChannelsGateway],\n  })\nexport class EventsModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/FourtyTwoGuard.html":{"url":"guards/FourtyTwoGuard.html","title":"guard - FourtyTwoGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    FourtyTwoGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/fourty-two.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Async\n                                validateCode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, loginQueue: Queue)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/fourty-two.guard.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginQueue\n                                                  \n                                                        \n                                                                    Queue\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/fourty-two.guard.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateCode\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateCode(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/guards/fourty-two.guard.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { InjectQueue } from '@nestjs/bull';\nimport {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  Logger,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Queue } from 'bull';\nimport { Request } from 'express';\nimport { AuthService } from '../auth.service';\nimport { FourtyTwoToken } from '../interface/fourty-two-token.interface';\n\n@Injectable()\nexport class FourtyTwoGuard implements CanActivate {\n  private logger: Logger = new Logger(FourtyTwoGuard.name);\n\n  constructor(\n    private authService: AuthService,\n    @InjectQueue('fourtyTwoLogin') private readonly loginQueue: Queue,\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    request.token = await this.validateCode(request);\n    return true;\n  }\n\n  async validateCode(request: Request): Promise {\n    const { code } = request.query;\n    if (!code) {\n      throw new UnauthorizedException('code not exists');\n    }\n    this.logger.debug(`code : ${code}`);\n\n    const job = await this.loginQueue.add('token', {\n      code,\n    });\n\n    try {\n      const token = await job.finished();\n      return token;\n    } catch (err) {\n      throw new UnauthorizedException('invalid code or server is busy');\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FourtyTwoToken.html":{"url":"interfaces/FourtyTwoToken.html","title":"interface - FourtyTwoToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FourtyTwoToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interface/fourty-two-token.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            access_token\n                                        \n                                \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            expires_in\n                                        \n                                \n                                \n                                        \n                                            refresh_token\n                                        \n                                \n                                \n                                        \n                                            scope\n                                        \n                                \n                                \n                                        \n                                            token_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires_in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expires_in:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refresh_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refresh_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scope\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scope:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FourtyTwoToken {\n  access_token: string;\n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  created_at: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GameGateway.html":{"url":"classes/GameGateway.html","title":"class - GameGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GameGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/game.gateway.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        \n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                games\n                            \n                            \n                                nsp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                afterInit\n                            \n                            \n                                handleConnection\n                            \n                            \n                                handleDisconnect\n                            \n                            \n                                handleInviteEvent\n                            \n                            \n                                handleKeyPressed\n                            \n                            \n                                handleKeyReleased\n                            \n                            \n                                handlePlayerReady\n                            \n                            \n                                handleQueueEvent\n                            \n                            \n                                handleQuitGame\n                            \n                            \n                                handleQuitQueueEvent\n                            \n                            \n                                handleWatchEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ingame: GameService, lobby: LobbyService)\n                    \n                \n                        \n                            \n                                Defined in src/game/game.gateway.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ingame\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lobby\n                                                  \n                                                        \n                                                                        LobbyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        games\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/game/game.gateway.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nsp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Namespace\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/game.gateway.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        afterInit\n                        \n                    \n                \n            \n            \n                \nafterInit()\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.gateway.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleConnection\n                        \n                    \n                \n            \n            \n                \nhandleConnection(socket: Socket)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.gateway.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socket\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDisconnect\n                        \n                    \n                \n            \n            \n                \nhandleDisconnect(socket: Socket)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.gateway.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socket\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleInviteEvent\n                        \n                    \n                \n            \n            \n                \nhandleInviteEvent(socket: Socket, userinfo: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @('invite')\n                \n            \n\n            \n                \n                    Defined in src/game/game.gateway.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socket\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userinfo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleKeyPressed\n                        \n                    \n                \n            \n            \n                \nhandleKeyPressed(socket: Socket, payload: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @('keypress')\n                \n            \n\n            \n                \n                    Defined in src/game/game.gateway.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socket\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleKeyReleased\n                        \n                    \n                \n            \n            \n                \nhandleKeyReleased(socket: Socket, payload: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @('keyrelease')\n                \n            \n\n            \n                \n                    Defined in src/game/game.gateway.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socket\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handlePlayerReady\n                        \n                    \n                \n            \n            \n                \nhandlePlayerReady(socket: Socket, roomId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @('ready')\n                \n            \n\n            \n                \n                    Defined in src/game/game.gateway.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socket\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    roomId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleQueueEvent\n                        \n                    \n                \n            \n            \n                \nhandleQueueEvent(socket: Socket)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @('join_queue')\n                \n            \n\n            \n                \n                    Defined in src/game/game.gateway.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socket\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleQuitGame\n                        \n                    \n                \n            \n            \n                \nhandleQuitGame(socket: Socket)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @('quit_game')\n                \n            \n\n            \n                \n                    Defined in src/game/game.gateway.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socket\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleQuitQueueEvent\n                        \n                    \n                \n            \n            \n                \nhandleQuitQueueEvent(socket: Socket)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @('quit_queue')\n                \n            \n\n            \n                \n                    Defined in src/game/game.gateway.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socket\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleWatchEvent\n                        \n                    \n                \n            \n            \n                \nhandleWatchEvent(socket: Socket, userinfo: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @('watch')\n                \n            \n\n            \n                \n                    Defined in src/game/game.gateway.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socket\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userinfo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as WS from '@nestjs/websockets'\nimport { Socket, Namespace } from \"socket.io\";\nimport { GameService } from './game.service';\nimport { LobbyService } from './lobby.service';\n\n@WS.WebSocketGateway({namespace: '/game'})\nexport class GameGateway\nimplements WS.OnGatewayInit\n{\n    constructor(\n        private readonly ingame : GameService,\n        private readonly lobby : LobbyService,\n    ){}\n\n    @WS.WebSocketServer() nsp: Namespace;\n\n    games : Array = [];\n\n    afterInit() {\n        console.log(`game : 게이트웨이 생성됨✅`);\n    }\n\n    handleConnection(@WS.ConnectedSocket() socket: Socket) {\n        console.log(`game : ${socket.id} 연결 됨`);\n    }\n    \n    handleDisconnect(@WS.ConnectedSocket() socket: Socket) {\n        this.lobby.quit_queue(socket);\n        this.ingame.quitGame(this.nsp, socket.id);\n        console.log(`game : ${socket.id} 연결 끊어짐.`);\n    }\n\n    /*=========================*/\n    /*                         */\n    /*        GameLobby        */\n    /*                         */\n    /*=========================*/\n\n    @WS.SubscribeMessage('invite')\n    handleInviteEvent(\n      @WS.ConnectedSocket() socket: Socket,\n      @WS.MessageBody() userinfo: string,\n    ) {\n        this.lobby.invite_to_game(socket, userinfo);\n    }\n\n    @WS.SubscribeMessage('watch')\n    handleWatchEvent(\n      @WS.ConnectedSocket() socket: Socket,\n      @WS.MessageBody() userinfo: string,\n    ) {\n        this.lobby.spectate_game(socket, userinfo);\n    }\n\n    @WS.SubscribeMessage('join_queue')\n    handleQueueEvent(\n      @WS.ConnectedSocket() socket: Socket,\n    ) {\n        if (this.lobby.join_queue(this.nsp, socket))\n            console.log(\"방 만들어짐\")\n    }\n\n    @WS.SubscribeMessage('quit_queue')\n    handleQuitQueueEvent(\n      @WS.ConnectedSocket() socket: Socket,\n    ) {\n        this.lobby.quit_queue(socket);\n    }\n    \n    /*=========================*/\n    /*                         */\n    /*        In  Game         */\n    /*                         */\n    /*=========================*/\n\n    @WS.SubscribeMessage('ready')\n    handlePlayerReady(\n        @WS.ConnectedSocket() socket: Socket,\n        @WS.MessageBody() roomId : string\n    ){\n        this.ingame.handlePlayerReady(this.nsp, roomId, socket.id);\n    }\n\n    @WS.SubscribeMessage('quit_game')\n    handleQuitGame(\n        @WS.ConnectedSocket() socket: Socket,\n    ){\n        this.ingame.quitGame(this.nsp, socket.id);\n    }\n\n    @WS.SubscribeMessage('keypress')\n    handleKeyPressed(\n      @WS.ConnectedSocket() socket: Socket,\n      @WS.MessageBody() payload : any\n    ) {\n        const roomId : string = payload[0];\n        const keyCode : string = payload[1];\n        this.ingame.handleKeyPressed(roomId, socket.id, keyCode)\n    }\n\n    @WS.SubscribeMessage('keyrelease')\n    handleKeyReleased(\n      @WS.ConnectedSocket() socket: Socket,\n      @WS.MessageBody() payload : any\n    ) {\n        const roomId : string = payload[0];\n        const keyCode : string = payload[1];\n        this.ingame.handleKeyReleased(roomId, socket.id, keyCode)\n    }\n\n};\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GameModule.html":{"url":"modules/GameModule.html","title":"module - GameModule","body":"\n                   \n\n\n\n\n    Modules\n    GameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GameModule\n\n\n\ncluster_GameModule_providers\n\n\n\n\nGameService\n\nGameService\n\n\n\nGameModule\n\nGameModule\n\nGameModule -->\n\nGameService->GameModule\n\n\n\n\n\nLobbyService\n\nLobbyService\n\nGameModule -->\n\nLobbyService->GameModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/game/game.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GameService\n                        \n                        \n                            LobbyService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { GameGateway } from './game.gateway'\nimport { GameService } from './game.service'\nimport { LobbyService } from './lobby.service'\n\n@Module ({\n    providers: [GameGateway, LobbyService, GameService],\n    //controllers: [GameService, LobbyService]\n})\n\nexport class GameModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameService.html":{"url":"injectables/GameService.html","title":"injectable - GameService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/game.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                __game_list\n                            \n                            \n                                    Private\n                                __player_list\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                __circle_collision\n                            \n                            \n                                    Private\n                                __collid_check\n                            \n                            \n                                    Private\n                                __keyboard_check\n                            \n                            \n                                    Private\n                                __paddle_collision\n                            \n                            \n                                    Private\n                                __score_check\n                            \n                            \n                                    Private\n                                __single_game_frame\n                            \n                            \n                                    Private\n                                __start_game\n                            \n                            \n                                    Private\n                                __stop_game\n                            \n                            \n                                    Private\n                                __wall_collision\n                            \n                            \n                                handleKeyPressed\n                            \n                            \n                                handleKeyReleased\n                            \n                            \n                                handlePlayerReady\n                            \n                            \n                                makeNewRoom\n                            \n                            \n                                quitGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        __circle_collision\n                        \n                    \n                \n            \n            \n                \n                    \n                    __circle_collision(c1: literal type, c2: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:304\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    c1\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    c2\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        __collid_check\n                        \n                    \n                \n            \n            \n                \n                    \n                    __collid_check(game: GameType)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    game\n                                    \n                                                GameType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        __keyboard_check\n                        \n                    \n                \n            \n            \n                \n                    \n                    __keyboard_check(game: GameType)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    game\n                                    \n                                                GameType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        __paddle_collision\n                        \n                    \n                \n            \n            \n                \n                    \n                    __paddle_collision(player: string, game: GameType)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:270\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    player\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    game\n                                    \n                                                GameType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        __score_check\n                        \n                    \n                \n            \n            \n                \n                    \n                    __score_check(nsp: Namespace, game: GameType)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:228\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nsp\n                                    \n                                            Namespace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    game\n                                    \n                                                GameType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        __single_game_frame\n                        \n                    \n                \n            \n            \n                \n                    \n                    __single_game_frame(nsp: Namespace, game: GameType)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:184\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nsp\n                                    \n                                            Namespace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    game\n                                    \n                                                GameType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        __start_game\n                        \n                    \n                \n            \n            \n                \n                    \n                    __start_game(nsp: Namespace, game: GameType)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nsp\n                                    \n                                            Namespace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    game\n                                    \n                                                GameType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        __stop_game\n                        \n                    \n                \n            \n            \n                \n                    \n                    __stop_game(game: GameType)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    game\n                                    \n                                                GameType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        __wall_collision\n                        \n                    \n                \n            \n            \n                \n                    \n                    __wall_collision(positions: GameDataType)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:252\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    positions\n                                    \n                                                GameDataType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleKeyPressed\n                        \n                    \n                \n            \n            \n                \nhandleKeyPressed(roomId: string, socketId: string, keyCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    socketId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    keyCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleKeyReleased\n                        \n                    \n                \n            \n            \n                \nhandleKeyReleased(roomId: string, socketId: string, keyCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    socketId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    keyCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handlePlayerReady\n                        \n                    \n                \n            \n            \n                \nhandlePlayerReady(nsp: Namespace, roomId: string, socketId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nsp\n                                    \n                                            Namespace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    roomId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    socketId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeNewRoom\n                        \n                    \n                \n            \n            \n                \nmakeNewRoom(roomId: string, p1: string, p2: string)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    roomId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    p1\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    p2\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quitGame\n                        \n                    \n                \n            \n            \n                \nquitGame(nsp: Namespace, socketId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nsp\n                                    \n                                            Namespace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    socketId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        __game_list\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/game/game.service.ts:152\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        __player_list\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/game/game.service.ts:154\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { Namespace } from \"socket.io\";\n\nconst TABLE_LEFT = -600;\nconst TABLE_RIGHT = 600;\nconst TABLE_TOP = -400; // aspect_ratio : 2/3\nconst TABLE_BOTTOM = 400;\nconst BALL_RAD = 30;\nconst PADDLE_H = 160; //\nconst PADDLE_W = 24;\nconst PADDLE_L = 40;\nconst PADDLE_R = 40;\nconst WIN_SCORE = 3;\nconst PADDLE_SPEED = 10;\nconst BALL_VEL_INIT_X = 4;\nconst BALL_VEL_INIT_Y = 3;\nconst ACCEL_RATIO = 1.1;\n\ntype GameDataType = {\n  ball_pos   : { x : number,  y : number };\n  ball_vel   : { x : number,  y : number };\n  paddle_pos : { p1: number,  p2: number };\n  score      : { p1: number,  p2: number };\n  up_pressed : { p1: boolean, p2: boolean};\n  down_pressed:{ p1: boolean, p2: boolean};\n}\n\ntype GameType = {\n  gameId     : string;\n  intervalId : ReturnType | null;\n  isReady    : {p1 : boolean, p2 : boolean};\n  players    : {p1 : string,  p2 : string };\n  spectators : Array;\n  data       : GameDataType;\n}\n\n@Injectable()\nexport class GameService {\n\n  makeNewRoom(\n    roomId : string,\n    p1 : string,\n    p2 : string,\n  ) : void {\n    console.log(\"new room Created\", roomId);\n    const game : GameType = {\n      gameId: roomId,\n      intervalId: null,\n      isReady : {p1: false, p2: false},\n      players: {p1: p1, p2: p2},\n      spectators: [],\n      data : {\n        ball_pos   : { x : 0, y : 0 },\n        ball_vel   : { x : BALL_VEL_INIT_X, y : BALL_VEL_INIT_Y },\n        paddle_pos : { p1: 0, p2: 0 },\n        score      : { p1: 0, p2: 0 }, \n        up_pressed : { p1: false, p2: false},\n        down_pressed:{ p1: false, p2: false}\n      }\n    }\n    this.__game_list.set(roomId, game);\n  }\n\n  handleKeyPressed(\n    roomId : string, \n    socketId : string, \n    keyCode : string\n  ) : void {\n    let game = this.__game_list.get(roomId);\n    if (socketId === game.players.p1) {\n      if ( keyCode === 'ArrowUp' )\n        game.data.up_pressed.p1 = true;\n      else if ( keyCode === 'ArrowDown' )\n        game.data.down_pressed.p1 = true;\n    } else if (socketId === game.players.p2) {\n      if ( keyCode === 'ArrowUp' )\n        game.data.up_pressed.p2 = true;\n      else if ( keyCode === 'ArrowDown' )\n        game.data.down_pressed.p2 = true;\n    }\n  }\n\n  handleKeyReleased(\n    roomId : string, \n    socketId : string, \n    keyCode : string\n  ) : void {\n    let game = this.__game_list.get(roomId);\n    if (socketId === game.players.p1) {\n      if ( keyCode === 'ArrowUp' )\n        game.data.up_pressed.p1 = false;\n      else if ( keyCode === 'ArrowDown' )\n        game.data.down_pressed.p1 = false;\n    } else if (socketId === game.players.p2) {\n      if ( keyCode === 'ArrowUp' )\n        game.data.up_pressed.p2 = false;\n      else if ( keyCode === 'ArrowDown' )\n        game.data.down_pressed.p2 = false;\n    }\n  }\n  \n  handlePlayerReady(\n    nsp : Namespace,\n    roomId: string,\n    socketId: string\n  ) : void {\n    let game = this.__game_list.get(roomId);\n    if (game) {\n      if (socketId === game.players.p1)\n        game.isReady.p1 = true;\n      else if (socketId === game.players.p2)\n        game.isReady.p2 = true;\n      console.log(\"player state : \", game.isReady);\n    }\n    if (game.isReady.p1 && game.isReady.p2) {\n      nsp.to(roomId).emit(\"game_start\", game.players.p1);\n      this.__start_game(nsp, game);\n    }\n  }\n\n  quitGame (\n    nsp : Namespace,\n    socketId: string,\n  ) : void {\n    const game : GameType | undefined = this.__player_list.get(socketId);\n    // 1. 소켓 아이디로 플레이어의 게임ID를 찾는다.\n    if (game === undefined)\n      return;\n    \n      // 2. 해당 게임에서 나가는 플레이어의 점수를 -1로 바꾼다.\n    if (game.players.p1 === socketId)\n      game.data.score.p1 = -1;\n    else if (game.players.p2 === socketId)\n      game.data.score.p2 = -1;\n\n    // 3. 점수를 업데이트한다.\n    nsp.to(game.gameId).emit(\"update_score\", game.data.score);\n      \n    // 4. game_over이벤트를 전송한다. (승자는 안 나간 플레이어)\n    if (game.players.p1 === socketId)\n      nsp.to(game.gameId).emit(\"game_over\", game.players.p2);\n    else if (game.players.p2 === socketId)\n      nsp.to(game.gameId).emit(\"game_over\", game.players.p1);\n    \n    // 5. __stop_game호출한다.\n    this.__stop_game(game);\n  }\n\n  /* ======= private ====== */\n  /* attribute */\n  // gameID로 게임을 관리하는 자료.\n  private __game_list : Map = new Map();\n  // playerID로 gameID를 관리하는  자료.\n  private __player_list : Map = new Map();\n\n  /* method */\n  private __start_game(\n    nsp : Namespace,\n    game : GameType\n  ) : void {\n    console.log(\"loop 시작\");\n    this.__player_list.set(game.players.p1, game);\n    this.__player_list.set(game.players.p2, game);\n    game.intervalId = setInterval(() => {\n      this.__single_game_frame(nsp, game);\n    }, 1000 / 60)\n  }\n\n  private __stop_game(\n    game : GameType\n  ) : void {\n    if (game.intervalId !== null){\n      console.log(\"게임 종료\")\n      clearInterval(game.intervalId);\n      game.intervalId = null;\n      this.__player_list.delete(game.players.p1);\n      this.__player_list.delete(game.players.p2);\n      this.__game_list.delete(game.gameId);\n    } else {\n      console.log(\"게임 없음\")\n    }\n  }\n\n  private __single_game_frame(\n    nsp: Namespace,\n    game : GameType,\n  ) : void {\n    this.__score_check(nsp, game);\n    this.__collid_check(game);\n    this.__keyboard_check(game);\n\n    // console.log(\"updating\", game.data.ball_pos, game.data.paddle_pos)\n    nsp.to(game.gameId).emit(\"update_game\", {\n      ball_pos   : game.data.ball_pos,\n      paddle_pos : game.data.paddle_pos,\n    })\n  }\n\n  private __keyboard_check(\n    game: GameType\n  ) : void {\n    const p1_dir : number = Number(game.data.down_pressed.p1) - Number(game.data.up_pressed.p1);\n    const p2_dir : number = Number(game.data.down_pressed.p2) - Number(game.data.up_pressed.p2);\n    \n    game.data.paddle_pos.p1 += PADDLE_SPEED * p1_dir;\n    game.data.paddle_pos.p2 += PADDLE_SPEED * p2_dir;\n\n    if ( game.data.paddle_pos.p1   TABLE_BOTTOM - PADDLE_H / 2 )\n      game.data.paddle_pos.p1 = TABLE_BOTTOM - PADDLE_H / 2;\n    if ( game.data.paddle_pos.p2   TABLE_BOTTOM - PADDLE_H / 2 )\n      game.data.paddle_pos.p2 = TABLE_BOTTOM - PADDLE_H / 2;\n  }\n\n  private __collid_check (\n    game : GameType\n  ) : void {\n    this.__wall_collision(game.data);\n    this.__paddle_collision(game.players.p1, game);\n    this.__paddle_collision(game.players.p2, game);\n    game.data.ball_pos.x += game.data.ball_vel.x;\n    game.data.ball_pos.y += game.data.ball_vel.y;\n  }\n\n  private __score_check(\n    nsp : Namespace,\n    game : GameType,\n  ) : void {\n    const pos = game.data.ball_pos\n    let score = game.data.score;\n\n    if (pos.x = WIN_SCORE) {\n        nsp.to(game.gameId).emit(\"game_over\", game.players.p2);\n        this.__stop_game(game);\n      }\n    } else if (pos.x >= TABLE_RIGHT - BALL_RAD) {\n      score.p1 += 1;\n      nsp.to(game.gameId).emit(\"update_score\", score);\n      if (score.p1 >= WIN_SCORE) {\n        nsp.to(game.gameId).emit(\"game_over\", game.players.p1);\n        this.__stop_game(game);\n      }\n    }\n  }\n\n  private __wall_collision (\n    positions : GameDataType\n  ) : void {\n    let pos = positions.ball_pos;\n    let vel = positions.ball_vel;\n\n    if (pos.x = TABLE_RIGHT - BALL_RAD ) {\n          positions.ball_pos = {x: 0, y: 0};\n          if (vel.x > 0) vel.x = -BALL_VEL_INIT_X;\n          else           vel.x =  BALL_VEL_INIT_X;\n          if (vel.y > 0) vel.y = -BALL_VEL_INIT_Y;\n          else           vel.y =  BALL_VEL_INIT_Y;\n\n        }\n    if (pos.y = TABLE_BOTTOM - BALL_RAD)\n      vel.y = -vel.y;\n  }\n\n  private __paddle_collision (\n    player : string,\n    game : GameType\n  ) : void {\n    let center;\n    let vel = game.data.ball_vel;\n    const ball = game.data.ball_pos;\n\n    if (player === game.players.p1)\n      center = {x: TABLE_LEFT + PADDLE_L, y: game.data.paddle_pos.p1}\n    else if (player === game.players.p2) \n      center = {x: TABLE_RIGHT - PADDLE_R, y: game.data.paddle_pos.p2}\n    else\n      return;\n    const rad   = PADDLE_W / 2;\n    const top   = center.y - PADDLE_H / 2 + rad;\n    const bot   = center.y + PADDLE_H / 2 - rad;\n    const left  = center.x - PADDLE_W / 2 - BALL_RAD;\n    const right = center.x + PADDLE_W / 2 + BALL_RAD;\n\n    if (left \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Gameinfo.html":{"url":"interfaces/Gameinfo.html","title":"interface - Gameinfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Gameinfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/game.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ball\n                                        \n                                \n                                \n                                        \n                                            p1\n                                        \n                                \n                                \n                                        \n                                            p2\n                                        \n                                \n                                \n                                        \n                                            score\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ball\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ball:         Ball\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Ball\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        p1\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        p1:         Player\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Player\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        p2\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        p2:         Player\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Player\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        score:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         State\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         State\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Socket } from \"socket.io\";\n\nexport interface Vector2D {\n    x: number,\n    y: number\n};\n\ninterface Ball {\n    pos : Vector2D;\n    vel : Vector2D;\n};\n\nexport enum State {\n    WAIT,\n    START,\n    INGAME,\n    END\n};\n\ninterface Player {\n    socketid: Socket;\n    username: string;\n    y_pos : number;\n}\n\nexport interface Gameinfo {\n    score: Array;\n    state: State;\n    ball: Ball;\n    p1 : Player;\n    p2 : Player;\n}\n\nexport interface Roominfo {\n    roomid : string;\n    gameinfo : Gameinfo;\n    watchers : Array;\n};\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshAuthGuard.html":{"url":"injectables/JwtRefreshAuthGuard.html","title":"injectable - JwtRefreshAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-refresh-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtRefreshAuthGuard extends AuthGuard('jwt-refresh') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtRefreshStrategy.html":{"url":"injectables/JwtRefreshStrategy.html","title":"injectable - JwtRefreshStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtRefreshStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt-refresh.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt-refresh.strategy.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(req: Request, payload: JwtTokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt-refresh.strategy.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                JwtTokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger(JwtRefreshStrategy.name)\n                    \n                \n                    \n                        \n                                Defined in src/auth/strategies/jwt-refresh.strategy.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Request } from 'express';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { UsersService } from 'src/users/users.service';\nimport { JwtTokenPayload } from '../interface/jwt-token-payload.interface';\n\n@Injectable()\nexport class JwtRefreshStrategy extends PassportStrategy(\n  Strategy,\n  'jwt-refresh',\n) {\n  private logger: Logger = new Logger(JwtRefreshStrategy.name);\n\n  constructor(\n    private configService: ConfigService,\n    private userService: UsersService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        (request: Request) => {\n          return request?.cookies?.Refresh;\n        },\n      ]),\n      secretOrKey: configService.get('JWT_REFRESH_TOKEN_SECRET'),\n      passReqToCallback: true,\n    });\n  }\n\n  async validate(req: Request, payload: JwtTokenPayload) {\n    const refreshToken = req.cookies?.Refresh;\n    this.logger.debug(`refresh token : ${refreshToken}`);\n    return this.userService.getUserIfRefreshTokenValid(\n      refreshToken,\n      payload.id,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtTokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt.strategy.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtTokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger(JwtStrategy.name)\n                    \n                \n                    \n                        \n                                Defined in src/auth/strategies/jwt.strategy.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Request } from 'express';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { UsersService } from 'src/users/users.service';\nimport { JwtTokenPayload } from '../interface/jwt-token-payload.interface';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  private logger: Logger = new Logger(JwtStrategy.name);\n\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly userService: UsersService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        (request: Request) => {\n          return request?.cookies?.Authentication;\n        },\n      ]),\n      secretOrKey: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n    });\n  }\n\n  async validate(payload: JwtTokenPayload) {\n    this.logger.debug(\n      `id: ${payload.id} 2FA Completed: ${payload.isTwoFactorAuthenticationCompleted}`,\n    );\n    return await this.userService.getById(payload.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtTokenPayload.html":{"url":"interfaces/JwtTokenPayload.html","title":"interface - JwtTokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtTokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interface/jwt-token-payload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isTwoFactorAuthenticationCompleted\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isTwoFactorAuthenticationCompleted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isTwoFactorAuthenticationCompleted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtTokenPayload {\n  id: number;\n  isTwoFactorAuthenticationCompleted?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtTwoFactorGuard.html":{"url":"injectables/JwtTwoFactorGuard.html","title":"injectable - JwtTwoFactorGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtTwoFactorGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt-two-factor.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtTwoFactorGuard extends AuthGuard('jwt-2fa') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtTwoFactorStrategy.html":{"url":"injectables/JwtTwoFactorStrategy.html","title":"injectable - JwtTwoFactorStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtTwoFactorStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/strategies/jwt-two-factor.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/strategies/jwt-two-factor.strategy.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtTokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/strategies/jwt-two-factor.strategy.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtTokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger(JwtTwoFactorStrategy.name)\n                    \n                \n                    \n                        \n                                Defined in src/auth/strategies/jwt-two-factor.strategy.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Request } from 'express';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { UsersService } from 'src/users/users.service';\nimport { JwtTokenPayload } from '../interface/jwt-token-payload.interface';\n\n@Injectable()\nexport class JwtTwoFactorStrategy extends PassportStrategy(\n  Strategy,\n  'jwt-2fa',\n) {\n  private logger: Logger = new Logger(JwtTwoFactorStrategy.name);\n\n  constructor(\n    private readonly configService: ConfigService,\n    private readonly userService: UsersService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        (request: Request) => {\n          return request?.cookies?.Authentication;\n        },\n      ]),\n      secretOrKey: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n    });\n  }\n\n  async validate(payload: JwtTokenPayload) {\n    const user = await this.userService.getById(payload.id);\n\n    if (!user.isTwoFactorAuthenticationEnabled) {\n      this.logger.debug(`user ${user.nickname} does not using 2FA`);\n      return user;\n    }\n    if (payload.isTwoFactorAuthenticationCompleted) {\n      this.logger.debug(`user ${user.nickname} already done 2FA`);\n      return user;\n    }\n    this.logger.debug(`user ${user.nickname} needs 2FA validation`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LobbyService.html":{"url":"injectables/LobbyService.html","title":"injectable - LobbyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LobbyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/lobby.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                __queue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                __match_make\n                            \n                            \n                                invite_to_game\n                            \n                            \n                                join_queue\n                            \n                            \n                                quit_queue\n                            \n                            \n                                spectate_game\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(gameService: GameService)\n                    \n                \n                        \n                            \n                                Defined in src/game/lobby.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        gameService\n                                                  \n                                                        \n                                                                        GameService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        __match_make\n                        \n                    \n                \n            \n            \n                \n                    \n                    __match_make(nsp: Namespace)\n                \n            \n\n\n            \n                \n                    Defined in src/game/lobby.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nsp\n                                    \n                                            Namespace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        invite_to_game\n                        \n                    \n                \n            \n            \n                \ninvite_to_game(socket: Socket, userinfo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/game/lobby.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socket\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userinfo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        join_queue\n                        \n                    \n                \n            \n            \n                \njoin_queue(nsp: Namespace, socket: Socket)\n                \n            \n\n\n            \n                \n                    Defined in src/game/lobby.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nsp\n                                    \n                                            Namespace\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    socket\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quit_queue\n                        \n                    \n                \n            \n            \n                \nquit_queue(socket: Socket)\n                \n            \n\n\n            \n                \n                    Defined in src/game/lobby.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socket\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spectate_game\n                        \n                    \n                \n            \n            \n                \nspectate_game(socket: Socket, userinfo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/game/lobby.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    socket\n                                    \n                                            Socket\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userinfo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        __queue\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/game/lobby.service.ts:46\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { v4 as uuid } from 'uuid';\nimport { Namespace, Socket } from 'socket.io';\nimport { GameService } from \"./game.service\";\n\n@Injectable()\nexport class LobbyService {\n  constructor(private gameService: GameService) {}\n\n  invite_to_game(socket : Socket, userinfo : string) {\n    console.log(`gamehome : ${userinfo}에 대한 초대 이벤트 발생 from ${socket.id}`);\n  }\n\n  spectate_game(socket : Socket, userinfo : string){\n    console.log(`gamehome : ${userinfo}에 대한 관전 이벤트 발생 from ${socket.id}`);\n  }\n  \n  join_queue(nsp: Namespace, socket : Socket) : boolean {\n    console.log(`game : ${socket.id} 큐에 진입시도`);\n\n    if (this.__queue.has(socket.id)) {\n      console.log(`game : 이미 큐에 있음. queuesize : ${this.__queue.size}`);\n      return false;\n    }\n  \n    this.__queue.set(socket.id, socket);\n    socket.emit(\"joined_to_queue\");\n    if ( this.__queue.size > 1 ){\n      this.__match_make(nsp);\n      return true;\n    }\n    return false;\n  }\n\n  quit_queue(socket : Socket) {\n    console.log(`game : ${socket.id} 큐에서 나가기 시도`);\n\n    if ( this.__queue.delete(socket.id)  === false) {\n        console.log(`game : 큐에 없음`);\n    } else {\n        socket.emit('out_of_queue');\n    }\n  }\n\n  /* ======= private ====== */\n  private __queue : Map = new Map();\n\n  private __match_make(nsp : Namespace) {\n    const p1 : Socket = this.__queue.values().next().value;\n    this.__queue.delete(p1.id);\n    p1.emit(\"out_of_queue\");\n    const p2 : Socket = this.__queue.values().next().value;\n    this.__queue.delete(p2.id);\n    p2.emit(\"out_of_queue\");\n\n    console.log(`game : p1 is ${p1.id}`);\n    console.log(`game : p2 is ${p2.id}`);\n    console.log(`game : queuesize : ${this.__queue.size}`);\n    \n    const roomId : string = \"game_\" + uuid();\n    p1.join(roomId);\n    p2.join(roomId);\n    nsp.to(roomId).emit(\"enter_to_game\", roomId, p1.id, p2.id);\n    this.gameService.makeNewRoom(roomId, p1.id, p2.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginConsumer.html":{"url":"classes/LoginConsumer.html","title":"class - LoginConsumer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginConsumer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/login.consumer.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getToken\n                            \n                            \n                                    Async\n                                handleFourtyTwoAuth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/login.consumer.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger(LoginConsumer.name)\n                    \n                \n                    \n                        \n                                Defined in src/auth/login.consumer.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getToken(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('token')\n                \n            \n\n            \n                \n                    Defined in src/auth/login.consumer.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        handleFourtyTwoAuth\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleFourtyTwoAuth(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('userInfo')\n                \n            \n\n            \n                \n                    Defined in src/auth/login.consumer.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Process, Processor } from '@nestjs/bull';\nimport { BadRequestException, Logger } from '@nestjs/common';\nimport { Job } from 'bull';\nimport { AuthService } from './auth.service';\nimport { FourtyTwoToken } from './interface/fourty-two-token.interface';\n\n@Processor('fourtyTwoLogin')\nexport class LoginConsumer {\n  private logger: Logger = new Logger(LoginConsumer.name);\n\n  constructor(private readonly authService: AuthService) {}\n\n  @Process('token')\n  async getToken(job: Job): Promise {\n    this.logger.debug(`login queue is processing token job : ${job.id}`);\n\n    const { code } = job.data;\n    const token = await this.authService.getFourtyTwoToken(code);\n\n    this.logger.log(token);\n    this.logger.debug(`login queue is finishing token job : ${job.id}`);\n    return token;\n  }\n\n  @Process('userInfo')\n  async handleFourtyTwoAuth(job: Job) {\n    this.logger.debug(`login queue is processing userInfo job : ${job.id}`);\n\n    const { token } = job.data;\n    if (!token) {\n      throw new BadRequestException('token not exists');\n    }\n\n    const data = await this.authService.getFourtyTwoUserInfo(\n      token.access_token,\n    );\n\n    this.logger.debug(`login queue is finishing userInfo job : ${job.id}`);\n    return data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Player.html":{"url":"interfaces/Player.html","title":"interface - Player","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Player\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/game.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            socketid\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                                \n                                        \n                                            y_pos\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        socketid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        socketid:     Socket\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Socket\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y_pos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y_pos:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Socket } from \"socket.io\";\n\nexport interface Vector2D {\n    x: number,\n    y: number\n};\n\ninterface Ball {\n    pos : Vector2D;\n    vel : Vector2D;\n};\n\nexport enum State {\n    WAIT,\n    START,\n    INGAME,\n    END\n};\n\ninterface Player {\n    socketid: Socket;\n    username: string;\n    y_pos : number;\n}\n\nexport interface Gameinfo {\n    score: Array;\n    state: State;\n    ball: Ball;\n    p1 : Player;\n    p2 : Player;\n}\n\nexport interface Roominfo {\n    roomid : string;\n    gameinfo : Gameinfo;\n    watchers : Array;\n};\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QRCodeUrl.html":{"url":"interfaces/QRCodeUrl.html","title":"interface - QRCodeUrl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QRCodeUrl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/two-factor-authentication/two-factor-auth.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            qrcode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        qrcode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        qrcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Logger, Res, UnauthorizedException } from '@nestjs/common';\nimport { UsersService } from 'src/users/users.service';\nimport * as speakeasy from 'speakeasy';\nimport * as QRCode from 'qrcode';\n\nexport interface QRCodeUrl {\n  qrcode: string;\n}\n\n@Injectable()\nexport class TwoFactorAuthService {\n  private logger: Logger = new Logger(TwoFactorAuthService.name);\n\n  constructor(private readonly usersService: UsersService) {}\n\n  async generateTwoFactorAuthSecret(id: number) {\n    const secret = speakeasy.generateSecret();\n    await this.usersService.setTwoFactorAuthenticationSecret(id, secret.ascii);\n    return secret.otpauth_url;\n  }\n\n  async pipeQRCodeStream(@Res() response, url: string) {\n    return QRCode.toFileStream(response, url);\n  }\n\n  async verifyTwoFactorAuth(id: number, token: string) {\n    const user = await this.usersService.getById(id);\n\n    const isVerified = speakeasy.totp.verify({\n      secret: user.twoFactorSecret,\n      encoding: 'ascii',\n      token,\n    });\n\n    if (!isVerified) {\n      this.logger.error(`2FA Failed token: ${token}`);\n      throw new UnauthorizedException('two factor authentication fail');\n    }\n    return;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Roominfo.html":{"url":"interfaces/Roominfo.html","title":"interface - Roominfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Roominfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/game.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gameinfo\n                                        \n                                \n                                \n                                        \n                                            roomid\n                                        \n                                \n                                \n                                        \n                                            watchers\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gameinfo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gameinfo:         Gameinfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Gameinfo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roomid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roomid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        watchers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        watchers:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Socket } from \"socket.io\";\n\nexport interface Vector2D {\n    x: number,\n    y: number\n};\n\ninterface Ball {\n    pos : Vector2D;\n    vel : Vector2D;\n};\n\nexport enum State {\n    WAIT,\n    START,\n    INGAME,\n    END\n};\n\ninterface Player {\n    socketid: Socket;\n    username: string;\n    y_pos : number;\n}\n\nexport interface Gameinfo {\n    score: Array;\n    state: State;\n    ball: Ball;\n    p1 : Player;\n    p2 : Player;\n}\n\nexport interface Roominfo {\n    roomid : string;\n    gameinfo : Gameinfo;\n    watchers : Array;\n};\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SessionPayload.html":{"url":"interfaces/SessionPayload.html","title":"interface - SessionPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SessionPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interface/session-payload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            link\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        link\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        link:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SessionPayload {\n  id: number;\n  link: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TwoFactorAuthController.html":{"url":"controllers/TwoFactorAuthController.html","title":"controller - TwoFactorAuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TwoFactorAuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/two-factor-authentication/two-factor-auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                2fa\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                turnOff\n                            \n                            \n                                    Async\n                                turnOn\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(req, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('generate')@UseGuards(JwtAuthGuard)@ApiOkResponse({description: 'Google Authenticator에 등록할 QR Code 반환'})\n                \n            \n\n            \n                \n                    Defined in src/auth/two-factor-authentication/two-factor-auth.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        turnOff\n                        \n                    \n                \n            \n            \n                \n                    \n                    turnOff(user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('turn-off')@HttpCode(200)@UseGuards(JwtTwoFactorGuard)@ApiOkResponse({description: '2차 인증 비활성화'})\n                \n            \n\n            \n                \n                    Defined in src/auth/two-factor-authentication/two-factor-auth.controller.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        turnOn\n                        \n                    \n                \n            \n            \n                \n                    \n                    turnOn(user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('turn-on')@HttpCode(200)@UseGuards(JwtAuthGuard)@ApiOkResponse({description: '2차 인증 활성화'})\n                \n            \n\n            \n                \n                    Defined in src/auth/two-factor-authentication/two-factor-auth.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(req, twoFactorTokenDto: TwoFactorTokenDto, user)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('validate')@HttpCode(200)@UseGuards(JwtAuthGuard)@ApiBody({type: TwoFactorTokenDto})@ApiOkResponse({description: '2차 인증 성공'})@ApiUnauthorizedResponse({description: '2차 인증 실패 (token invalid)'})\n                \n            \n\n            \n                \n                    Defined in src/auth/two-factor-authentication/two-factor-auth.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    twoFactorTokenDto\n                                    \n                                                TwoFactorTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ClassSerializerInterceptor,\n  Controller,\n  Get,\n  HttpCode,\n  Post,\n  Req,\n  Res,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport {\n  ApiBody,\n  ApiOkResponse,\n  ApiTags,\n  ApiUnauthorizedResponse,\n} from '@nestjs/swagger';\nimport { UsersService } from 'src/users/users.service';\nimport { AuthService } from '../auth.service';\nimport { User } from '../decorator/user.decorator';\nimport { JwtAuthGuard } from '../guards/jwt-auth.guard';\nimport { JwtTwoFactorGuard } from '../guards/jwt-two-factor.guard';\nimport { TwoFactorAuthService } from './two-factor-auth.service';\nimport { TwoFactorTokenDto } from './two-factor-token.dto';\n\n@ApiTags('2fa')\n@Controller('2fa')\n@UseInterceptors(ClassSerializerInterceptor)\nexport class TwoFactorAuthController {\n  constructor(\n    private readonly twoFactorAuthService: TwoFactorAuthService,\n    private readonly authService: AuthService,\n    private readonly usersService: UsersService,\n  ) {}\n\n  @Get('generate')\n  @UseGuards(JwtAuthGuard)\n  @ApiOkResponse({\n    description: 'Google Authenticator에 등록할 QR Code 반환',\n  })\n  async register(@Req() req, @Res() res) {\n    const otpUrl = await this.twoFactorAuthService.generateTwoFactorAuthSecret(\n      req.user.id,\n    );\n    req.res.setHeader('Content-Type', 'image/png');\n    return this.twoFactorAuthService.pipeQRCodeStream(res, otpUrl);\n  }\n\n  @Post('validate')\n  @HttpCode(200)\n  @UseGuards(JwtAuthGuard)\n  @ApiBody({ type: TwoFactorTokenDto })\n  @ApiOkResponse({ description: '2차 인증 성공' })\n  @ApiUnauthorizedResponse({ description: '2차 인증 실패 (token invalid)' })\n  async validate(\n    @Req() req,\n    @Body() twoFactorTokenDto: TwoFactorTokenDto,\n    @User() user,\n  ) {\n    await this.twoFactorAuthService.verifyTwoFactorAuth(\n      user.id,\n      twoFactorTokenDto.token,\n    );\n    const accessCookie = this.authService.getCookieWithJwtAccessToken(\n      user.id,\n      true,\n    );\n    req.res.setHeader('Set-Cookie', [accessCookie]);\n    return;\n  }\n\n  @Post('turn-on')\n  @HttpCode(200)\n  @UseGuards(JwtAuthGuard)\n  @ApiOkResponse({ description: '2차 인증 활성화' })\n  async turnOn(@User() user) {\n    return await this.usersService.turnOnTwoFactorAuthentication(user.id);\n  }\n\n  @Post('turn-off')\n  @HttpCode(200)\n  @UseGuards(JwtTwoFactorGuard)\n  @ApiOkResponse({ description: '2차 인증 비활성화' })\n  async turnOff(@User() user) {\n    return await this.usersService.turnOffTwoFactorAuthentication(user.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TwoFactorAuthService.html":{"url":"injectables/TwoFactorAuthService.html","title":"injectable - TwoFactorAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TwoFactorAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/two-factor-authentication/two-factor-auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateTwoFactorAuthSecret\n                            \n                            \n                                    Async\n                                pipeQRCodeStream\n                            \n                            \n                                    Async\n                                verifyTwoFactorAuth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/two-factor-authentication/two-factor-auth.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateTwoFactorAuthSecret\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateTwoFactorAuthSecret(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/two-factor-authentication/two-factor-auth.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        pipeQRCodeStream\n                        \n                    \n                \n            \n            \n                \n                    \n                    pipeQRCodeStream(response, url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/two-factor-authentication/two-factor-auth.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verifyTwoFactorAuth\n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyTwoFactorAuth(id: number, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/two-factor-authentication/two-factor-auth.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger(TwoFactorAuthService.name)\n                    \n                \n                    \n                        \n                                Defined in src/auth/two-factor-authentication/two-factor-auth.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, Res, UnauthorizedException } from '@nestjs/common';\nimport { UsersService } from 'src/users/users.service';\nimport * as speakeasy from 'speakeasy';\nimport * as QRCode from 'qrcode';\n\nexport interface QRCodeUrl {\n  qrcode: string;\n}\n\n@Injectable()\nexport class TwoFactorAuthService {\n  private logger: Logger = new Logger(TwoFactorAuthService.name);\n\n  constructor(private readonly usersService: UsersService) {}\n\n  async generateTwoFactorAuthSecret(id: number) {\n    const secret = speakeasy.generateSecret();\n    await this.usersService.setTwoFactorAuthenticationSecret(id, secret.ascii);\n    return secret.otpauth_url;\n  }\n\n  async pipeQRCodeStream(@Res() response, url: string) {\n    return QRCode.toFileStream(response, url);\n  }\n\n  async verifyTwoFactorAuth(id: number, token: string) {\n    const user = await this.usersService.getById(id);\n\n    const isVerified = speakeasy.totp.verify({\n      secret: user.twoFactorSecret,\n      encoding: 'ascii',\n      token,\n    });\n\n    if (!isVerified) {\n      this.logger.error(`2FA Failed token: ${token}`);\n      throw new UnauthorizedException('two factor authentication fail');\n    }\n    return;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TwoFactorTokenDto.html":{"url":"classes/TwoFactorTokenDto.html","title":"class - TwoFactorTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TwoFactorTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/two-factor-authentication/two-factor-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Length(6, 6)@IsNumberString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/two-factor-authentication/two-factor-token.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumberString, Length } from 'class-validator';\n\nexport class TwoFactorTokenDto {\n  @ApiProperty()\n  @Length(6, 6)\n  @IsNumberString()\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatar\n                            \n                            \n                                    Optional\n                                hashedRefreshToken\n                            \n                            \n                                id\n                            \n                            \n                                isTwoFactorAuthenticationEnabled\n                            \n                            \n                                nickname\n                            \n                            \n                                status\n                            \n                            \n                                    Optional\n                                twoFactorSecret\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        avatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Uint8Array\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'bytea', nullable: false})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/users.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        hashedRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/users.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/users.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTwoFactorAuthenticationEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/users.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/users.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: UserStatus, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/users.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        twoFactorSecret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})@Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/users.entity.ts:38\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Exclude } from 'class-transformer';\nimport { Column, Entity, PrimaryColumn } from 'typeorm';\n\nexport enum UserStatus {\n  ONLINE = 'ONLINE',\n  OFFLINE = 'OFFLINE',\n  INGAME = 'INGAME',\n}\n\n@Entity({ name: 'user'})\nexport class User {\n  @PrimaryColumn()\n  id: number;\n\n  @Column({ unique: true })\n  nickname: string;\n\n  @Column({\n    type: 'bytea',\n    nullable: false,\n  })\n  @Exclude()\n  avatar: Uint8Array;\n\n  @Column({\n    type: 'enum',\n    enum: UserStatus,\n    default: UserStatus.OFFLINE,\n  })\n  status: UserStatus;\n\n  @Column({ nullable: true })\n  @Exclude()\n  hashedRefreshToken?: string;\n\n  @Column({ nullable: true })\n  @Exclude()\n  twoFactorSecret?: string;\n\n  @Column({ default: false })\n  isTwoFactorAuthenticationEnabled: boolean;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteUser\n                            \n                            \n                                    Async\n                                getUserAvatar\n                            \n                            \n                                    Async\n                                getUserInfo\n                            \n                            \n                                updateUserAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()@UseGuards(JwtTwoFactorGuard)\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserAvatar\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserAvatar(req, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('avatar')@ApiOperation({summary: '사용자 아바타 이미지 반환 (byte array)'})@UseGuards(JwtTwoFactorGuard)\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserInfo(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(JwtTwoFactorGuard)\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserAvatar\n                        \n                    \n                \n            \n            \n                \nupdateUserAvatar(req, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('avatar')@UseInterceptors(undefined)@UseGuards(JwtTwoFactorGuard)@ApiOperation({summary: '사용자 아바타 변경 기능 (3MB Limit, jpeg, bmp, jpg, png) '})@ApiConsumes('multipart/form-data')@ApiBody({description: 'File upload', schema: undefined})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ClassSerializerInterceptor,\n  Controller,\n  Delete,\n  FileTypeValidator,\n  Get,\n  MaxFileSizeValidator,\n  ParseFilePipe,\n  Post,\n  Put,\n  Req,\n  Res,\n  StreamableFile,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport {\n  ApiBadRequestResponse,\n  ApiBearerAuth,\n  ApiBody,\n  ApiConsumes,\n  ApiCreatedResponse,\n  ApiOperation,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { Response } from 'express';\nimport { FourtyTwoGuard } from 'src/auth/guards/fourty-two.guard';\nimport { JwtTwoFactorGuard } from 'src/auth/guards/jwt-two-factor.guard';\nimport { CreateUserDto } from './dto/users.dto';\nimport { User } from './users.entity';\nimport { UsersService } from './users.service';\n\n@ApiTags('users')\n@Controller('users')\n@UseInterceptors(ClassSerializerInterceptor)\nexport class UsersController {\n  constructor(private readonly userService: UsersService) {}\n\n  @Get()\n  @UseGuards(JwtTwoFactorGuard)\n  async getUserInfo(@Req() req) {\n    const user: User = req.user;\n    return user;\n  }\n\n  @Get('avatar')\n  @ApiOperation({ summary: '사용자 아바타 이미지 반환 (byte array)' })\n  @UseGuards(JwtTwoFactorGuard)\n  async getUserAvatar(@Req() req, @Res({ passthrough: true }) res: Response) {\n    const avatar = await this.userService.getUserAvatar(req.user.id);\n\n    res.set({\n      'Content-Type': 'image/*',\n      'Content-Disposition': 'inline',\n    });\n\n    return new StreamableFile(avatar);\n  }\n\n  @Put('avatar')\n  @UseInterceptors(FileInterceptor('file'))\n  @UseGuards(JwtTwoFactorGuard)\n  @ApiOperation({\n    summary: '사용자 아바타 변경 기능 (3MB Limit, jpeg, bmp, jpg, png) ',\n  })\n  @ApiConsumes('multipart/form-data')\n  @ApiBody({\n    description: 'File upload',\n    schema: {\n      type: 'object',\n      properties: { file: { type: 'string', format: 'binary' } },\n    },\n  })\n  updateUserAvatar(\n    @Req() req,\n    @UploadedFile(\n      new ParseFilePipe({\n        validators: [\n          new MaxFileSizeValidator({ maxSize: 1024 * 1024 * 3 }),\n          new FileTypeValidator({\n            fileType: 'image/(jpg|jpeg|png|bmp)',\n          }),\n        ],\n      }),\n    )\n    file: Express.Multer.File,\n  ) {\n    return this.userService.updateUserAvatar(req.user.id, file.buffer);\n  }\n\n  @Delete()\n  @UseGuards(JwtTwoFactorGuard)\n  deleteUser(@Req() req) {\n    return this.userService.deleteUser(req.user.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './users.entity';\nimport { HttpModule } from '@nestjs/axios';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User]), HttpModule],\n  providers: [UsersService],\n  controllers: [UsersController],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                getAvatarFromWeb\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                getUserAvatar\n                            \n                            \n                                    Async\n                                getUserIfRefreshTokenValid\n                            \n                            \n                                    Async\n                                removeRefreshToken\n                            \n                            \n                                    Async\n                                setCurrentRefreshToken\n                            \n                            \n                                    Async\n                                setTwoFactorAuthenticationSecret\n                            \n                            \n                                    Async\n                                turnOffTwoFactorAuthentication\n                            \n                            \n                                    Async\n                                turnOnTwoFactorAuthentication\n                            \n                            \n                                    Async\n                                updateUserAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository, httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(id: number, nickname: string, avatarUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nickname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    avatarUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAvatarFromWeb\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAvatarFromWeb(url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserAvatar\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserAvatar(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:144\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserIfRefreshTokenValid\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserIfRefreshTokenValid(refreshToken: string, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeRefreshToken(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setCurrentRefreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    setCurrentRefreshToken(refreshToken: string, id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        setTwoFactorAuthenticationSecret\n                        \n                    \n                \n            \n            \n                \n                    \n                    setTwoFactorAuthenticationSecret(id: number, secret: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    secret\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        turnOffTwoFactorAuthentication\n                        \n                    \n                \n            \n            \n                \n                    \n                    turnOffTwoFactorAuthentication(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        turnOnTwoFactorAuthentication\n                        \n                    \n                \n            \n            \n                \n                    \n                    turnOnTwoFactorAuthentication(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUserAvatar\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUserAvatar(id: number, data: Buffer)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                            Buffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger('User Serivce')\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport {\n  BadRequestException,\n  Injectable,\n  Logger,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { AxiosError } from 'axios';\nimport { catchError, firstValueFrom } from 'rxjs';\nimport { Repository, UpdateResult } from 'typeorm';\nimport { User } from './users.entity';\nimport * as bcrypt from 'bcrypt';\n\nconst notFoundErrorMessage = 'User Not Found';\n\n@Injectable()\nexport class UsersService {\n  private logger: Logger = new Logger('User Serivce');\n\n  constructor(\n    @InjectRepository(User) private readonly userRepository: Repository,\n    private readonly httpService: HttpService,\n  ) {}\n\n  async setTwoFactorAuthenticationSecret(id: number, secret: string) {\n    const updateResult = await this.userRepository.update(\n      { id },\n      { twoFactorSecret: secret },\n    );\n    if (!updateResult.affected) {\n      this.logger.error(`user update failed id : ${id} secret : ${secret}`);\n      throw new NotFoundException(notFoundErrorMessage);\n    }\n    return;\n  }\n\n  async setCurrentRefreshToken(refreshToken: string, id: number) {\n    const hashedRefreshToken = await bcrypt.hash(refreshToken, 10);\n    const updateResult = await this.userRepository.update(\n      { id },\n      { hashedRefreshToken },\n    );\n    if (!updateResult.affected) {\n      this.logger.error(\n        `user update failed refreshToken: ${refreshToken} id: ${id}`,\n      );\n      throw new NotFoundException(notFoundErrorMessage);\n    }\n    return;\n  }\n\n  async getUserIfRefreshTokenValid(refreshToken: string, id: number) {\n    const user = await this.getById(id);\n    const isRefreshTokenMatch = bcrypt.compare(\n      refreshToken,\n      user.hashedRefreshToken,\n    );\n    if (isRefreshTokenMatch) {\n      return user;\n    }\n    this.logger.error(`Refresh Token is not valid. return nothing`);\n    return;\n  }\n\n  async getAvatarFromWeb(url: string): Promise {\n    const { data } = await firstValueFrom(\n      this.httpService.get(url, { responseType: 'arraybuffer' }).pipe(\n        catchError((error: AxiosError) => {\n          this.logger.error(error);\n          throw new NotFoundException('invalid avatar url');\n        }),\n      ),\n    );\n    return data;\n  }\n\n  async removeRefreshToken(id: number): Promise {\n    const updateResult = await this.userRepository.update(\n      { id },\n      { hashedRefreshToken: null },\n    );\n    if (!updateResult.affected) {\n      this.logger.error(`user update failed id : ${id}`);\n      throw new NotFoundException(notFoundErrorMessage);\n    }\n    return;\n  }\n\n  async create(id: number, nickname: string, avatarUrl: string) {\n    const isInvalidRequest = await this.userRepository.find({\n      where: [{ id }, { nickname }],\n    });\n    if (isInvalidRequest.length) {\n      this.logger.error(\n        `id: ${id}, nickname: ${nickname} duplicated user signup request`,\n      );\n      throw new BadRequestException('invalid user nickname or id');\n    }\n\n    const avatar = await this.getAvatarFromWeb(avatarUrl);\n    const user = this.userRepository.create({\n      id,\n      nickname,\n      avatar,\n    });\n    await this.userRepository.save(user);\n    return user;\n  }\n\n  async turnOnTwoFactorAuthentication(id: number) {\n    const updateResult = await this.userRepository.update(\n      { id },\n      { isTwoFactorAuthenticationEnabled: true },\n    );\n    if (!updateResult.affected) {\n      this.logger.error(`user : ${id} turn on 2FA failed`);\n      throw new NotFoundException(notFoundErrorMessage);\n    }\n    return;\n  }\n\n  async turnOffTwoFactorAuthentication(id: number) {\n    const updateResult = await this.userRepository.update(\n      { id },\n      { isTwoFactorAuthenticationEnabled: false, twoFactorSecret: null },\n    );\n    if (!updateResult.affected) {\n      this.logger.error(`user : ${id} turn off 2FA failed`);\n      throw new NotFoundException(notFoundErrorMessage);\n    }\n    return;\n  }\n\n  async getById(id: number): Promise {\n    const user = await this.userRepository.findOneBy({ id });\n    if (!user) {\n      this.logger.error(`user: ${id} is not exist`);\n      throw new NotFoundException(notFoundErrorMessage);\n    }\n    return user;\n  }\n\n  async getUserAvatar(id: number): Promise {\n    const user = await this.getById(id);\n    return user.avatar;\n  }\n\n  async deleteUser(id: number) {\n    const deleteResult = await this.userRepository.delete({ id });\n    if (!deleteResult.affected) {\n      this.logger.error(`user : ${id} delete user failed`);\n      throw new NotFoundException(notFoundErrorMessage);\n    }\n    return;\n  }\n\n  async updateUserAvatar(id: number, data: Buffer) {\n    const updateResult = await this.userRepository.update(\n      { id },\n      { avatar: data },\n    );\n    if (!updateResult.affected) {\n      this.logger.error(`user : ${id} update avatar failed`);\n      throw new NotFoundException(notFoundErrorMessage);\n    }\n    return;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Vector2D.html":{"url":"interfaces/Vector2D.html","title":"interface - Vector2D","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Vector2D\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/game.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Socket } from \"socket.io\";\n\nexport interface Vector2D {\n    x: number,\n    y: number\n};\n\ninterface Ball {\n    pos : Vector2D;\n    vel : Vector2D;\n};\n\nexport enum State {\n    WAIT,\n    START,\n    INGAME,\n    END\n};\n\ninterface Player {\n    socketid: Socket;\n    username: string;\n    y_pos : number;\n}\n\nexport interface Gameinfo {\n    score: Array;\n    state: State;\n    ball: Ball;\n    p1 : Player;\n    p2 : Player;\n}\n\nexport interface Roominfo {\n    roomid : string;\n    gameinfo : Gameinfo;\n    watchers : Array;\n};\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.constants.ts\n            \n            variable\n            FOURTY_TWO_TOKEN_URI\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.constants.ts\n            \n            variable\n            FOURTY_TWO_USER_INFO\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/auth/decorator/session-info.decorator.ts\n            \n            variable\n            SessionInfo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorator/token.decorator.ts\n            \n            variable\n            Token\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorator/user.decorator.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/auth-session.guard.ts\n            \n            guard\n            AuthSessionGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/fourty-two.guard.ts\n            \n            guard\n            FourtyTwoGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-refresh-auth.guard.ts\n            \n            injectable\n            JwtRefreshAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt-two-factor.guard.ts\n            \n            injectable\n            JwtTwoFactorGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/interface/fourty-two-token.interface.ts\n            \n            interface\n            FourtyTwoToken\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/interface/jwt-token-payload.interface.ts\n            \n            interface\n            JwtTokenPayload\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/interface/session-payload.interface.ts\n            \n            interface\n            SessionPayload\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/login.consumer.ts\n            \n            class\n            LoginConsumer\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt-refresh.strategy.ts\n            \n            injectable\n            JwtRefreshStrategy\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt-two-factor.strategy.ts\n            \n            injectable\n            JwtTwoFactorStrategy\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/two-factor-authentication/two-factor-auth.controller.ts\n            \n            controller\n            TwoFactorAuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/two-factor-authentication/two-factor-auth.service.ts\n            \n            injectable\n            TwoFactorAuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/two-factor-authentication/two-factor-auth.service.ts\n            \n            interface\n            QRCodeUrl\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/two-factor-authentication/two-factor-token.dto.ts\n            \n            class\n            TwoFactorTokenDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/channels/channelcember.entity.ts\n            \n            entity\n            ChannelMember\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/channels/channels.controller.ts\n            \n            controller\n            ChannelsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/channels/channels.entity.ts\n            \n            entity\n            Channels\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/channels/channels.service.ts\n            \n            injectable\n            ChannelsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/channels/dto/create-channel.dto.ts\n            \n            class\n            CreateChannelDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/chats/chats.controller.ts\n            \n            controller\n            ChatsController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/chats/chats.entity.ts\n            \n            entity\n            Chats\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/chats/chats.service.ts\n            \n            injectable\n            ChatsService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/chats/chats.service.ts\n            \n            function\n            getKeyByValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/user.decorator.ts\n            \n            variable\n            Users\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/events/events.channels.gateway.ts\n            \n            class\n            ChannelsGateway\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/events/events.chat.gateway.ts\n            \n            class\n            ChatGateway\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/game/game.gateway.ts\n            \n            class\n            GameGateway\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/game/game.interface.ts\n            \n            interface\n            Ball\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/game/game.interface.ts\n            \n            interface\n            Gameinfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/game/game.interface.ts\n            \n            interface\n            Player\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/game/game.interface.ts\n            \n            interface\n            Roominfo\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/game/game.interface.ts\n            \n            interface\n            Vector2D\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/game/game.service.ts\n            \n            injectable\n            GameService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/game/game.service.ts\n            \n            variable\n            ACCEL_RATIO\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/game/game.service.ts\n            \n            variable\n            BALL_RAD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/game/game.service.ts\n            \n            variable\n            BALL_VEL_INIT_X\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/game/game.service.ts\n            \n            variable\n            BALL_VEL_INIT_Y\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/game/game.service.ts\n            \n            variable\n            PADDLE_H\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/game/game.service.ts\n            \n            variable\n            PADDLE_L\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/game/game.service.ts\n            \n            variable\n            PADDLE_R\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/game/game.service.ts\n            \n            variable\n            PADDLE_SPEED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/game/game.service.ts\n            \n            variable\n            PADDLE_W\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/game/game.service.ts\n            \n            variable\n            TABLE_BOTTOM\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/game/game.service.ts\n            \n            variable\n            TABLE_LEFT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/game/game.service.ts\n            \n            variable\n            TABLE_RIGHT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/game/game.service.ts\n            \n            variable\n            TABLE_TOP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/game/game.service.ts\n            \n            variable\n            WIN_SCORE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/game/lobby.service.ts\n            \n            injectable\n            LobbyService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/users.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/users.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            variable\n            notFoundErrorMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/mocks/config.service.ts\n            \n            variable\n            mockedConfigService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/mocks/jwt.service.ts\n            \n            variable\n            mockedJwtService\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^2.0.0\n        \n            @nestjs/bull : ^0.6.3\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/jwt : ^10.0.2\n        \n            @nestjs/passport : ^9.0.3\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/platform-socket.io : ^9.3.9\n        \n            @nestjs/swagger : ^6.2.1\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            @nestjs/websockets : ^9.3.9\n        \n            @types/socket.io : ^3.0.2\n        \n            dotenv : ^16.0.3\n        \n            @types/bcrypt : ^5.0.0\n        \n            axios : ^1.3.4\n        \n            bcrypt : ^5.1.0\n        \n            bull : ^4.10.4\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            cookie-parser : ^1.4.6\n        \n            express-session : ^1.17.3\n        \n            jest-mock : ^29.4.3\n        \n            joi : ^17.8.3\n        \n            passport : ^0.6.0\n        \n            passport-http-bearer : ^1.0.1\n        \n            passport-jwt : ^4.0.1\n        \n            passport-oauth2 : ^1.6.1\n        \n            pg : ^8.9.0\n        \n            qrcode : ^1.5.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            socket.io : ^4.6.1\n        \n            speakeasy : ^2.0.0\n        \n            typeorm : ^0.3.12\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PostgresErrorCode   (src/.../postgresErrorCodes.enum.ts)\n                        \n                        \n                            State   (src/.../game.interface.ts)\n                        \n                        \n                            UserStatus   (src/.../users.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/database/postgresErrorCodes.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PostgresErrorCode\n                    \n                \n                        \n                            \n                                 UniqueViolation\n                            \n                        \n                        \n                            \n                                Value : 23505\n                            \n                        \n            \n        \n\n    src/game/game.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        State\n                    \n                \n                        \n                            \n                                 WAIT\n                            \n                        \n                        \n                            \n                                 START\n                            \n                        \n                        \n                            \n                                 INGAME\n                            \n                        \n                        \n                            \n                                 END\n                            \n                        \n            \n        \n\n    src/users/users.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        UserStatus\n                    \n                \n                        \n                            \n                                 ONLINE\n                            \n                        \n                        \n                            \n                                Value : ONLINE\n                            \n                        \n                        \n                            \n                                 OFFLINE\n                            \n                        \n                        \n                            \n                                Value : OFFLINE\n                            \n                        \n                        \n                            \n                                 INGAME\n                            \n                        \n                        \n                            \n                                Value : INGAME\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            getKeyByValue   (src/.../chats.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/chats/chats.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getKeyByValue\n                        \n                    \n                \n            \n            \n                \ngetKeyByValue(object, value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n42 Pong\n42 Pong Backend Project\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2023 ++41 Transcendence\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChannelsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ChannelsModule\n\n\n\ncluster_ChannelsModule_imports\n\n\n\ncluster_ChannelsModule_providers\n\n\n\ncluster_ChatsModule\n\n\n\ncluster_ChatsModule_providers\n\n\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_exports\n\n\n\ncluster_GameModule\n\n\n\ncluster_GameModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nChannelsModule\n\nChannelsModule\n\nAppModule -->\n\nChannelsModule->AppModule\n\n\n\n\n\nChatsModule\n\nChatsModule\n\nAppModule -->\n\nChatsModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nGameModule\n\nGameModule\n\nAppModule -->\n\nGameModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtRefreshStrategy\n\nJwtRefreshStrategy\n\nAuthModule -->\n\nJwtRefreshStrategy->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nJwtTwoFactorStrategy\n\nJwtTwoFactorStrategy\n\nAuthModule -->\n\nJwtTwoFactorStrategy->AuthModule\n\n\n\n\n\nTwoFactorAuthService\n\nTwoFactorAuthService\n\nAuthModule -->\n\nTwoFactorAuthService->AuthModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nChannelsModule -->\n\nEventsModule->ChannelsModule\n\n\n\n\n\nChannelsGateway \n\nChannelsGateway \n\nChannelsGateway  -->\n\nEventsModule->ChannelsGateway \n\n\n\n\n\nChannelsService\n\nChannelsService\n\nChannelsModule -->\n\nChannelsService->ChannelsModule\n\n\n\n\n\nChatsService\n\nChatsService\n\nChatsModule -->\n\nChatsService->ChatsModule\n\n\n\n\n\nGameService\n\nGameService\n\nGameModule -->\n\nGameService->GameModule\n\n\n\n\n\nLobbyService\n\nLobbyService\n\nGameModule -->\n\nLobbyService->GameModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GameDataType   (src/.../game.service.ts)\n                        \n                        \n                            GameType   (src/.../game.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/game/game.service.ts\n    \n    \n        \n            \n                \n                    \n                    GameDataType\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GameType\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACCEL_RATIO   (src/.../game.service.ts)\n                        \n                        \n                            BALL_RAD   (src/.../game.service.ts)\n                        \n                        \n                            BALL_VEL_INIT_X   (src/.../game.service.ts)\n                        \n                        \n                            BALL_VEL_INIT_Y   (src/.../game.service.ts)\n                        \n                        \n                            FOURTY_TWO_TOKEN_URI   (src/.../auth.constants.ts)\n                        \n                        \n                            FOURTY_TWO_USER_INFO   (src/.../auth.constants.ts)\n                        \n                        \n                            mockedConfigService   (src/.../config.service.ts)\n                        \n                        \n                            mockedJwtService   (src/.../jwt.service.ts)\n                        \n                        \n                            notFoundErrorMessage   (src/.../users.service.ts)\n                        \n                        \n                            PADDLE_H   (src/.../game.service.ts)\n                        \n                        \n                            PADDLE_L   (src/.../game.service.ts)\n                        \n                        \n                            PADDLE_R   (src/.../game.service.ts)\n                        \n                        \n                            PADDLE_SPEED   (src/.../game.service.ts)\n                        \n                        \n                            PADDLE_W   (src/.../game.service.ts)\n                        \n                        \n                            SessionInfo   (src/.../session-info.decorator.ts)\n                        \n                        \n                            TABLE_BOTTOM   (src/.../game.service.ts)\n                        \n                        \n                            TABLE_LEFT   (src/.../game.service.ts)\n                        \n                        \n                            TABLE_RIGHT   (src/.../game.service.ts)\n                        \n                        \n                            TABLE_TOP   (src/.../game.service.ts)\n                        \n                        \n                            Token   (src/.../token.decorator.ts)\n                        \n                        \n                            User   (src/.../user.decorator.ts)\n                        \n                        \n                            Users   (src/.../user.decorator.ts)\n                        \n                        \n                            WIN_SCORE   (src/.../game.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/game/game.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ACCEL_RATIO\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1.1\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BALL_RAD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BALL_VEL_INIT_X\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BALL_VEL_INIT_Y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PADDLE_H\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 160\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PADDLE_L\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 40\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PADDLE_R\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 40\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PADDLE_SPEED\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PADDLE_W\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 24\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TABLE_BOTTOM\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 400\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TABLE_LEFT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -600\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TABLE_RIGHT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 600\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TABLE_TOP\n                        \n                    \n                \n            \n                \n                    \n                        Default value : -400\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        WIN_SCORE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n\n\n        \n    \n\n    src/auth/auth.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FOURTY_TWO_TOKEN_URI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://api.intra.42.fr/oauth/token'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FOURTY_TWO_USER_INFO\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://api.intra.42.fr/v2/me'\n                    \n                \n\n\n        \n    \n\n    src/utils/mocks/config.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockedConfigService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  get(key: string) {\n    switch (key) {\n      case 'JWT_ACCESS_TOKEN_SECRET':\n        return 'test access token';\n      case 'JWT_ACCESS_TOKEN_EXPIRATION_TIME':\n        return '3600';\n      case 'JWT_REFRESH_TOKEN_SECRET':\n        return 'test refresh token';\n      case 'JWT_REFRESH_TOKEN_EXPIRATION_TIME':\n        return '7200';\n    }\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/mocks/jwt.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockedJwtService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  sign: () => 'jwt token',\n}\n                    \n                \n\n\n        \n    \n\n    src/users/users.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        notFoundErrorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'User Not Found'\n                    \n                \n\n\n        \n    \n\n    src/auth/decorator/session-info.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SessionInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.sessionInfo;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/auth/decorator/token.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Token\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.token;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/auth/decorator/user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Users\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
